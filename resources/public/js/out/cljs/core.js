// Compiled by ClojureScript 0.0-2913 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__22997__delegate = function (args){
return console.log.apply(console,(function (){var G__22996 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__22996) : cljs.core.into_array.call(null,G__22996));
})());
};
var G__22997 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22998__i = 0, G__22998__a = new Array(arguments.length -  0);
while (G__22998__i < G__22998__a.length) {G__22998__a[G__22998__i] = arguments[G__22998__i + 0]; ++G__22998__i;}
  args = new cljs.core.IndexedSeq(G__22998__a,0);
} 
return G__22997__delegate.call(this,args);};
G__22997.cljs$lang$maxFixedArity = 0;
G__22997.cljs$lang$applyTo = (function (arglist__22999){
var args = cljs.core.seq(arglist__22999);
return G__22997__delegate(args);
});
G__22997.cljs$core$IFn$_invoke$arity$variadic = G__22997__delegate;
return G__22997;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__23001 = x;
return goog.isString(G__23001);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__23003 = x__$1;
return goog.typeOf(G__23003);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__15646__auto__ = ty;
if(cljs.core.truth_(and__15646__auto__)){
return ty.cljs$lang$type;
} else {
return and__15646__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__23005 = obj;
return goog.typeOf(G__23005);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__23007 = Symbol;
return goog.typeOf(G__23007);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__16545__auto___23009 = len;
var i_23010 = (0);
while(true){
if((i_23010 < n__16545__auto___23009)){
(new_arr[i_23010] = (arr[i_23010]));

var G__23011 = (i_23010 + (1));
i_23010 = G__23011;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__23012 = (i + (1));
i = G__23012;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__23021__delegate = function (array,i,idxs){
var G__23018 = aget;
var G__23019 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__23020 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__23018,G__23019,G__23020) : cljs.core.apply.call(null,G__23018,G__23019,G__23020));
};
var G__23021 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__23022__i = 0, G__23022__a = new Array(arguments.length -  2);
while (G__23022__i < G__23022__a.length) {G__23022__a[G__23022__i] = arguments[G__23022__i + 2]; ++G__23022__i;}
  idxs = new cljs.core.IndexedSeq(G__23022__a,0);
} 
return G__23021__delegate.call(this,array,i,idxs);};
G__23021.cljs$lang$maxFixedArity = 2;
G__23021.cljs$lang$applyTo = (function (arglist__23023){
var array = cljs.core.first(arglist__23023);
arglist__23023 = cljs.core.next(arglist__23023);
var i = cljs.core.first(arglist__23023);
var idxs = cljs.core.rest(arglist__23023);
return G__23021__delegate(array,i,idxs);
});
G__23021.cljs$core$IFn$_invoke$arity$variadic = G__23021__delegate;
return G__23021;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__23024 = null;
if (arguments.length > 2) {
var G__23025__i = 0, G__23025__a = new Array(arguments.length -  2);
while (G__23025__i < G__23025__a.length) {G__23025__a[G__23025__i] = arguments[G__23025__i + 2]; ++G__23025__i;}
G__23024 = new cljs.core.IndexedSeq(G__23025__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__23024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__23034__delegate = function (array,idx,idx2,idxv){
var G__23030 = aset;
var G__23031 = (array[idx]);
var G__23032 = idx2;
var G__23033 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__23030,G__23031,G__23032,G__23033) : cljs.core.apply.call(null,G__23030,G__23031,G__23032,G__23033));
};
var G__23034 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__23035__i = 0, G__23035__a = new Array(arguments.length -  3);
while (G__23035__i < G__23035__a.length) {G__23035__a[G__23035__i] = arguments[G__23035__i + 3]; ++G__23035__i;}
  idxv = new cljs.core.IndexedSeq(G__23035__a,0);
} 
return G__23034__delegate.call(this,array,idx,idx2,idxv);};
G__23034.cljs$lang$maxFixedArity = 3;
G__23034.cljs$lang$applyTo = (function (arglist__23036){
var array = cljs.core.first(arglist__23036);
arglist__23036 = cljs.core.next(arglist__23036);
var idx = cljs.core.first(arglist__23036);
arglist__23036 = cljs.core.next(arglist__23036);
var idx2 = cljs.core.first(arglist__23036);
var idxv = cljs.core.rest(arglist__23036);
return G__23034__delegate(array,idx,idx2,idxv);
});
G__23034.cljs$core$IFn$_invoke$arity$variadic = G__23034__delegate;
return G__23034;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__23037 = null;
if (arguments.length > 3) {
var G__23038__i = 0, G__23038__a = new Array(arguments.length -  3);
while (G__23038__i < G__23038__a.length) {G__23038__a[G__23038__i] = arguments[G__23038__i + 3]; ++G__23038__i;}
G__23037 = new cljs.core.IndexedSeq(G__23038__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__23037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__23044 = (function (a,x){
a.push(x);

return a;
});
var G__23045 = [];
var G__23046 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__23044,G__23045,G__23046) : cljs.core.reduce.call(null,G__23044,G__23045,G__23046));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__23047__i = 0, G__23047__a = new Array(arguments.length -  2);
while (G__23047__i < G__23047__a.length) {G__23047__a[G__23047__i] = arguments[G__23047__i + 2]; ++G__23047__i;}
  args = new cljs.core.IndexedSeq(G__23047__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__23048){
var obj = cljs.core.first(arglist__23048);
arglist__23048 = cljs.core.next(arglist__23048);
var s = cljs.core.first(arglist__23048);
var args = cljs.core.rest(arglist__23048);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj23050 = {};
return obj23050;
})();


cljs.core.IFn = (function (){var obj23052 = {};
return obj23052;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23098 = x__16302__auto__;
return goog.typeOf(G__23098);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23100 = x__16302__auto__;
return goog.typeOf(G__23100);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23102 = x__16302__auto__;
return goog.typeOf(G__23102);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23104 = x__16302__auto__;
return goog.typeOf(G__23104);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23106 = x__16302__auto__;
return goog.typeOf(G__23106);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23108 = x__16302__auto__;
return goog.typeOf(G__23108);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23110 = x__16302__auto__;
return goog.typeOf(G__23110);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23112 = x__16302__auto__;
return goog.typeOf(G__23112);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23114 = x__16302__auto__;
return goog.typeOf(G__23114);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23116 = x__16302__auto__;
return goog.typeOf(G__23116);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23118 = x__16302__auto__;
return goog.typeOf(G__23118);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23120 = x__16302__auto__;
return goog.typeOf(G__23120);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23122 = x__16302__auto__;
return goog.typeOf(G__23122);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23124 = x__16302__auto__;
return goog.typeOf(G__23124);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23126 = x__16302__auto__;
return goog.typeOf(G__23126);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23128 = x__16302__auto__;
return goog.typeOf(G__23128);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23130 = x__16302__auto__;
return goog.typeOf(G__23130);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23132 = x__16302__auto__;
return goog.typeOf(G__23132);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23134 = x__16302__auto__;
return goog.typeOf(G__23134);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23136 = x__16302__auto__;
return goog.typeOf(G__23136);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23138 = x__16302__auto__;
return goog.typeOf(G__23138);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._invoke[(function (){var G__23140 = x__16302__auto__;
return goog.typeOf(G__23140);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._invoke["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj23142 = {};
return obj23142;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__15646__auto__ = value;
if(and__15646__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__15646__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__16302__auto__ = (((value == null))?null:value);
return (function (){var or__15658__auto__ = (cljs.core._clone[(function (){var G__23146 = x__16302__auto__;
return goog.typeOf(G__23146);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._clone["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj23148 = {};
return obj23148;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._count[(function (){var G__23152 = x__16302__auto__;
return goog.typeOf(G__23152);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._count["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj23154 = {};
return obj23154;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._empty[(function (){var G__23158 = x__16302__auto__;
return goog.typeOf(G__23158);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._empty["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj23160 = {};
return obj23160;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._conj[(function (){var G__23164 = x__16302__auto__;
return goog.typeOf(G__23164);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._conj["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj23166 = {};
return obj23166;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._nth[(function (){var G__23172 = x__16302__auto__;
return goog.typeOf(G__23172);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._nth["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._nth[(function (){var G__23174 = x__16302__auto__;
return goog.typeOf(G__23174);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._nth["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj23176 = {};
return obj23176;
})();


cljs.core.ISeq = (function (){var obj23178 = {};
return obj23178;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._first[(function (){var G__23182 = x__16302__auto__;
return goog.typeOf(G__23182);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._rest[(function (){var G__23186 = x__16302__auto__;
return goog.typeOf(G__23186);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._rest["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj23188 = {};
return obj23188;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._next[(function (){var G__23192 = x__16302__auto__;
return goog.typeOf(G__23192);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._next["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj23194 = {};
return obj23194;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._lookup[(function (){var G__23200 = x__16302__auto__;
return goog.typeOf(G__23200);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._lookup["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._lookup[(function (){var G__23202 = x__16302__auto__;
return goog.typeOf(G__23202);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._lookup["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj23204 = {};
return obj23204;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__23208 = x__16302__auto__;
return goog.typeOf(G__23208);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._assoc[(function (){var G__23212 = x__16302__auto__;
return goog.typeOf(G__23212);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj23214 = {};
return obj23214;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._dissoc[(function (){var G__23218 = x__16302__auto__;
return goog.typeOf(G__23218);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._dissoc["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj23220 = {};
return obj23220;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._key[(function (){var G__23224 = x__16302__auto__;
return goog.typeOf(G__23224);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._key["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._val[(function (){var G__23228 = x__16302__auto__;
return goog.typeOf(G__23228);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._val["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj23230 = {};
return obj23230;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._disjoin[(function (){var G__23234 = x__16302__auto__;
return goog.typeOf(G__23234);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._disjoin["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj23236 = {};
return obj23236;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._peek[(function (){var G__23240 = x__16302__auto__;
return goog.typeOf(G__23240);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._peek["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._pop[(function (){var G__23244 = x__16302__auto__;
return goog.typeOf(G__23244);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pop["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj23246 = {};
return obj23246;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_n[(function (){var G__23250 = x__16302__auto__;
return goog.typeOf(G__23250);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj23252 = {};
return obj23252;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._deref[(function (){var G__23256 = x__16302__auto__;
return goog.typeOf(G__23256);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._deref["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj23258 = {};
return obj23258;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._deref_with_timeout[(function (){var G__23262 = x__16302__auto__;
return goog.typeOf(G__23262);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj23264 = {};
return obj23264;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._meta[(function (){var G__23268 = x__16302__auto__;
return goog.typeOf(G__23268);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._meta["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj23270 = {};
return obj23270;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._with_meta[(function (){var G__23274 = x__16302__auto__;
return goog.typeOf(G__23274);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._with_meta["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj23276 = {};
return obj23276;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._reduce[(function (){var G__23282 = x__16302__auto__;
return goog.typeOf(G__23282);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._reduce[(function (){var G__23284 = x__16302__auto__;
return goog.typeOf(G__23284);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj23286 = {};
return obj23286;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._kv_reduce[(function (){var G__23290 = x__16302__auto__;
return goog.typeOf(G__23290);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj23292 = {};
return obj23292;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._equiv[(function (){var G__23296 = x__16302__auto__;
return goog.typeOf(G__23296);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._equiv["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj23298 = {};
return obj23298;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._hash[(function (){var G__23302 = x__16302__auto__;
return goog.typeOf(G__23302);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._hash["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj23304 = {};
return obj23304;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._seq[(function (){var G__23308 = x__16302__auto__;
return goog.typeOf(G__23308);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._seq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj23310 = {};
return obj23310;
})();


cljs.core.IList = (function (){var obj23312 = {};
return obj23312;
})();


cljs.core.IRecord = (function (){var obj23314 = {};
return obj23314;
})();


cljs.core.IReversible = (function (){var obj23316 = {};
return obj23316;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._rseq[(function (){var G__23320 = x__16302__auto__;
return goog.typeOf(G__23320);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._rseq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj23322 = {};
return obj23322;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._sorted_seq[(function (){var G__23326 = x__16302__auto__;
return goog.typeOf(G__23326);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._sorted_seq_from[(function (){var G__23330 = x__16302__auto__;
return goog.typeOf(G__23330);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._entry_key[(function (){var G__23334 = x__16302__auto__;
return goog.typeOf(G__23334);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._entry_key["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._comparator[(function (){var G__23338 = x__16302__auto__;
return goog.typeOf(G__23338);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._comparator["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj23340 = {};
return obj23340;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__15646__auto__ = writer;
if(and__15646__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__15646__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__16302__auto__ = (((writer == null))?null:writer);
return (function (){var or__15658__auto__ = (cljs.core._write[(function (){var G__23344 = x__16302__auto__;
return goog.typeOf(G__23344);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._write["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__15646__auto__ = writer;
if(and__15646__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__15646__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__16302__auto__ = (((writer == null))?null:writer);
return (function (){var or__15658__auto__ = (cljs.core._flush[(function (){var G__23348 = x__16302__auto__;
return goog.typeOf(G__23348);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._flush["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj23350 = {};
return obj23350;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._pr_writer[(function (){var G__23354 = x__16302__auto__;
return goog.typeOf(G__23354);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj23356 = {};
return obj23356;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__15646__auto__ = d;
if(and__15646__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__16302__auto__ = (((d == null))?null:d);
return (function (){var or__15658__auto__ = (cljs.core._realized_QMARK_[(function (){var G__23360 = x__16302__auto__;
return goog.typeOf(G__23360);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj23362 = {};
return obj23362;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._notify_watches[(function (){var G__23366 = x__16302__auto__;
return goog.typeOf(G__23366);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._add_watch[(function (){var G__23370 = x__16302__auto__;
return goog.typeOf(G__23370);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._add_watch["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__15646__auto__ = this$;
if(and__15646__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__15646__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__16302__auto__ = (((this$ == null))?null:this$);
return (function (){var or__15658__auto__ = (cljs.core._remove_watch[(function (){var G__23374 = x__16302__auto__;
return goog.typeOf(G__23374);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj23376 = {};
return obj23376;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._as_transient[(function (){var G__23380 = x__16302__auto__;
return goog.typeOf(G__23380);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._as_transient["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj23382 = {};
return obj23382;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._conj_BANG_[(function (){var G__23386 = x__16302__auto__;
return goog.typeOf(G__23386);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._persistent_BANG_[(function (){var G__23390 = x__16302__auto__;
return goog.typeOf(G__23390);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj23392 = {};
return obj23392;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_BANG_[(function (){var G__23396 = x__16302__auto__;
return goog.typeOf(G__23396);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj23398 = {};
return obj23398;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__23402 = x__16302__auto__;
return goog.typeOf(G__23402);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj23404 = {};
return obj23404;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__23408 = x__16302__auto__;
return goog.typeOf(G__23408);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._pop_BANG_[(function (){var G__23412 = x__16302__auto__;
return goog.typeOf(G__23412);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj23414 = {};
return obj23414;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__15646__auto__ = tcoll;
if(and__15646__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__16302__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__15658__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__23418 = x__16302__auto__;
return goog.typeOf(G__23418);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj23420 = {};
return obj23420;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._compare[(function (){var G__23424 = x__16302__auto__;
return goog.typeOf(G__23424);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._compare["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj23426 = {};
return obj23426;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._drop_first[(function (){var G__23430 = x__16302__auto__;
return goog.typeOf(G__23430);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._drop_first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj23432 = {};
return obj23432;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_first[(function (){var G__23436 = x__16302__auto__;
return goog.typeOf(G__23436);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_rest[(function (){var G__23440 = x__16302__auto__;
return goog.typeOf(G__23440);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj23442 = {};
return obj23442;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._chunked_next[(function (){var G__23446 = x__16302__auto__;
return goog.typeOf(G__23446);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj23448 = {};
return obj23448;
})();

cljs.core._name = (function _name(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._name[(function (){var G__23452 = x__16302__auto__;
return goog.typeOf(G__23452);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._name["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._namespace[(function (){var G__23456 = x__16302__auto__;
return goog.typeOf(G__23456);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._namespace["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj23458 = {};
return obj23458;
})();


cljs.core.IReset = (function (){var obj23460 = {};
return obj23460;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._reset_BANG_[(function (){var G__23464 = x__16302__auto__;
return goog.typeOf(G__23464);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj23466 = {};
return obj23466;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23476 = x__16302__auto__;
return goog.typeOf(G__23476);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23478 = x__16302__auto__;
return goog.typeOf(G__23478);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23480 = x__16302__auto__;
return goog.typeOf(G__23480);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._swap_BANG_[(function (){var G__23482 = x__16302__auto__;
return goog.typeOf(G__23482);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj23484 = {};
return obj23484;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__15646__auto__ = o;
if(and__15646__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__15646__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__16302__auto__ = (((o == null))?null:o);
return (function (){var or__15658__auto__ = (cljs.core._vreset_BANG_[(function (){var G__23488 = x__16302__auto__;
return goog.typeOf(G__23488);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj23490 = {};
return obj23490;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__15646__auto__ = coll;
if(and__15646__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__15646__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__16302__auto__ = (((coll == null))?null:coll);
return (function (){var or__15658__auto__ = (cljs.core._iterator[(function (){var G__23494 = x__16302__auto__;
return goog.typeOf(G__23494);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._iterator["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__23497 = (4294967295);
var G__23498 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23497,G__23498) : Math.imul.call(null,G__23497,G__23498));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__23501 = a;
var G__23502 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__23501,G__23502) : Math.imul.call(null,G__23501,G__23502));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__23503 = (i + (2));
var G__23504 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__23503;
h1 = G__23504;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj23506 = {};
return obj23506;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__23507 = (i + (1));
var G__23508 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__23507;
hash = G__23508;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj23512 = {};
return obj23512;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__23515 = o;
if(G__23515){
var bit__16332__auto__ = (G__23515.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__16332__auto__) || (G__23515.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__23516 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23516) : Math.floor.call(null,G__23516));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.not(a.ns);
if(and__15646__auto__){
return b.ns;
} else {
return and__15646__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__23523 = a.ns;
var G__23524 = b.ns;
return goog.array.defaultCompare(G__23523,G__23524);
})();
if(((0) === nsc)){
var G__23525 = a.name;
var G__23526 = b.name;
return goog.array.defaultCompare(G__23525,G__23526);
} else {
return nsc;
}
}
} else {
var G__23527 = a.name;
var G__23528 = b.name;
return goog.array.defaultCompare(G__23527,G__23528);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__16079__auto__ = self__._hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__23530 = null;
var G__23530__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__23530__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__23530 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__23530__2.call(this,self__,coll);
case 3:
return G__23530__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23530.cljs$core$IFn$_invoke$arity$2 = G__23530__2;
G__23530.cljs$core$IFn$_invoke$arity$3 = G__23530__3;
return G__23530;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args23529){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23529)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__23578 = null;
var G__23578__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__23578__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__23578__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__23578__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__23578__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__23578__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__23578__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__23578__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__23578__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__23578__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__23578__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__23578__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__23578__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__23578__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__23578__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__23578__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__23578__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__23578__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__23578__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__23578__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__23578__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__23578__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23534 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23535 = a;
var G__23536 = b;
var G__23537 = c;
var G__23538 = d;
var G__23539 = e;
var G__23540 = f;
var G__23541 = g;
var G__23542 = h;
var G__23543 = i;
var G__23544 = j;
var G__23545 = k;
var G__23546 = l;
var G__23547 = m;
var G__23548 = n;
var G__23549 = o;
var G__23550 = p;
var G__23551 = q;
var G__23552 = r;
var G__23553 = s;
var G__23554 = t;
var G__23555 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555) : cljs.core.apply.call(null,G__23534,G__23535,G__23536,G__23537,G__23538,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550,G__23551,G__23552,G__23553,G__23554,G__23555));
});
G__23578 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23578__1.call(this,self__);
case 2:
return G__23578__2.call(this,self__,a);
case 3:
return G__23578__3.call(this,self__,a,b);
case 4:
return G__23578__4.call(this,self__,a,b,c);
case 5:
return G__23578__5.call(this,self__,a,b,c,d);
case 6:
return G__23578__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23578__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23578__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23578__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23578__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23578__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23578__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23578__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23578__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23578__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23578__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23578__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23578__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23578__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23578__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23578__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23578__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23578.cljs$core$IFn$_invoke$arity$1 = G__23578__1;
G__23578.cljs$core$IFn$_invoke$arity$2 = G__23578__2;
G__23578.cljs$core$IFn$_invoke$arity$3 = G__23578__3;
G__23578.cljs$core$IFn$_invoke$arity$4 = G__23578__4;
G__23578.cljs$core$IFn$_invoke$arity$5 = G__23578__5;
G__23578.cljs$core$IFn$_invoke$arity$6 = G__23578__6;
G__23578.cljs$core$IFn$_invoke$arity$7 = G__23578__7;
G__23578.cljs$core$IFn$_invoke$arity$8 = G__23578__8;
G__23578.cljs$core$IFn$_invoke$arity$9 = G__23578__9;
G__23578.cljs$core$IFn$_invoke$arity$10 = G__23578__10;
G__23578.cljs$core$IFn$_invoke$arity$11 = G__23578__11;
G__23578.cljs$core$IFn$_invoke$arity$12 = G__23578__12;
G__23578.cljs$core$IFn$_invoke$arity$13 = G__23578__13;
G__23578.cljs$core$IFn$_invoke$arity$14 = G__23578__14;
G__23578.cljs$core$IFn$_invoke$arity$15 = G__23578__15;
G__23578.cljs$core$IFn$_invoke$arity$16 = G__23578__16;
G__23578.cljs$core$IFn$_invoke$arity$17 = G__23578__17;
G__23578.cljs$core$IFn$_invoke$arity$18 = G__23578__18;
G__23578.cljs$core$IFn$_invoke$arity$19 = G__23578__19;
G__23578.cljs$core$IFn$_invoke$arity$20 = G__23578__20;
G__23578.cljs$core$IFn$_invoke$arity$21 = G__23578__21;
G__23578.cljs$core$IFn$_invoke$arity$22 = G__23578__22;
return G__23578;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args23533){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23533)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__23556 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__23557 = a;
var G__23558 = b;
var G__23559 = c;
var G__23560 = d;
var G__23561 = e;
var G__23562 = f;
var G__23563 = g;
var G__23564 = h;
var G__23565 = i;
var G__23566 = j;
var G__23567 = k;
var G__23568 = l;
var G__23569 = m;
var G__23570 = n;
var G__23571 = o;
var G__23572 = p;
var G__23573 = q;
var G__23574 = r;
var G__23575 = s;
var G__23576 = t;
var G__23577 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577) : cljs.core.apply.call(null,G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__23580 = x;
if(G__23580){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__23580.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__23580.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23580);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__23580);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__23582 = value;
if(G__23582){
var bit__16339__auto__ = (G__23582.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__16339__auto__) || (G__23582.cljs$core$ICloneable$)){
return true;
} else {
if((!G__23582.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23582);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__23582);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23584 = coll;
if(G__23584){
var bit__16332__auto__ = (G__23584.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16332__auto__) || (G__23584.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23586 = coll;
if(G__23586){
var bit__16332__auto__ = (G__23586.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__23586.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__23588 = coll;
if(G__23588){
var bit__16332__auto__ = (G__23588.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__23588.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__23590 = coll;
if(G__23590){
var bit__16332__auto__ = (G__23590.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16332__auto__) || (G__23590.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__23595__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__23596 = y;
var G__23597 = cljs.core.first(more);
var G__23598 = cljs.core.next(more);
x = G__23596;
y = G__23597;
more = G__23598;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__23595 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23599__i = 0, G__23599__a = new Array(arguments.length -  2);
while (G__23599__i < G__23599__a.length) {G__23599__a[G__23599__i] = arguments[G__23599__i + 2]; ++G__23599__i;}
  more = new cljs.core.IndexedSeq(G__23599__a,0);
} 
return G__23595__delegate.call(this,x,y,more);};
G__23595.cljs$lang$maxFixedArity = 2;
G__23595.cljs$lang$applyTo = (function (arglist__23600){
var x = cljs.core.first(arglist__23600);
arglist__23600 = cljs.core.next(arglist__23600);
var y = cljs.core.first(arglist__23600);
var more = cljs.core.rest(arglist__23600);
return G__23595__delegate(x,y,more);
});
G__23595.cljs$core$IFn$_invoke$arity$variadic = G__23595__delegate;
return G__23595;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__23601 = null;
if (arguments.length > 2) {
var G__23602__i = 0, G__23602__a = new Array(arguments.length -  2);
while (G__23602__i < G__23602__a.length) {G__23602__a[G__23602__i] = arguments[G__23602__i + 2]; ++G__23602__i;}
G__23601 = new cljs.core.IndexedSeq(G__23602__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__23603 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__23603) : cljs.core.es6_iterator_seq.call(null,G__23603));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23604 = (n + (1));
var G__23605 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23606 = cljs.core.next(coll__$1);
n = G__23604;
hash_code = G__23605;
coll__$1 = G__23606;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__23607 = (n + (1));
var G__23608 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__23609 = cljs.core.next(coll__$1);
n = G__23607;
hash_code = G__23608;
coll__$1 = G__23609;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__23610 = o;
return goog.getUid(G__23610);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__23612 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23612) : cljs.core.deref.call(null,G__23612));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23619 = val;
var G__23620 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23619,G__23620) : f.call(null,G__23619,G__23620));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23625 = nval;
var G__23626 = (n + (1));
val = G__23625;
n = G__23626;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23621 = val__$1;
var G__23622 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23621,G__23622) : f.call(null,G__23621,G__23622));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23627 = nval;
var G__23628 = (n + (1));
val__$1 = G__23627;
n = G__23628;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23623 = val__$1;
var G__23624 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23623,G__23624) : f.call(null,G__23623,G__23624));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23629 = nval;
var G__23630 = (n + (1));
val__$1 = G__23629;
n = G__23630;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__23637 = val;
var G__23638 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23637,G__23638) : f.call(null,G__23637,G__23638));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23643 = nval;
var G__23644 = (n + (1));
val = G__23643;
n = G__23644;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__23639 = val__$1;
var G__23640 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23639,G__23640) : f.call(null,G__23639,G__23640));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23645 = nval;
var G__23646 = (n + (1));
val__$1 = G__23645;
n = G__23646;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__23641 = val__$1;
var G__23642 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23641,G__23642) : f.call(null,G__23641,G__23642));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__23647 = nval;
var G__23648 = (n + (1));
val__$1 = G__23647;
n = G__23648;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__23650 = x;
if(G__23650){
var bit__16339__auto__ = (G__23650.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16339__auto__) || (G__23650.cljs$core$ICounted$)){
return true;
} else {
if((!G__23650.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23650);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__23650);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__23652 = x;
if(G__23652){
var bit__16339__auto__ = (G__23652.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16339__auto__) || (G__23652.cljs$core$IIndexed$)){
return true;
} else {
if((!G__23652.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23652);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__23652);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23653 = coll__$1;
var G__23654 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23653,G__23654) : cljs.core.equiv_sequential.call(null,G__23653,G__23654));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23655 = o;
var G__23656 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23655,G__23656) : cljs.core.cons.call(null,G__23655,G__23656));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__23659 = coll__$1;
var G__23660 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__23659,G__23660) : cljs.core.equiv_sequential.call(null,G__23659,G__23660));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23661 = cljs.core.List.EMPTY;
var G__23662 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__23661,G__23662) : cljs.core.with_meta.call(null,G__23661,G__23662));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__23663 = f;
var G__23664 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__23663,G__23664) : cljs.core.seq_reduce.call(null,G__23663,G__23664));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__23665 = f;
var G__23666 = start;
var G__23667 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__23665,G__23666,G__23667) : cljs.core.seq_reduce.call(null,G__23665,G__23666,G__23667));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23668 = o;
var G__23669 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__23668,G__23669) : cljs.core.cons.call(null,G__23668,G__23669));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__23670 = sn;
s = G__23670;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__23675__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__23676 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__23677 = cljs.core.first(xs);
var G__23678 = cljs.core.next(xs);
coll = G__23676;
x = G__23677;
xs = G__23678;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__23675 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__23679__i = 0, G__23679__a = new Array(arguments.length -  2);
while (G__23679__i < G__23679__a.length) {G__23679__a[G__23679__i] = arguments[G__23679__i + 2]; ++G__23679__i;}
  xs = new cljs.core.IndexedSeq(G__23679__a,0);
} 
return G__23675__delegate.call(this,coll,x,xs);};
G__23675.cljs$lang$maxFixedArity = 2;
G__23675.cljs$lang$applyTo = (function (arglist__23680){
var coll = cljs.core.first(arglist__23680);
arglist__23680 = cljs.core.next(arglist__23680);
var x = cljs.core.first(arglist__23680);
var xs = cljs.core.rest(arglist__23680);
return G__23675__delegate(coll,x,xs);
});
G__23675.cljs$core$IFn$_invoke$arity$variadic = G__23675__delegate;
return G__23675;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__23681 = null;
if (arguments.length > 2) {
var G__23682__i = 0, G__23682__a = new Array(arguments.length -  2);
while (G__23682__i < G__23682__a.length) {G__23682__a[G__23682__i] = arguments[G__23682__i + 2]; ++G__23682__i;}
G__23681 = new cljs.core.IndexedSeq(G__23682__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__23681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__23683 = cljs.core.next(s);
var G__23684 = (acc + (1));
s = G__23683;
acc = G__23684;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__23686 = coll;
if(G__23686){
var bit__16332__auto__ = (G__23686.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__16332__auto__) || (G__23686.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__23687 = cljs.core.next(coll);
var G__23688 = (n - (1));
coll = G__23687;
n = G__23688;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__23689 = cljs.core.next(coll);
var G__23690 = (n - (1));
var G__23691 = not_found;
coll = G__23689;
n = G__23690;
not_found = G__23691;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__23696 = coll;
if(G__23696){
var bit__16332__auto__ = (G__23696.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16332__auto__) || (G__23696.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23697 = coll;
if(G__23697){
var bit__16339__auto__ = (G__23697.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__23697.cljs$core$ISeq$)){
return true;
} else {
if((!G__23697.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23697);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23697);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__23698 = coll;
if(G__23698){
var bit__16332__auto__ = (G__23698.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__16332__auto__) || (G__23698.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__23699 = coll;
if(G__23699){
var bit__16339__auto__ = (G__23699.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__23699.cljs$core$ISeq$)){
return true;
} else {
if((!G__23699.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23699);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__23699);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__23700 = (n__$1 - (1));
var G__23701 = cljs.core.rest(xs);
n__$1 = G__23700;
xs = G__23701;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__23704 = o;
if(G__23704){
var bit__16332__auto__ = (G__23704.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16332__auto__) || (G__23704.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__23705 = o;
if(G__23705){
var bit__16332__auto__ = (G__23705.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16332__auto__) || (G__23705.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__23709__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__23710 = ret;
var G__23711 = cljs.core.first(kvs);
var G__23712 = cljs.core.second(kvs);
var G__23713 = cljs.core.nnext(kvs);
coll = G__23710;
k = G__23711;
v = G__23712;
kvs = G__23713;
continue;
} else {
return ret;
}
break;
}
};
var G__23709 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__23714__i = 0, G__23714__a = new Array(arguments.length -  3);
while (G__23714__i < G__23714__a.length) {G__23714__a[G__23714__i] = arguments[G__23714__i + 3]; ++G__23714__i;}
  kvs = new cljs.core.IndexedSeq(G__23714__a,0);
} 
return G__23709__delegate.call(this,coll,k,v,kvs);};
G__23709.cljs$lang$maxFixedArity = 3;
G__23709.cljs$lang$applyTo = (function (arglist__23715){
var coll = cljs.core.first(arglist__23715);
arglist__23715 = cljs.core.next(arglist__23715);
var k = cljs.core.first(arglist__23715);
arglist__23715 = cljs.core.next(arglist__23715);
var v = cljs.core.first(arglist__23715);
var kvs = cljs.core.rest(arglist__23715);
return G__23709__delegate(coll,k,v,kvs);
});
G__23709.cljs$core$IFn$_invoke$arity$variadic = G__23709__delegate;
return G__23709;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__23716 = null;
if (arguments.length > 3) {
var G__23717__i = 0, G__23717__a = new Array(arguments.length -  3);
while (G__23717__i < G__23717__a.length) {G__23717__a[G__23717__i] = arguments[G__23717__i + 3]; ++G__23717__i;}
G__23716 = new cljs.core.IndexedSeq(G__23717__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__23716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__23720__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__23721 = ret;
var G__23722 = cljs.core.first(ks);
var G__23723 = cljs.core.next(ks);
coll = G__23721;
k = G__23722;
ks = G__23723;
continue;
} else {
return ret;
}
}
break;
}
};
var G__23720 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__23724__i = 0, G__23724__a = new Array(arguments.length -  2);
while (G__23724__i < G__23724__a.length) {G__23724__a[G__23724__i] = arguments[G__23724__i + 2]; ++G__23724__i;}
  ks = new cljs.core.IndexedSeq(G__23724__a,0);
} 
return G__23720__delegate.call(this,coll,k,ks);};
G__23720.cljs$lang$maxFixedArity = 2;
G__23720.cljs$lang$applyTo = (function (arglist__23725){
var coll = cljs.core.first(arglist__23725);
arglist__23725 = cljs.core.next(arglist__23725);
var k = cljs.core.first(arglist__23725);
var ks = cljs.core.rest(arglist__23725);
return G__23720__delegate(coll,k,ks);
});
G__23720.cljs$core$IFn$_invoke$arity$variadic = G__23720__delegate;
return G__23720;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__23726 = null;
if (arguments.length > 2) {
var G__23727__i = 0, G__23727__a = new Array(arguments.length -  2);
while (G__23727__i < G__23727__a.length) {G__23727__a[G__23727__i] = arguments[G__23727__i + 2]; ++G__23727__i;}
G__23726 = new cljs.core.IndexedSeq(G__23727__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__23726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__15658__auto__ = (function (){var G__23732 = f;
return goog.isFunction(G__23732);
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__23733 = f;
if(G__23733){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto____$1 = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
return G__23733.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__23733.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23733);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__23733);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__24199 = null;
var G__24199__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__24199__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23735 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23735) : self__.afn.call(null,G__23735));
});
var G__24199__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23736 = a;
var G__23737 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23736,G__23737) : self__.afn.call(null,G__23736,G__23737));
});
var G__24199__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23738 = a;
var G__23739 = b;
var G__23740 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23738,G__23739,G__23740) : self__.afn.call(null,G__23738,G__23739,G__23740));
});
var G__24199__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23741 = a;
var G__23742 = b;
var G__23743 = c;
var G__23744 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23741,G__23742,G__23743,G__23744) : self__.afn.call(null,G__23741,G__23742,G__23743,G__23744));
});
var G__24199__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23745 = a;
var G__23746 = b;
var G__23747 = c;
var G__23748 = d;
var G__23749 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23745,G__23746,G__23747,G__23748,G__23749) : self__.afn.call(null,G__23745,G__23746,G__23747,G__23748,G__23749));
});
var G__24199__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23750 = a;
var G__23751 = b;
var G__23752 = c;
var G__23753 = d;
var G__23754 = e;
var G__23755 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23750,G__23751,G__23752,G__23753,G__23754,G__23755) : self__.afn.call(null,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755));
});
var G__24199__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23756 = a;
var G__23757 = b;
var G__23758 = c;
var G__23759 = d;
var G__23760 = e;
var G__23761 = f;
var G__23762 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762) : self__.afn.call(null,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762));
});
var G__24199__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23763 = a;
var G__23764 = b;
var G__23765 = c;
var G__23766 = d;
var G__23767 = e;
var G__23768 = f;
var G__23769 = g;
var G__23770 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770) : self__.afn.call(null,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770));
});
var G__24199__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23771 = a;
var G__23772 = b;
var G__23773 = c;
var G__23774 = d;
var G__23775 = e;
var G__23776 = f;
var G__23777 = g;
var G__23778 = h;
var G__23779 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779) : self__.afn.call(null,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779));
});
var G__24199__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23780 = a;
var G__23781 = b;
var G__23782 = c;
var G__23783 = d;
var G__23784 = e;
var G__23785 = f;
var G__23786 = g;
var G__23787 = h;
var G__23788 = i;
var G__23789 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789) : self__.afn.call(null,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789));
});
var G__24199__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23790 = a;
var G__23791 = b;
var G__23792 = c;
var G__23793 = d;
var G__23794 = e;
var G__23795 = f;
var G__23796 = g;
var G__23797 = h;
var G__23798 = i;
var G__23799 = j;
var G__23800 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800) : self__.afn.call(null,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800));
});
var G__24199__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23801 = a;
var G__23802 = b;
var G__23803 = c;
var G__23804 = d;
var G__23805 = e;
var G__23806 = f;
var G__23807 = g;
var G__23808 = h;
var G__23809 = i;
var G__23810 = j;
var G__23811 = k;
var G__23812 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812) : self__.afn.call(null,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812));
});
var G__24199__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23813 = a;
var G__23814 = b;
var G__23815 = c;
var G__23816 = d;
var G__23817 = e;
var G__23818 = f;
var G__23819 = g;
var G__23820 = h;
var G__23821 = i;
var G__23822 = j;
var G__23823 = k;
var G__23824 = l;
var G__23825 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825) : self__.afn.call(null,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825));
});
var G__24199__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23826 = a;
var G__23827 = b;
var G__23828 = c;
var G__23829 = d;
var G__23830 = e;
var G__23831 = f;
var G__23832 = g;
var G__23833 = h;
var G__23834 = i;
var G__23835 = j;
var G__23836 = k;
var G__23837 = l;
var G__23838 = m;
var G__23839 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839) : self__.afn.call(null,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839));
});
var G__24199__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23840 = a;
var G__23841 = b;
var G__23842 = c;
var G__23843 = d;
var G__23844 = e;
var G__23845 = f;
var G__23846 = g;
var G__23847 = h;
var G__23848 = i;
var G__23849 = j;
var G__23850 = k;
var G__23851 = l;
var G__23852 = m;
var G__23853 = n;
var G__23854 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854) : self__.afn.call(null,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854));
});
var G__24199__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23855 = a;
var G__23856 = b;
var G__23857 = c;
var G__23858 = d;
var G__23859 = e;
var G__23860 = f;
var G__23861 = g;
var G__23862 = h;
var G__23863 = i;
var G__23864 = j;
var G__23865 = k;
var G__23866 = l;
var G__23867 = m;
var G__23868 = n;
var G__23869 = o;
var G__23870 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870) : self__.afn.call(null,G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870));
});
var G__24199__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23871 = a;
var G__23872 = b;
var G__23873 = c;
var G__23874 = d;
var G__23875 = e;
var G__23876 = f;
var G__23877 = g;
var G__23878 = h;
var G__23879 = i;
var G__23880 = j;
var G__23881 = k;
var G__23882 = l;
var G__23883 = m;
var G__23884 = n;
var G__23885 = o;
var G__23886 = p;
var G__23887 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887) : self__.afn.call(null,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887));
});
var G__24199__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23888 = a;
var G__23889 = b;
var G__23890 = c;
var G__23891 = d;
var G__23892 = e;
var G__23893 = f;
var G__23894 = g;
var G__23895 = h;
var G__23896 = i;
var G__23897 = j;
var G__23898 = k;
var G__23899 = l;
var G__23900 = m;
var G__23901 = n;
var G__23902 = o;
var G__23903 = p;
var G__23904 = q;
var G__23905 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905) : self__.afn.call(null,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905));
});
var G__24199__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23906 = a;
var G__23907 = b;
var G__23908 = c;
var G__23909 = d;
var G__23910 = e;
var G__23911 = f;
var G__23912 = g;
var G__23913 = h;
var G__23914 = i;
var G__23915 = j;
var G__23916 = k;
var G__23917 = l;
var G__23918 = m;
var G__23919 = n;
var G__23920 = o;
var G__23921 = p;
var G__23922 = q;
var G__23923 = r;
var G__23924 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924) : self__.afn.call(null,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924));
});
var G__24199__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23925 = a;
var G__23926 = b;
var G__23927 = c;
var G__23928 = d;
var G__23929 = e;
var G__23930 = f;
var G__23931 = g;
var G__23932 = h;
var G__23933 = i;
var G__23934 = j;
var G__23935 = k;
var G__23936 = l;
var G__23937 = m;
var G__23938 = n;
var G__23939 = o;
var G__23940 = p;
var G__23941 = q;
var G__23942 = r;
var G__23943 = s;
var G__23944 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944) : self__.afn.call(null,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944));
});
var G__24199__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__23945 = self__.afn;
var G__23946 = a;
var G__23947 = b;
var G__23948 = c;
var G__23949 = d;
var G__23950 = e;
var G__23951 = f;
var G__23952 = g;
var G__23953 = h;
var G__23954 = i;
var G__23955 = j;
var G__23956 = k;
var G__23957 = l;
var G__23958 = m;
var G__23959 = n;
var G__23960 = o;
var G__23961 = p;
var G__23962 = q;
var G__23963 = r;
var G__23964 = s;
var G__23965 = t;
var G__23966 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966) : cljs.core.apply.call(null,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966));
});
G__24199 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24199__1.call(this,self__);
case 2:
return G__24199__2.call(this,self__,a);
case 3:
return G__24199__3.call(this,self__,a,b);
case 4:
return G__24199__4.call(this,self__,a,b,c);
case 5:
return G__24199__5.call(this,self__,a,b,c,d);
case 6:
return G__24199__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24199__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24199__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24199__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24199__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24199__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24199__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24199__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24199__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24199__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24199__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24199__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24199__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24199__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24199__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24199__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24199__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24199.cljs$core$IFn$_invoke$arity$1 = G__24199__1;
G__24199.cljs$core$IFn$_invoke$arity$2 = G__24199__2;
G__24199.cljs$core$IFn$_invoke$arity$3 = G__24199__3;
G__24199.cljs$core$IFn$_invoke$arity$4 = G__24199__4;
G__24199.cljs$core$IFn$_invoke$arity$5 = G__24199__5;
G__24199.cljs$core$IFn$_invoke$arity$6 = G__24199__6;
G__24199.cljs$core$IFn$_invoke$arity$7 = G__24199__7;
G__24199.cljs$core$IFn$_invoke$arity$8 = G__24199__8;
G__24199.cljs$core$IFn$_invoke$arity$9 = G__24199__9;
G__24199.cljs$core$IFn$_invoke$arity$10 = G__24199__10;
G__24199.cljs$core$IFn$_invoke$arity$11 = G__24199__11;
G__24199.cljs$core$IFn$_invoke$arity$12 = G__24199__12;
G__24199.cljs$core$IFn$_invoke$arity$13 = G__24199__13;
G__24199.cljs$core$IFn$_invoke$arity$14 = G__24199__14;
G__24199.cljs$core$IFn$_invoke$arity$15 = G__24199__15;
G__24199.cljs$core$IFn$_invoke$arity$16 = G__24199__16;
G__24199.cljs$core$IFn$_invoke$arity$17 = G__24199__17;
G__24199.cljs$core$IFn$_invoke$arity$18 = G__24199__18;
G__24199.cljs$core$IFn$_invoke$arity$19 = G__24199__19;
G__24199.cljs$core$IFn$_invoke$arity$20 = G__24199__20;
G__24199.cljs$core$IFn$_invoke$arity$21 = G__24199__21;
G__24199.cljs$core$IFn$_invoke$arity$22 = G__24199__22;
return G__24199;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args23734){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23734)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__23967 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__23967) : self__.afn.call(null,G__23967));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__23968 = a;
var G__23969 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__23968,G__23969) : self__.afn.call(null,G__23968,G__23969));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__23970 = a;
var G__23971 = b;
var G__23972 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__23970,G__23971,G__23972) : self__.afn.call(null,G__23970,G__23971,G__23972));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__23973 = a;
var G__23974 = b;
var G__23975 = c;
var G__23976 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__23973,G__23974,G__23975,G__23976) : self__.afn.call(null,G__23973,G__23974,G__23975,G__23976));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__23977 = a;
var G__23978 = b;
var G__23979 = c;
var G__23980 = d;
var G__23981 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__23977,G__23978,G__23979,G__23980,G__23981) : self__.afn.call(null,G__23977,G__23978,G__23979,G__23980,G__23981));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__23982 = a;
var G__23983 = b;
var G__23984 = c;
var G__23985 = d;
var G__23986 = e;
var G__23987 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__23982,G__23983,G__23984,G__23985,G__23986,G__23987) : self__.afn.call(null,G__23982,G__23983,G__23984,G__23985,G__23986,G__23987));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__23988 = a;
var G__23989 = b;
var G__23990 = c;
var G__23991 = d;
var G__23992 = e;
var G__23993 = f;
var G__23994 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994) : self__.afn.call(null,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__23995 = a;
var G__23996 = b;
var G__23997 = c;
var G__23998 = d;
var G__23999 = e;
var G__24000 = f;
var G__24001 = g;
var G__24002 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002) : self__.afn.call(null,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__24003 = a;
var G__24004 = b;
var G__24005 = c;
var G__24006 = d;
var G__24007 = e;
var G__24008 = f;
var G__24009 = g;
var G__24010 = h;
var G__24011 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011) : self__.afn.call(null,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__24012 = a;
var G__24013 = b;
var G__24014 = c;
var G__24015 = d;
var G__24016 = e;
var G__24017 = f;
var G__24018 = g;
var G__24019 = h;
var G__24020 = i;
var G__24021 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021) : self__.afn.call(null,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__24022 = a;
var G__24023 = b;
var G__24024 = c;
var G__24025 = d;
var G__24026 = e;
var G__24027 = f;
var G__24028 = g;
var G__24029 = h;
var G__24030 = i;
var G__24031 = j;
var G__24032 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032) : self__.afn.call(null,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__24033 = a;
var G__24034 = b;
var G__24035 = c;
var G__24036 = d;
var G__24037 = e;
var G__24038 = f;
var G__24039 = g;
var G__24040 = h;
var G__24041 = i;
var G__24042 = j;
var G__24043 = k;
var G__24044 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044) : self__.afn.call(null,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__24045 = a;
var G__24046 = b;
var G__24047 = c;
var G__24048 = d;
var G__24049 = e;
var G__24050 = f;
var G__24051 = g;
var G__24052 = h;
var G__24053 = i;
var G__24054 = j;
var G__24055 = k;
var G__24056 = l;
var G__24057 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055,G__24056,G__24057) : self__.afn.call(null,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055,G__24056,G__24057));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__24058 = a;
var G__24059 = b;
var G__24060 = c;
var G__24061 = d;
var G__24062 = e;
var G__24063 = f;
var G__24064 = g;
var G__24065 = h;
var G__24066 = i;
var G__24067 = j;
var G__24068 = k;
var G__24069 = l;
var G__24070 = m;
var G__24071 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071) : self__.afn.call(null,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__24072 = a;
var G__24073 = b;
var G__24074 = c;
var G__24075 = d;
var G__24076 = e;
var G__24077 = f;
var G__24078 = g;
var G__24079 = h;
var G__24080 = i;
var G__24081 = j;
var G__24082 = k;
var G__24083 = l;
var G__24084 = m;
var G__24085 = n;
var G__24086 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086) : self__.afn.call(null,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__24087 = a;
var G__24088 = b;
var G__24089 = c;
var G__24090 = d;
var G__24091 = e;
var G__24092 = f;
var G__24093 = g;
var G__24094 = h;
var G__24095 = i;
var G__24096 = j;
var G__24097 = k;
var G__24098 = l;
var G__24099 = m;
var G__24100 = n;
var G__24101 = o;
var G__24102 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102) : self__.afn.call(null,G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__24103 = a;
var G__24104 = b;
var G__24105 = c;
var G__24106 = d;
var G__24107 = e;
var G__24108 = f;
var G__24109 = g;
var G__24110 = h;
var G__24111 = i;
var G__24112 = j;
var G__24113 = k;
var G__24114 = l;
var G__24115 = m;
var G__24116 = n;
var G__24117 = o;
var G__24118 = p;
var G__24119 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118,G__24119) : self__.afn.call(null,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116,G__24117,G__24118,G__24119));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__24120 = a;
var G__24121 = b;
var G__24122 = c;
var G__24123 = d;
var G__24124 = e;
var G__24125 = f;
var G__24126 = g;
var G__24127 = h;
var G__24128 = i;
var G__24129 = j;
var G__24130 = k;
var G__24131 = l;
var G__24132 = m;
var G__24133 = n;
var G__24134 = o;
var G__24135 = p;
var G__24136 = q;
var G__24137 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137) : self__.afn.call(null,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__24138 = a;
var G__24139 = b;
var G__24140 = c;
var G__24141 = d;
var G__24142 = e;
var G__24143 = f;
var G__24144 = g;
var G__24145 = h;
var G__24146 = i;
var G__24147 = j;
var G__24148 = k;
var G__24149 = l;
var G__24150 = m;
var G__24151 = n;
var G__24152 = o;
var G__24153 = p;
var G__24154 = q;
var G__24155 = r;
var G__24156 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156) : self__.afn.call(null,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__24157 = a;
var G__24158 = b;
var G__24159 = c;
var G__24160 = d;
var G__24161 = e;
var G__24162 = f;
var G__24163 = g;
var G__24164 = h;
var G__24165 = i;
var G__24166 = j;
var G__24167 = k;
var G__24168 = l;
var G__24169 = m;
var G__24170 = n;
var G__24171 = o;
var G__24172 = p;
var G__24173 = q;
var G__24174 = r;
var G__24175 = s;
var G__24176 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176) : self__.afn.call(null,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__24177 = self__.afn;
var G__24178 = a;
var G__24179 = b;
var G__24180 = c;
var G__24181 = d;
var G__24182 = e;
var G__24183 = f;
var G__24184 = g;
var G__24185 = h;
var G__24186 = i;
var G__24187 = j;
var G__24188 = k;
var G__24189 = l;
var G__24190 = m;
var G__24191 = n;
var G__24192 = o;
var G__24193 = p;
var G__24194 = q;
var G__24195 = r;
var G__24196 = s;
var G__24197 = t;
var G__24198 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198) : cljs.core.apply.call(null,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__24203 = o;
if(G__24203){
var bit__16339__auto__ = (G__24203.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__16339__auto__) || (G__24203.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__24203.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24203);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__24203);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__15646__auto__ = !((o == null));
if(and__15646__auto__){
var G__24207 = o;
if(G__24207){
var bit__16339__auto__ = (G__24207.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16339__auto__) || (G__24207.cljs$core$IMeta$)){
return true;
} else {
if((!G__24207.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24207);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24207);
}
} else {
return and__15646__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__24210__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__24211 = ret;
var G__24212 = cljs.core.first(ks);
var G__24213 = cljs.core.next(ks);
coll = G__24211;
k = G__24212;
ks = G__24213;
continue;
} else {
return ret;
}
}
break;
}
};
var G__24210 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24214__i = 0, G__24214__a = new Array(arguments.length -  2);
while (G__24214__i < G__24214__a.length) {G__24214__a[G__24214__i] = arguments[G__24214__i + 2]; ++G__24214__i;}
  ks = new cljs.core.IndexedSeq(G__24214__a,0);
} 
return G__24210__delegate.call(this,coll,k,ks);};
G__24210.cljs$lang$maxFixedArity = 2;
G__24210.cljs$lang$applyTo = (function (arglist__24215){
var coll = cljs.core.first(arglist__24215);
arglist__24215 = cljs.core.next(arglist__24215);
var k = cljs.core.first(arglist__24215);
var ks = cljs.core.rest(arglist__24215);
return G__24210__delegate(coll,k,ks);
});
G__24210.cljs$core$IFn$_invoke$arity$variadic = G__24210__delegate;
return G__24210;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__24216 = null;
if (arguments.length > 2) {
var G__24217__i = 0, G__24217__a = new Array(arguments.length -  2);
while (G__24217__i < G__24217__a.length) {G__24217__a[G__24217__i] = arguments[G__24217__i + 2]; ++G__24217__i;}
G__24216 = new cljs.core.IndexedSeq(G__24217__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__24216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24219 = x;
if(G__24219){
var bit__16339__auto__ = (G__24219.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__16339__auto__) || (G__24219.cljs$core$ICollection$)){
return true;
} else {
if((!G__24219.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24219);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__24219);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24221 = x;
if(G__24221){
var bit__16339__auto__ = (G__24221.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__16339__auto__) || (G__24221.cljs$core$ISet$)){
return true;
} else {
if((!G__24221.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24221);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__24221);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__24223 = x;
if(G__24223){
var bit__16339__auto__ = (G__24223.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__16339__auto__) || (G__24223.cljs$core$IAssociative$)){
return true;
} else {
if((!G__24223.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24223);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__24223);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__24225 = x;
if(G__24225){
var bit__16339__auto__ = (G__24225.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__16339__auto__) || (G__24225.cljs$core$ISequential$)){
return true;
} else {
if((!G__24225.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24225);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__24225);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__24227 = x;
if(G__24227){
var bit__16339__auto__ = (G__24227.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__16339__auto__) || (G__24227.cljs$core$ISorted$)){
return true;
} else {
if((!G__24227.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24227);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__24227);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__24229 = x;
if(G__24229){
var bit__16339__auto__ = (G__24229.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16339__auto__) || (G__24229.cljs$core$IReduce$)){
return true;
} else {
if((!G__24229.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24229);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__24229);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__24231 = x;
if(G__24231){
var bit__16339__auto__ = (G__24231.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16339__auto__) || (G__24231.cljs$core$IMap$)){
return true;
} else {
if((!G__24231.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24231);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__24231);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__24233 = x;
if(G__24233){
var bit__16339__auto__ = (G__24233.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__16339__auto__) || (G__24233.cljs$core$IVector$)){
return true;
} else {
if((!G__24233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__24233);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__24235 = x;
if(G__24235){
var bit__16332__auto__ = (G__24235.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__16332__auto__) || (G__24235.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj24241 = {};
return obj24241;
});
var js_obj__1 = (function() { 
var G__24244__delegate = function (keyvals){
var G__24242 = goog.object.create;
var G__24243 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__24242,G__24243) : cljs.core.apply.call(null,G__24242,G__24243));
};
var G__24244 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24245__i = 0, G__24245__a = new Array(arguments.length -  0);
while (G__24245__i < G__24245__a.length) {G__24245__a[G__24245__i] = arguments[G__24245__i + 0]; ++G__24245__i;}
  keyvals = new cljs.core.IndexedSeq(G__24245__a,0);
} 
return G__24244__delegate.call(this,keyvals);};
G__24244.cljs$lang$maxFixedArity = 0;
G__24244.cljs$lang$applyTo = (function (arglist__24246){
var keyvals = cljs.core.seq(arglist__24246);
return G__24244__delegate(keyvals);
});
G__24244.cljs$core$IFn$_invoke$arity$variadic = G__24244__delegate;
return G__24244;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__24247 = null;
if (arguments.length > 0) {
var G__24248__i = 0, G__24248__a = new Array(arguments.length -  0);
while (G__24248__i < G__24248__a.length) {G__24248__a[G__24248__i] = arguments[G__24248__i + 0]; ++G__24248__i;}
G__24247 = new cljs.core.IndexedSeq(G__24248__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__24247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__24251_24253 = obj;
var G__24252_24254 = ((function (G__24251_24253,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__24251_24253,keys))
;
goog.object.forEach(G__24251_24253,G__24252_24254);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24255 = (i__$1 + (1));
var G__24256 = (j__$1 + (1));
var G__24257 = (len__$1 - (1));
i__$1 = G__24255;
j__$1 = G__24256;
len__$1 = G__24257;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__24258 = (i__$1 - (1));
var G__24259 = (j__$1 - (1));
var G__24260 = (len__$1 - (1));
i__$1 = G__24258;
j__$1 = G__24259;
len__$1 = G__24260;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj24262 = {};
return obj24262;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__24264 = s;
if(G__24264){
var bit__16339__auto__ = (G__24264.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16339__auto__) || (G__24264.cljs$core$ISeq$)){
return true;
} else {
if((!G__24264.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24264);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__24264);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__24266 = s;
if(G__24266){
var bit__16339__auto__ = (G__24266.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__16339__auto__) || (G__24266.cljs$core$ISeqable$)){
return true;
} else {
if((!G__24266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__24266);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__15658__auto__ = cljs.core.fn_QMARK_(f);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var G__24270 = f;
if(G__24270){
var bit__16339__auto__ = (G__24270.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__16339__auto__) || (G__24270.cljs$core$IFn$)){
return true;
} else {
if((!G__24270.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24270);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__24270);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__24283 = n;
return isNaN(G__24283);
})())) && (!((n === Infinity))) && (((function (){var G__24284 = n;
return parseFloat(G__24284);
})() === (function (){var G__24285 = n;
var G__24286 = (10);
return parseInt(G__24285,G__24286);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__24287__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__24288 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__24289 = etc;
s = G__24288;
xs = G__24289;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__24287 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24290__i = 0, G__24290__a = new Array(arguments.length -  2);
while (G__24290__i < G__24290__a.length) {G__24290__a[G__24290__i] = arguments[G__24290__i + 2]; ++G__24290__i;}
  more = new cljs.core.IndexedSeq(G__24290__a,0);
} 
return G__24287__delegate.call(this,x,y,more);};
G__24287.cljs$lang$maxFixedArity = 2;
G__24287.cljs$lang$applyTo = (function (arglist__24291){
var x = cljs.core.first(arglist__24291);
arglist__24291 = cljs.core.next(arglist__24291);
var y = cljs.core.first(arglist__24291);
var more = cljs.core.rest(arglist__24291);
return G__24287__delegate(x,y,more);
});
G__24287.cljs$core$IFn$_invoke$arity$variadic = G__24287__delegate;
return G__24287;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__24292 = null;
if (arguments.length > 2) {
var G__24293__i = 0, G__24293__a = new Array(arguments.length -  2);
while (G__24293__i < G__24293__a.length) {G__24293__a[G__24293__i] = arguments[G__24293__i + 2]; ++G__24293__i;}
G__24292 = new cljs.core.IndexedSeq(G__24293__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24292);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__24297 = x;
if(G__24297){
var bit__16332__auto__ = (G__24297.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__16332__auto__) || (G__24297.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__24298 = x;
var G__24299 = y;
return goog.array.defaultCompare(G__24298,G__24299);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__24304 = xs;
var G__24305 = ys;
var G__24306 = len;
var G__24307 = (n + (1));
xs = G__24304;
ys = G__24305;
len = G__24306;
n = G__24307;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__24312 = x;
var G__24313 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24312,G__24313) : f.call(null,G__24312,G__24313));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24314 = y;
var G__24315 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24314,G__24315) : f.call(null,G__24314,G__24315));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__24321 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24321) : cljs.core.to_array.call(null,G__24321));
})();
var G__24322_24324 = a;
var G__24323_24325 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__24322_24324,G__24323_24325);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__24331 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24331) : keyfn.call(null,G__24331));
})(),(function (){var G__24332 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24332) : keyfn.call(null,G__24332));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__24338 = f;
var G__24339 = cljs.core.first(s);
var G__24340 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__24338,G__24339,G__24340) : cljs.core.reduce.call(null,G__24338,G__24339,G__24340));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__24341 = val__$1;
var G__24342 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24341,G__24342) : f.call(null,G__24341,G__24342));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__24343 = nval;
var G__24344 = cljs.core.next(coll__$1);
val__$1 = G__24343;
coll__$1 = G__24344;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__24348 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__24348) : cljs.core.to_array.call(null,G__24348));
})();
var G__24349_24351 = a;
goog.array.shuffle(G__24349_24351);

var G__24350 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__24350) : cljs.core.vec.call(null,G__24350));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__24354 = coll;
if(G__24354){
var bit__16332__auto__ = (G__24354.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16332__auto__) || (G__24354.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__24355 = coll;
if(G__24355){
var bit__16332__auto__ = (G__24355.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__16332__auto__) || (G__24355.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__24364 = null;
var G__24364__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__24364__1 = (function (x){
var G__24361 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__24361) : cf.call(null,G__24361));
});
var G__24364__2 = (function (x,y){
var G__24362 = x;
var G__24363 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24362,G__24363) : f.call(null,G__24362,G__24363));
});
G__24364 = function(x,y){
switch(arguments.length){
case 0:
return G__24364__0.call(this);
case 1:
return G__24364__1.call(this,x);
case 2:
return G__24364__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24364.cljs$core$IFn$_invoke$arity$0 = G__24364__0;
G__24364.cljs$core$IFn$_invoke$arity$1 = G__24364__1;
G__24364.cljs$core$IFn$_invoke$arity$2 = G__24364__2;
return G__24364;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__24371 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__24371) : xform.call(null,G__24371));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__24372 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__24372) : f__$1.call(null,G__24372));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__24373__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__24373 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24374__i = 0, G__24374__a = new Array(arguments.length -  2);
while (G__24374__i < G__24374__a.length) {G__24374__a[G__24374__i] = arguments[G__24374__i + 2]; ++G__24374__i;}
  more = new cljs.core.IndexedSeq(G__24374__a,0);
} 
return G__24373__delegate.call(this,x,y,more);};
G__24373.cljs$lang$maxFixedArity = 2;
G__24373.cljs$lang$applyTo = (function (arglist__24375){
var x = cljs.core.first(arglist__24375);
arglist__24375 = cljs.core.next(arglist__24375);
var y = cljs.core.first(arglist__24375);
var more = cljs.core.rest(arglist__24375);
return G__24373__delegate(x,y,more);
});
G__24373.cljs$core$IFn$_invoke$arity$variadic = G__24373__delegate;
return G__24373;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__24376 = null;
if (arguments.length > 2) {
var G__24377__i = 0, G__24377__a = new Array(arguments.length -  2);
while (G__24377__i < G__24377__a.length) {G__24377__a[G__24377__i] = arguments[G__24377__i + 2]; ++G__24377__i;}
G__24376 = new cljs.core.IndexedSeq(G__24377__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__24378__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__24378 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24379__i = 0, G__24379__a = new Array(arguments.length -  2);
while (G__24379__i < G__24379__a.length) {G__24379__a[G__24379__i] = arguments[G__24379__i + 2]; ++G__24379__i;}
  more = new cljs.core.IndexedSeq(G__24379__a,0);
} 
return G__24378__delegate.call(this,x,y,more);};
G__24378.cljs$lang$maxFixedArity = 2;
G__24378.cljs$lang$applyTo = (function (arglist__24380){
var x = cljs.core.first(arglist__24380);
arglist__24380 = cljs.core.next(arglist__24380);
var y = cljs.core.first(arglist__24380);
var more = cljs.core.rest(arglist__24380);
return G__24378__delegate(x,y,more);
});
G__24378.cljs$core$IFn$_invoke$arity$variadic = G__24378__delegate;
return G__24378;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__24381 = null;
if (arguments.length > 2) {
var G__24382__i = 0, G__24382__a = new Array(arguments.length -  2);
while (G__24382__i < G__24382__a.length) {G__24382__a[G__24382__i] = arguments[G__24382__i + 2]; ++G__24382__i;}
G__24381 = new cljs.core.IndexedSeq(G__24382__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__24383__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__24383 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24384__i = 0, G__24384__a = new Array(arguments.length -  2);
while (G__24384__i < G__24384__a.length) {G__24384__a[G__24384__i] = arguments[G__24384__i + 2]; ++G__24384__i;}
  more = new cljs.core.IndexedSeq(G__24384__a,0);
} 
return G__24383__delegate.call(this,x,y,more);};
G__24383.cljs$lang$maxFixedArity = 2;
G__24383.cljs$lang$applyTo = (function (arglist__24385){
var x = cljs.core.first(arglist__24385);
arglist__24385 = cljs.core.next(arglist__24385);
var y = cljs.core.first(arglist__24385);
var more = cljs.core.rest(arglist__24385);
return G__24383__delegate(x,y,more);
});
G__24383.cljs$core$IFn$_invoke$arity$variadic = G__24383__delegate;
return G__24383;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__24386 = null;
if (arguments.length > 2) {
var G__24387__i = 0, G__24387__a = new Array(arguments.length -  2);
while (G__24387__i < G__24387__a.length) {G__24387__a[G__24387__i] = arguments[G__24387__i + 2]; ++G__24387__i;}
G__24386 = new cljs.core.IndexedSeq(G__24387__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__24392__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24392 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24393__i = 0, G__24393__a = new Array(arguments.length -  2);
while (G__24393__i < G__24393__a.length) {G__24393__a[G__24393__i] = arguments[G__24393__i + 2]; ++G__24393__i;}
  more = new cljs.core.IndexedSeq(G__24393__a,0);
} 
return G__24392__delegate.call(this,x,y,more);};
G__24392.cljs$lang$maxFixedArity = 2;
G__24392.cljs$lang$applyTo = (function (arglist__24394){
var x = cljs.core.first(arglist__24394);
arglist__24394 = cljs.core.next(arglist__24394);
var y = cljs.core.first(arglist__24394);
var more = cljs.core.rest(arglist__24394);
return G__24392__delegate(x,y,more);
});
G__24392.cljs$core$IFn$_invoke$arity$variadic = G__24392__delegate;
return G__24392;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__24395 = null;
if (arguments.length > 2) {
var G__24396__i = 0, G__24396__a = new Array(arguments.length -  2);
while (G__24396__i < G__24396__a.length) {G__24396__a[G__24396__i] = arguments[G__24396__i + 2]; ++G__24396__i;}
G__24395 = new cljs.core.IndexedSeq(G__24396__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__24397__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__24398 = y;
var G__24399 = cljs.core.first(more);
var G__24400 = cljs.core.next(more);
x = G__24398;
y = G__24399;
more = G__24400;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24397 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24401__i = 0, G__24401__a = new Array(arguments.length -  2);
while (G__24401__i < G__24401__a.length) {G__24401__a[G__24401__i] = arguments[G__24401__i + 2]; ++G__24401__i;}
  more = new cljs.core.IndexedSeq(G__24401__a,0);
} 
return G__24397__delegate.call(this,x,y,more);};
G__24397.cljs$lang$maxFixedArity = 2;
G__24397.cljs$lang$applyTo = (function (arglist__24402){
var x = cljs.core.first(arglist__24402);
arglist__24402 = cljs.core.next(arglist__24402);
var y = cljs.core.first(arglist__24402);
var more = cljs.core.rest(arglist__24402);
return G__24397__delegate(x,y,more);
});
G__24397.cljs$core$IFn$_invoke$arity$variadic = G__24397__delegate;
return G__24397;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__24403 = null;
if (arguments.length > 2) {
var G__24404__i = 0, G__24404__a = new Array(arguments.length -  2);
while (G__24404__i < G__24404__a.length) {G__24404__a[G__24404__i] = arguments[G__24404__i + 2]; ++G__24404__i;}
G__24403 = new cljs.core.IndexedSeq(G__24404__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__24405__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__24406 = y;
var G__24407 = cljs.core.first(more);
var G__24408 = cljs.core.next(more);
x = G__24406;
y = G__24407;
more = G__24408;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24405 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24409__i = 0, G__24409__a = new Array(arguments.length -  2);
while (G__24409__i < G__24409__a.length) {G__24409__a[G__24409__i] = arguments[G__24409__i + 2]; ++G__24409__i;}
  more = new cljs.core.IndexedSeq(G__24409__a,0);
} 
return G__24405__delegate.call(this,x,y,more);};
G__24405.cljs$lang$maxFixedArity = 2;
G__24405.cljs$lang$applyTo = (function (arglist__24410){
var x = cljs.core.first(arglist__24410);
arglist__24410 = cljs.core.next(arglist__24410);
var y = cljs.core.first(arglist__24410);
var more = cljs.core.rest(arglist__24410);
return G__24405__delegate(x,y,more);
});
G__24405.cljs$core$IFn$_invoke$arity$variadic = G__24405__delegate;
return G__24405;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__24411 = null;
if (arguments.length > 2) {
var G__24412__i = 0, G__24412__a = new Array(arguments.length -  2);
while (G__24412__i < G__24412__a.length) {G__24412__a[G__24412__i] = arguments[G__24412__i + 2]; ++G__24412__i;}
G__24411 = new cljs.core.IndexedSeq(G__24412__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__24413__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__24414 = y;
var G__24415 = cljs.core.first(more);
var G__24416 = cljs.core.next(more);
x = G__24414;
y = G__24415;
more = G__24416;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24413 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24417__i = 0, G__24417__a = new Array(arguments.length -  2);
while (G__24417__i < G__24417__a.length) {G__24417__a[G__24417__i] = arguments[G__24417__i + 2]; ++G__24417__i;}
  more = new cljs.core.IndexedSeq(G__24417__a,0);
} 
return G__24413__delegate.call(this,x,y,more);};
G__24413.cljs$lang$maxFixedArity = 2;
G__24413.cljs$lang$applyTo = (function (arglist__24418){
var x = cljs.core.first(arglist__24418);
arglist__24418 = cljs.core.next(arglist__24418);
var y = cljs.core.first(arglist__24418);
var more = cljs.core.rest(arglist__24418);
return G__24413__delegate(x,y,more);
});
G__24413.cljs$core$IFn$_invoke$arity$variadic = G__24413__delegate;
return G__24413;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__24419 = null;
if (arguments.length > 2) {
var G__24420__i = 0, G__24420__a = new Array(arguments.length -  2);
while (G__24420__i < G__24420__a.length) {G__24420__a[G__24420__i] = arguments[G__24420__i + 2]; ++G__24420__i;}
G__24419 = new cljs.core.IndexedSeq(G__24420__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24419);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__24421__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__24422 = y;
var G__24423 = cljs.core.first(more);
var G__24424 = cljs.core.next(more);
x = G__24422;
y = G__24423;
more = G__24424;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24421 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24425__i = 0, G__24425__a = new Array(arguments.length -  2);
while (G__24425__i < G__24425__a.length) {G__24425__a[G__24425__i] = arguments[G__24425__i + 2]; ++G__24425__i;}
  more = new cljs.core.IndexedSeq(G__24425__a,0);
} 
return G__24421__delegate.call(this,x,y,more);};
G__24421.cljs$lang$maxFixedArity = 2;
G__24421.cljs$lang$applyTo = (function (arglist__24426){
var x = cljs.core.first(arglist__24426);
arglist__24426 = cljs.core.next(arglist__24426);
var y = cljs.core.first(arglist__24426);
var more = cljs.core.rest(arglist__24426);
return G__24421__delegate(x,y,more);
});
G__24421.cljs$core$IFn$_invoke$arity$variadic = G__24421__delegate;
return G__24421;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__24427 = null;
if (arguments.length > 2) {
var G__24428__i = 0, G__24428__a = new Array(arguments.length -  2);
while (G__24428__i < G__24428__a.length) {G__24428__a[G__24428__i] = arguments[G__24428__i + 2]; ++G__24428__i;}
G__24427 = new cljs.core.IndexedSeq(G__24428__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__15975__auto__ = x;
var y__15976__auto__ = y;
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
});
var max__3 = (function() { 
var G__24429__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__15975__auto__ = x;
var y__15976__auto__ = y;
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
})(),more);
};
var G__24429 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24430__i = 0, G__24430__a = new Array(arguments.length -  2);
while (G__24430__i < G__24430__a.length) {G__24430__a[G__24430__i] = arguments[G__24430__i + 2]; ++G__24430__i;}
  more = new cljs.core.IndexedSeq(G__24430__a,0);
} 
return G__24429__delegate.call(this,x,y,more);};
G__24429.cljs$lang$maxFixedArity = 2;
G__24429.cljs$lang$applyTo = (function (arglist__24431){
var x = cljs.core.first(arglist__24431);
arglist__24431 = cljs.core.next(arglist__24431);
var y = cljs.core.first(arglist__24431);
var more = cljs.core.rest(arglist__24431);
return G__24429__delegate(x,y,more);
});
G__24429.cljs$core$IFn$_invoke$arity$variadic = G__24429__delegate;
return G__24429;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__24432 = null;
if (arguments.length > 2) {
var G__24433__i = 0, G__24433__a = new Array(arguments.length -  2);
while (G__24433__i < G__24433__a.length) {G__24433__a[G__24433__i] = arguments[G__24433__i + 2]; ++G__24433__i;}
G__24432 = new cljs.core.IndexedSeq(G__24433__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24432);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__15982__auto__ = x;
var y__15983__auto__ = y;
return ((x__15982__auto__ < y__15983__auto__) ? x__15982__auto__ : y__15983__auto__);
});
var min__3 = (function() { 
var G__24434__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__15982__auto__ = x;
var y__15983__auto__ = y;
return ((x__15982__auto__ < y__15983__auto__) ? x__15982__auto__ : y__15983__auto__);
})(),more);
};
var G__24434 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24435__i = 0, G__24435__a = new Array(arguments.length -  2);
while (G__24435__i < G__24435__a.length) {G__24435__a[G__24435__i] = arguments[G__24435__i + 2]; ++G__24435__i;}
  more = new cljs.core.IndexedSeq(G__24435__a,0);
} 
return G__24434__delegate.call(this,x,y,more);};
G__24434.cljs$lang$maxFixedArity = 2;
G__24434.cljs$lang$applyTo = (function (arglist__24436){
var x = cljs.core.first(arglist__24436);
arglist__24436 = cljs.core.next(arglist__24436);
var y = cljs.core.first(arglist__24436);
var more = cljs.core.rest(arglist__24436);
return G__24434__delegate(x,y,more);
});
G__24434.cljs$core$IFn$_invoke$arity$variadic = G__24434__delegate;
return G__24434;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__24437 = null;
if (arguments.length > 2) {
var G__24438__i = 0, G__24438__a = new Array(arguments.length -  2);
while (G__24438__i < G__24438__a.length) {G__24438__a[G__24438__i] = arguments[G__24438__i + 2]; ++G__24438__i;}
G__24437 = new cljs.core.IndexedSeq(G__24438__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__24439__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__24439 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24440__i = 0, G__24440__a = new Array(arguments.length -  2);
while (G__24440__i < G__24440__a.length) {G__24440__a[G__24440__i] = arguments[G__24440__i + 2]; ++G__24440__i;}
  more = new cljs.core.IndexedSeq(G__24440__a,0);
} 
return G__24439__delegate.call(this,x,y,more);};
G__24439.cljs$lang$maxFixedArity = 2;
G__24439.cljs$lang$applyTo = (function (arglist__24441){
var x = cljs.core.first(arglist__24441);
arglist__24441 = cljs.core.next(arglist__24441);
var y = cljs.core.first(arglist__24441);
var more = cljs.core.rest(arglist__24441);
return G__24439__delegate(x,y,more);
});
G__24439.cljs$core$IFn$_invoke$arity$variadic = G__24439__delegate;
return G__24439;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__24442 = null;
if (arguments.length > 2) {
var G__24443__i = 0, G__24443__a = new Array(arguments.length -  2);
while (G__24443__i < G__24443__a.length) {G__24443__a[G__24443__i] = arguments[G__24443__i + 2]; ++G__24443__i;}
G__24442 = new cljs.core.IndexedSeq(G__24443__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__24444__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__24444 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24445__i = 0, G__24445__a = new Array(arguments.length -  2);
while (G__24445__i < G__24445__a.length) {G__24445__a[G__24445__i] = arguments[G__24445__i + 2]; ++G__24445__i;}
  more = new cljs.core.IndexedSeq(G__24445__a,0);
} 
return G__24444__delegate.call(this,x,y,more);};
G__24444.cljs$lang$maxFixedArity = 2;
G__24444.cljs$lang$applyTo = (function (arglist__24446){
var x = cljs.core.first(arglist__24446);
arglist__24446 = cljs.core.next(arglist__24446);
var y = cljs.core.first(arglist__24446);
var more = cljs.core.rest(arglist__24446);
return G__24444__delegate(x,y,more);
});
G__24444.cljs$core$IFn$_invoke$arity$variadic = G__24444__delegate;
return G__24444;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__24447 = null;
if (arguments.length > 2) {
var G__24448__i = 0, G__24448__a = new Array(arguments.length -  2);
while (G__24448__i < G__24448__a.length) {G__24448__a[G__24448__i] = arguments[G__24448__i + 2]; ++G__24448__i;}
G__24447 = new cljs.core.IndexedSeq(G__24448__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__24453__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__24453 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24454__i = 0, G__24454__a = new Array(arguments.length -  2);
while (G__24454__i < G__24454__a.length) {G__24454__a[G__24454__i] = arguments[G__24454__i + 2]; ++G__24454__i;}
  more = new cljs.core.IndexedSeq(G__24454__a,0);
} 
return G__24453__delegate.call(this,x,y,more);};
G__24453.cljs$lang$maxFixedArity = 2;
G__24453.cljs$lang$applyTo = (function (arglist__24455){
var x = cljs.core.first(arglist__24455);
arglist__24455 = cljs.core.next(arglist__24455);
var y = cljs.core.first(arglist__24455);
var more = cljs.core.rest(arglist__24455);
return G__24453__delegate(x,y,more);
});
G__24453.cljs$core$IFn$_invoke$arity$variadic = G__24453__delegate;
return G__24453;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__24456 = null;
if (arguments.length > 2) {
var G__24457__i = 0, G__24457__a = new Array(arguments.length -  2);
while (G__24457__i < G__24457__a.length) {G__24457__a[G__24457__i] = arguments[G__24457__i + 2]; ++G__24457__i;}
G__24456 = new cljs.core.IndexedSeq(G__24457__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__24458__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__24458 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24459__i = 0, G__24459__a = new Array(arguments.length -  2);
while (G__24459__i < G__24459__a.length) {G__24459__a[G__24459__i] = arguments[G__24459__i + 2]; ++G__24459__i;}
  more = new cljs.core.IndexedSeq(G__24459__a,0);
} 
return G__24458__delegate.call(this,x,y,more);};
G__24458.cljs$lang$maxFixedArity = 2;
G__24458.cljs$lang$applyTo = (function (arglist__24460){
var x = cljs.core.first(arglist__24460);
arglist__24460 = cljs.core.next(arglist__24460);
var y = cljs.core.first(arglist__24460);
var more = cljs.core.rest(arglist__24460);
return G__24458__delegate(x,y,more);
});
G__24458.cljs$core$IFn$_invoke$arity$variadic = G__24458__delegate;
return G__24458;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__24461 = null;
if (arguments.length > 2) {
var G__24462__i = 0, G__24462__a = new Array(arguments.length -  2);
while (G__24462__i < G__24462__a.length) {G__24462__a[G__24462__i] = arguments[G__24462__i + 2]; ++G__24462__i;}
G__24461 = new cljs.core.IndexedSeq(G__24462__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__24463__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__24463 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24464__i = 0, G__24464__a = new Array(arguments.length -  2);
while (G__24464__i < G__24464__a.length) {G__24464__a[G__24464__i] = arguments[G__24464__i + 2]; ++G__24464__i;}
  more = new cljs.core.IndexedSeq(G__24464__a,0);
} 
return G__24463__delegate.call(this,x,y,more);};
G__24463.cljs$lang$maxFixedArity = 2;
G__24463.cljs$lang$applyTo = (function (arglist__24465){
var x = cljs.core.first(arglist__24465);
arglist__24465 = cljs.core.next(arglist__24465);
var y = cljs.core.first(arglist__24465);
var more = cljs.core.rest(arglist__24465);
return G__24463__delegate(x,y,more);
});
G__24463.cljs$core$IFn$_invoke$arity$variadic = G__24463__delegate;
return G__24463;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__24466 = null;
if (arguments.length > 2) {
var G__24467__i = 0, G__24467__a = new Array(arguments.length -  2);
while (G__24467__i < G__24467__a.length) {G__24467__a[G__24467__i] = arguments[G__24467__i + 2]; ++G__24467__i;}
G__24466 = new cljs.core.IndexedSeq(G__24467__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__24470 = x;
var G__24471 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__24470,G__24471) : cljs.core.mod.call(null,G__24470,G__24471));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__24472__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__24472 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24473__i = 0, G__24473__a = new Array(arguments.length -  2);
while (G__24473__i < G__24473__a.length) {G__24473__a[G__24473__i] = arguments[G__24473__i + 2]; ++G__24473__i;}
  more = new cljs.core.IndexedSeq(G__24473__a,0);
} 
return G__24472__delegate.call(this,x,y,more);};
G__24472.cljs$lang$maxFixedArity = 2;
G__24472.cljs$lang$applyTo = (function (arglist__24474){
var x = cljs.core.first(arglist__24474);
arglist__24474 = cljs.core.next(arglist__24474);
var y = cljs.core.first(arglist__24474);
var more = cljs.core.rest(arglist__24474);
return G__24472__delegate(x,y,more);
});
G__24472.cljs$core$IFn$_invoke$arity$variadic = G__24472__delegate;
return G__24472;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__24475 = null;
if (arguments.length > 2) {
var G__24476__i = 0, G__24476__a = new Array(arguments.length -  2);
while (G__24476__i < G__24476__a.length) {G__24476__a[G__24476__i] = arguments[G__24476__i + 2]; ++G__24476__i;}
G__24475 = new cljs.core.IndexedSeq(G__24476__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__24477__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__24477 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24478__i = 0, G__24478__a = new Array(arguments.length -  2);
while (G__24478__i < G__24478__a.length) {G__24478__a[G__24478__i] = arguments[G__24478__i + 2]; ++G__24478__i;}
  more = new cljs.core.IndexedSeq(G__24478__a,0);
} 
return G__24477__delegate.call(this,x,y,more);};
G__24477.cljs$lang$maxFixedArity = 2;
G__24477.cljs$lang$applyTo = (function (arglist__24479){
var x = cljs.core.first(arglist__24479);
arglist__24479 = cljs.core.next(arglist__24479);
var y = cljs.core.first(arglist__24479);
var more = cljs.core.rest(arglist__24479);
return G__24477__delegate(x,y,more);
});
G__24477.cljs$core$IFn$_invoke$arity$variadic = G__24477__delegate;
return G__24477;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__24480 = null;
if (arguments.length > 2) {
var G__24481__i = 0, G__24481__a = new Array(arguments.length -  2);
while (G__24481__i < G__24481__a.length) {G__24481__a[G__24481__i] = arguments[G__24481__i + 2]; ++G__24481__i;}
G__24480 = new cljs.core.IndexedSeq(G__24481__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__24484 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24484) : Math.floor.call(null,G__24484));
} else {
var G__24485 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24485) : Math.ceil.call(null,G__24485));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__24486__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__24486 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24487__i = 0, G__24487__a = new Array(arguments.length -  2);
while (G__24487__i < G__24487__a.length) {G__24487__a[G__24487__i] = arguments[G__24487__i + 2]; ++G__24487__i;}
  more = new cljs.core.IndexedSeq(G__24487__a,0);
} 
return G__24486__delegate.call(this,x,y,more);};
G__24486.cljs$lang$maxFixedArity = 2;
G__24486.cljs$lang$applyTo = (function (arglist__24488){
var x = cljs.core.first(arglist__24488);
arglist__24488 = cljs.core.next(arglist__24488);
var y = cljs.core.first(arglist__24488);
var more = cljs.core.rest(arglist__24488);
return G__24486__delegate(x,y,more);
});
G__24486.cljs$core$IFn$_invoke$arity$variadic = G__24486__delegate;
return G__24486;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__24489 = null;
if (arguments.length > 2) {
var G__24490__i = 0, G__24490__a = new Array(arguments.length -  2);
while (G__24490__i < G__24490__a.length) {G__24490__a[G__24490__i] = arguments[G__24490__i + 2]; ++G__24490__i;}
G__24489 = new cljs.core.IndexedSeq(G__24490__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__24491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__24491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24492__i = 0, G__24492__a = new Array(arguments.length -  2);
while (G__24492__i < G__24492__a.length) {G__24492__a[G__24492__i] = arguments[G__24492__i + 2]; ++G__24492__i;}
  more = new cljs.core.IndexedSeq(G__24492__a,0);
} 
return G__24491__delegate.call(this,x,y,more);};
G__24491.cljs$lang$maxFixedArity = 2;
G__24491.cljs$lang$applyTo = (function (arglist__24493){
var x = cljs.core.first(arglist__24493);
arglist__24493 = cljs.core.next(arglist__24493);
var y = cljs.core.first(arglist__24493);
var more = cljs.core.rest(arglist__24493);
return G__24491__delegate(x,y,more);
});
G__24491.cljs$core$IFn$_invoke$arity$variadic = G__24491__delegate;
return G__24491;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__24494 = null;
if (arguments.length > 2) {
var G__24495__i = 0, G__24495__a = new Array(arguments.length -  2);
while (G__24495__i < G__24495__a.length) {G__24495__a[G__24495__i] = arguments[G__24495__i + 2]; ++G__24495__i;}
G__24494 = new cljs.core.IndexedSeq(G__24495__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__24496__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__24496 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24497__i = 0, G__24497__a = new Array(arguments.length -  2);
while (G__24497__i < G__24497__a.length) {G__24497__a[G__24497__i] = arguments[G__24497__i + 2]; ++G__24497__i;}
  more = new cljs.core.IndexedSeq(G__24497__a,0);
} 
return G__24496__delegate.call(this,x,y,more);};
G__24496.cljs$lang$maxFixedArity = 2;
G__24496.cljs$lang$applyTo = (function (arglist__24498){
var x = cljs.core.first(arglist__24498);
arglist__24498 = cljs.core.next(arglist__24498);
var y = cljs.core.first(arglist__24498);
var more = cljs.core.rest(arglist__24498);
return G__24496__delegate(x,y,more);
});
G__24496.cljs$core$IFn$_invoke$arity$variadic = G__24496__delegate;
return G__24496;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__24499 = null;
if (arguments.length > 2) {
var G__24500__i = 0, G__24500__a = new Array(arguments.length -  2);
while (G__24500__i < G__24500__a.length) {G__24500__a[G__24500__i] = arguments[G__24500__i + 2]; ++G__24500__i;}
G__24499 = new cljs.core.IndexedSeq(G__24500__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__24501__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__24501 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24502__i = 0, G__24502__a = new Array(arguments.length -  2);
while (G__24502__i < G__24502__a.length) {G__24502__a[G__24502__i] = arguments[G__24502__i + 2]; ++G__24502__i;}
  more = new cljs.core.IndexedSeq(G__24502__a,0);
} 
return G__24501__delegate.call(this,x,y,more);};
G__24501.cljs$lang$maxFixedArity = 2;
G__24501.cljs$lang$applyTo = (function (arglist__24503){
var x = cljs.core.first(arglist__24503);
arglist__24503 = cljs.core.next(arglist__24503);
var y = cljs.core.first(arglist__24503);
var more = cljs.core.rest(arglist__24503);
return G__24501__delegate(x,y,more);
});
G__24501.cljs$core$IFn$_invoke$arity$variadic = G__24501__delegate;
return G__24501;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__24504 = null;
if (arguments.length > 2) {
var G__24505__i = 0, G__24505__a = new Array(arguments.length -  2);
while (G__24505__i < G__24505__a.length) {G__24505__a[G__24505__i] = arguments[G__24505__i + 2]; ++G__24505__i;}
G__24504 = new cljs.core.IndexedSeq(G__24505__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__24510__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__24511 = y;
var G__24512 = cljs.core.first(more);
var G__24513 = cljs.core.next(more);
x = G__24511;
y = G__24512;
more = G__24513;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__24510 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__24514__i = 0, G__24514__a = new Array(arguments.length -  2);
while (G__24514__i < G__24514__a.length) {G__24514__a[G__24514__i] = arguments[G__24514__i + 2]; ++G__24514__i;}
  more = new cljs.core.IndexedSeq(G__24514__a,0);
} 
return G__24510__delegate.call(this,x,y,more);};
G__24510.cljs$lang$maxFixedArity = 2;
G__24510.cljs$lang$applyTo = (function (arglist__24515){
var x = cljs.core.first(arglist__24515);
arglist__24515 = cljs.core.next(arglist__24515);
var y = cljs.core.first(arglist__24515);
var more = cljs.core.rest(arglist__24515);
return G__24510__delegate(x,y,more);
});
G__24510.cljs$core$IFn$_invoke$arity$variadic = G__24510__delegate;
return G__24510;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__24516 = null;
if (arguments.length > 2) {
var G__24517__i = 0, G__24517__a = new Array(arguments.length -  2);
while (G__24517__i < G__24517__a.length) {G__24517__a[G__24517__i] = arguments[G__24517__i + 2]; ++G__24517__i;}
G__24516 = new cljs.core.IndexedSeq(G__24517__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__24518 = (n__$1 - (1));
var G__24519 = cljs.core.next(xs);
n__$1 = G__24518;
xs = G__24519;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__24523 = x;
return goog.string.buildString(G__24523);
}
});
var str__2 = (function() { 
var G__24524__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__24525 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__24526 = cljs.core.next(more);
sb = G__24525;
more = G__24526;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__24524 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__24527__i = 0, G__24527__a = new Array(arguments.length -  1);
while (G__24527__i < G__24527__a.length) {G__24527__a[G__24527__i] = arguments[G__24527__i + 1]; ++G__24527__i;}
  ys = new cljs.core.IndexedSeq(G__24527__a,0);
} 
return G__24524__delegate.call(this,x,ys);};
G__24524.cljs$lang$maxFixedArity = 1;
G__24524.cljs$lang$applyTo = (function (arglist__24528){
var x = cljs.core.first(arglist__24528);
var ys = cljs.core.rest(arglist__24528);
return G__24524__delegate(x,ys);
});
G__24524.cljs$core$IFn$_invoke$arity$variadic = G__24524__delegate;
return G__24524;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__24529 = null;
if (arguments.length > 1) {
var G__24530__i = 0, G__24530__a = new Array(arguments.length -  1);
while (G__24530__i < G__24530__a.length) {G__24530__a[G__24530__i] = arguments[G__24530__i + 1]; ++G__24530__i;}
G__24529 = new cljs.core.IndexedSeq(G__24530__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__24531 = cljs.core.next(xs);
var G__24532 = cljs.core.next(ys);
xs = G__24531;
ys = G__24532;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__24533 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__24534 = cljs.core.next(s);
res = G__24533;
s = G__24534;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__24539 = ((h + (cljs.core.hash((function (){var G__24537 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24537) : cljs.core.key.call(null,G__24537));
})()) ^ cljs.core.hash((function (){var G__24538 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24538) : cljs.core.val.call(null,G__24538));
})()))) % (4503599627370496));
var G__24540 = cljs.core.next(s);
h = G__24539;
s = G__24540;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__24541 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__24542 = cljs.core.next(s__$1);
h = G__24541;
s__$1 = G__24542;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__24553_24563 = cljs.core.seq(fn_map);
var chunk__24554_24564 = null;
var count__24555_24565 = (0);
var i__24556_24566 = (0);
while(true){
if((i__24556_24566 < count__24555_24565)){
var vec__24557_24567 = chunk__24554_24564.cljs$core$IIndexed$_nth$arity$2(null,i__24556_24566);
var key_name_24568 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24557_24567,(0),null);
var f_24569 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24557_24567,(1),null);
var str_name_24570 = (function (){var G__24558 = key_name_24568;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24558) : cljs.core.name.call(null,G__24558));
})();
(obj[str_name_24570] = f_24569);

var G__24571 = seq__24553_24563;
var G__24572 = chunk__24554_24564;
var G__24573 = count__24555_24565;
var G__24574 = (i__24556_24566 + (1));
seq__24553_24563 = G__24571;
chunk__24554_24564 = G__24572;
count__24555_24565 = G__24573;
i__24556_24566 = G__24574;
continue;
} else {
var temp__4126__auto___24575 = cljs.core.seq(seq__24553_24563);
if(temp__4126__auto___24575){
var seq__24553_24576__$1 = temp__4126__auto___24575;
if(cljs.core.chunked_seq_QMARK_(seq__24553_24576__$1)){
var c__16445__auto___24577 = (function (){var G__24559 = seq__24553_24576__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__24559) : cljs.core.chunk_first.call(null,G__24559));
})();
var G__24578 = (function (){var G__24560 = seq__24553_24576__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__24560) : cljs.core.chunk_rest.call(null,G__24560));
})();
var G__24579 = c__16445__auto___24577;
var G__24580 = cljs.core.count(c__16445__auto___24577);
var G__24581 = (0);
seq__24553_24563 = G__24578;
chunk__24554_24564 = G__24579;
count__24555_24565 = G__24580;
i__24556_24566 = G__24581;
continue;
} else {
var vec__24561_24582 = cljs.core.first(seq__24553_24576__$1);
var key_name_24583 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24561_24582,(0),null);
var f_24584 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24561_24582,(1),null);
var str_name_24585 = (function (){var G__24562 = key_name_24583;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24562) : cljs.core.name.call(null,G__24562));
})();
(obj[str_name_24585] = f_24584);

var G__24586 = cljs.core.next(seq__24553_24576__$1);
var G__24587 = null;
var G__24588 = (0);
var G__24589 = (0);
seq__24553_24563 = G__24586;
chunk__24554_24564 = G__24587;
count__24555_24565 = G__24588;
i__24556_24566 = G__24589;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__24591 = coll;
if(G__24591){
var bit__16339__auto__ = (G__24591.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__16339__auto__) || (G__24591.cljs$core$IReversible$)){
return true;
} else {
if((!G__24591.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24591);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__24591);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__24592 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__24592;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__24593 = (i - (1));
var G__24594 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__24593;
r = G__24594;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__24595__i = 0, G__24595__a = new Array(arguments.length -  0);
while (G__24595__i < G__24595__a.length) {G__24595__a[G__24595__i] = arguments[G__24595__i + 0]; ++G__24595__i;}
  xs = new cljs.core.IndexedSeq(G__24595__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__24596){
var xs = cljs.core.seq(arglist__24596);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__15658__auto__ = (coll == null);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var G__24600 = coll;
if(G__24600){
var bit__16332__auto__ = (G__24600.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__16332__auto__) || (G__24600.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__24602 = x;
if(G__24602){
var bit__16339__auto__ = (G__24602.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__16339__auto__) || (G__24602.cljs$core$IList$)){
return true;
} else {
if((!G__24602.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24602);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__24602);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.not(a.ns);
if(and__15646__auto__){
return b.ns;
} else {
return and__15646__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__24609 = a.ns;
var G__24610 = b.ns;
return goog.array.defaultCompare(G__24609,G__24610);
})();
if(((0) === nsc)){
var G__24611 = a.name;
var G__24612 = b.name;
return goog.array.defaultCompare(G__24611,G__24612);
} else {
return nsc;
}
}
} else {
var G__24613 = a.name;
var G__24614 = b.name;
return goog.array.defaultCompare(G__24613,G__24614);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__16079__auto__ = self__._hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__24616 = null;
var G__24616__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__24616__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__24616 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__24616__2.call(this,self__,coll);
case 3:
return G__24616__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24616.cljs$core$IFn$_invoke$arity$2 = G__24616__2;
G__24616.cljs$core$IFn$_invoke$arity$3 = G__24616__3;
return G__24616;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args24615){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24615)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__24618 = x;
if(G__24618){
var bit__16332__auto__ = (G__24618.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16332__auto__) || (G__24618.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__24620 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__24620) : cljs.core.name.call(null,G__24620));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__24621 = ls.sval();
ls = G__24621;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__24623 = s;
if(G__24623){
var bit__16332__auto__ = (G__24623.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__16332__auto__) || (G__24623.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__24624 = cljs.core.next(s__$1);
s__$1 = G__24624;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_24625 = (0);
var xs_24626 = cljs.core.seq(coll);
while(true){
if(xs_24626){
(ret[i_24625] = cljs.core.to_array(cljs.core.first(xs_24626)));

var G__24627 = (i_24625 + (1));
var G__24628 = cljs.core.next(xs_24626);
i_24625 = G__24627;
xs_24626 = G__24628;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24631 = (i + (1));
var G__24632 = cljs.core.next(s__$1);
i = G__24631;
s__$1 = G__24632;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24633 = size;
var i_24634 = (0);
while(true){
if((i_24634 < n__16545__auto___24633)){
(a[i_24634] = init_val_or_seq);

var G__24635 = (i_24634 + (1));
i_24634 = G__24635;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24638 = (i + (1));
var G__24639 = cljs.core.next(s__$1);
i = G__24638;
s__$1 = G__24639;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24640 = size;
var i_24641 = (0);
while(true){
if((i_24641 < n__16545__auto___24640)){
(a[i_24641] = init_val_or_seq);

var G__24642 = (i_24641 + (1));
i_24641 = G__24642;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24645 = (i + (1));
var G__24646 = cljs.core.next(s__$1);
i = G__24645;
s__$1 = G__24646;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24647 = size;
var i_24648 = (0);
while(true){
if((i_24648 < n__16545__auto___24647)){
(a[i_24648] = init_val_or_seq);

var G__24649 = (i_24648 + (1));
i_24648 = G__24649;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__24652 = (i + (1));
var G__24653 = cljs.core.next(s__$1);
i = G__24652;
s__$1 = G__24653;
continue;
} else {
return a;
}
break;
}
} else {
var n__16545__auto___24654 = size;
var i_24655 = (0);
while(true){
if((i_24655 < n__16545__auto___24654)){
(a[i_24655] = init_val_or_seq);

var G__24656 = (i_24655 + (1));
i_24655 = G__24656;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__24657 = cljs.core.next(s__$1);
var G__24658 = (i - (1));
var G__24659 = (sum + (1));
s__$1 = G__24657;
i = G__24658;
sum = G__24659;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__24679__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__24679 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__24680__i = 0, G__24680__a = new Array(arguments.length -  2);
while (G__24680__i < G__24680__a.length) {G__24680__a[G__24680__i] = arguments[G__24680__i + 2]; ++G__24680__i;}
  zs = new cljs.core.IndexedSeq(G__24680__a,0);
} 
return G__24679__delegate.call(this,x,y,zs);};
G__24679.cljs$lang$maxFixedArity = 2;
G__24679.cljs$lang$applyTo = (function (arglist__24681){
var x = cljs.core.first(arglist__24681);
arglist__24681 = cljs.core.next(arglist__24681);
var y = cljs.core.first(arglist__24681);
var zs = cljs.core.rest(arglist__24681);
return G__24679__delegate(x,y,zs);
});
G__24679.cljs$core$IFn$_invoke$arity$variadic = G__24679__delegate;
return G__24679;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__24682 = null;
if (arguments.length > 2) {
var G__24683__i = 0, G__24683__a = new Array(arguments.length -  2);
while (G__24683__i < G__24683__a.length) {G__24683__a[G__24683__i] = arguments[G__24683__i + 2]; ++G__24683__i;}
G__24682 = new cljs.core.IndexedSeq(G__24683__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__24682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__24684__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__24684 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__24685__i = 0, G__24685__a = new Array(arguments.length -  4);
while (G__24685__i < G__24685__a.length) {G__24685__a[G__24685__i] = arguments[G__24685__i + 4]; ++G__24685__i;}
  more = new cljs.core.IndexedSeq(G__24685__a,0);
} 
return G__24684__delegate.call(this,a,b,c,d,more);};
G__24684.cljs$lang$maxFixedArity = 4;
G__24684.cljs$lang$applyTo = (function (arglist__24686){
var a = cljs.core.first(arglist__24686);
arglist__24686 = cljs.core.next(arglist__24686);
var b = cljs.core.first(arglist__24686);
arglist__24686 = cljs.core.next(arglist__24686);
var c = cljs.core.first(arglist__24686);
arglist__24686 = cljs.core.next(arglist__24686);
var d = cljs.core.first(arglist__24686);
var more = cljs.core.rest(arglist__24686);
return G__24684__delegate(a,b,c,d,more);
});
G__24684.cljs$core$IFn$_invoke$arity$variadic = G__24684__delegate;
return G__24684;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__24687 = null;
if (arguments.length > 4) {
var G__24688__i = 0, G__24688__a = new Array(arguments.length -  4);
while (G__24688__i < G__24688__a.length) {G__24688__a[G__24688__i] = arguments[G__24688__i + 4]; ++G__24688__i;}
G__24687 = new cljs.core.IndexedSeq(G__24688__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__24687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__24689__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24690 = ntcoll;
var G__24691 = cljs.core.first(vals);
var G__24692 = cljs.core.next(vals);
tcoll = G__24690;
val = G__24691;
vals = G__24692;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24689 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24693__i = 0, G__24693__a = new Array(arguments.length -  2);
while (G__24693__i < G__24693__a.length) {G__24693__a[G__24693__i] = arguments[G__24693__i + 2]; ++G__24693__i;}
  vals = new cljs.core.IndexedSeq(G__24693__a,0);
} 
return G__24689__delegate.call(this,tcoll,val,vals);};
G__24689.cljs$lang$maxFixedArity = 2;
G__24689.cljs$lang$applyTo = (function (arglist__24694){
var tcoll = cljs.core.first(arglist__24694);
arglist__24694 = cljs.core.next(arglist__24694);
var val = cljs.core.first(arglist__24694);
var vals = cljs.core.rest(arglist__24694);
return G__24689__delegate(tcoll,val,vals);
});
G__24689.cljs$core$IFn$_invoke$arity$variadic = G__24689__delegate;
return G__24689;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__24695 = null;
if (arguments.length > 2) {
var G__24696__i = 0, G__24696__a = new Array(arguments.length -  2);
while (G__24696__i < G__24696__a.length) {G__24696__a[G__24696__i] = arguments[G__24696__i + 2]; ++G__24696__i;}
G__24695 = new cljs.core.IndexedSeq(G__24696__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__24697__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__24698 = ntcoll;
var G__24699 = cljs.core.first(kvs);
var G__24700 = cljs.core.second(kvs);
var G__24701 = cljs.core.nnext(kvs);
tcoll = G__24698;
key = G__24699;
val = G__24700;
kvs = G__24701;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24697 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__24702__i = 0, G__24702__a = new Array(arguments.length -  3);
while (G__24702__i < G__24702__a.length) {G__24702__a[G__24702__i] = arguments[G__24702__i + 3]; ++G__24702__i;}
  kvs = new cljs.core.IndexedSeq(G__24702__a,0);
} 
return G__24697__delegate.call(this,tcoll,key,val,kvs);};
G__24697.cljs$lang$maxFixedArity = 3;
G__24697.cljs$lang$applyTo = (function (arglist__24703){
var tcoll = cljs.core.first(arglist__24703);
arglist__24703 = cljs.core.next(arglist__24703);
var key = cljs.core.first(arglist__24703);
arglist__24703 = cljs.core.next(arglist__24703);
var val = cljs.core.first(arglist__24703);
var kvs = cljs.core.rest(arglist__24703);
return G__24697__delegate(tcoll,key,val,kvs);
});
G__24697.cljs$core$IFn$_invoke$arity$variadic = G__24697__delegate;
return G__24697;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__24704 = null;
if (arguments.length > 3) {
var G__24705__i = 0, G__24705__a = new Array(arguments.length -  3);
while (G__24705__i < G__24705__a.length) {G__24705__a[G__24705__i] = arguments[G__24705__i + 3]; ++G__24705__i;}
G__24704 = new cljs.core.IndexedSeq(G__24705__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__24704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__24706__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__24707 = ntcoll;
var G__24708 = cljs.core.first(ks);
var G__24709 = cljs.core.next(ks);
tcoll = G__24707;
key = G__24708;
ks = G__24709;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24706 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__24710__i = 0, G__24710__a = new Array(arguments.length -  2);
while (G__24710__i < G__24710__a.length) {G__24710__a[G__24710__i] = arguments[G__24710__i + 2]; ++G__24710__i;}
  ks = new cljs.core.IndexedSeq(G__24710__a,0);
} 
return G__24706__delegate.call(this,tcoll,key,ks);};
G__24706.cljs$lang$maxFixedArity = 2;
G__24706.cljs$lang$applyTo = (function (arglist__24711){
var tcoll = cljs.core.first(arglist__24711);
arglist__24711 = cljs.core.next(arglist__24711);
var key = cljs.core.first(arglist__24711);
var ks = cljs.core.rest(arglist__24711);
return G__24706__delegate(tcoll,key,ks);
});
G__24706.cljs$core$IFn$_invoke$arity$variadic = G__24706__delegate;
return G__24706;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__24712 = null;
if (arguments.length > 2) {
var G__24713__i = 0, G__24713__a = new Array(arguments.length -  2);
while (G__24713__i < G__24713__a.length) {G__24713__a[G__24713__i] = arguments[G__24713__i + 2]; ++G__24713__i;}
G__24712 = new cljs.core.IndexedSeq(G__24713__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__24712);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__24714__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__24715 = ntcoll;
var G__24716 = cljs.core.first(vals);
var G__24717 = cljs.core.next(vals);
tcoll = G__24715;
val = G__24716;
vals = G__24717;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__24714 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__24718__i = 0, G__24718__a = new Array(arguments.length -  2);
while (G__24718__i < G__24718__a.length) {G__24718__a[G__24718__i] = arguments[G__24718__i + 2]; ++G__24718__i;}
  vals = new cljs.core.IndexedSeq(G__24718__a,0);
} 
return G__24714__delegate.call(this,tcoll,val,vals);};
G__24714.cljs$lang$maxFixedArity = 2;
G__24714.cljs$lang$applyTo = (function (arglist__24719){
var tcoll = cljs.core.first(arglist__24719);
arglist__24719 = cljs.core.next(arglist__24719);
var val = cljs.core.first(arglist__24719);
var vals = cljs.core.rest(arglist__24719);
return G__24714__delegate(tcoll,val,vals);
});
G__24714.cljs$core$IFn$_invoke$arity$variadic = G__24714__delegate;
return G__24714;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__24720 = null;
if (arguments.length > 2) {
var G__24721__i = 0, G__24721__a = new Array(arguments.length -  2);
while (G__24721__i < G__24721__a.length) {G__24721__a[G__24721__i] = arguments[G__24721__i + 2]; ++G__24721__i;}
G__24720 = new cljs.core.IndexedSeq(G__24721__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__24720);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a16589 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a16589);
} else {
var G__24932 = a16589;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24932) : f.call(null,G__24932));
}
} else {
var b16590 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a16589,b16590);
} else {
var G__24933 = a16589;
var G__24934 = b16590;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24933,G__24934) : f.call(null,G__24933,G__24934));
}
} else {
var c16591 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a16589,b16590,c16591);
} else {
var G__24935 = a16589;
var G__24936 = b16590;
var G__24937 = c16591;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24935,G__24936,G__24937) : f.call(null,G__24935,G__24936,G__24937));
}
} else {
var d16592 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a16589,b16590,c16591,d16592);
} else {
var G__24938 = a16589;
var G__24939 = b16590;
var G__24940 = c16591;
var G__24941 = d16592;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24938,G__24939,G__24940,G__24941) : f.call(null,G__24938,G__24939,G__24940,G__24941));
}
} else {
var e16593 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a16589,b16590,c16591,d16592,e16593);
} else {
var G__24942 = a16589;
var G__24943 = b16590;
var G__24944 = c16591;
var G__24945 = d16592;
var G__24946 = e16593;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__24942,G__24943,G__24944,G__24945,G__24946) : f.call(null,G__24942,G__24943,G__24944,G__24945,G__24946));
}
} else {
var f16594 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a16589,b16590,c16591,d16592,e16593,f16594);
} else {
var G__24947 = a16589;
var G__24948 = b16590;
var G__24949 = c16591;
var G__24950 = d16592;
var G__24951 = e16593;
var G__24952 = f16594;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__24947,G__24948,G__24949,G__24950,G__24951,G__24952) : f.call(null,G__24947,G__24948,G__24949,G__24950,G__24951,G__24952));
}
} else {
var g16595 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a16589,b16590,c16591,d16592,e16593,f16594,g16595);
} else {
var G__24953 = a16589;
var G__24954 = b16590;
var G__24955 = c16591;
var G__24956 = d16592;
var G__24957 = e16593;
var G__24958 = f16594;
var G__24959 = g16595;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959) : f.call(null,G__24953,G__24954,G__24955,G__24956,G__24957,G__24958,G__24959));
}
} else {
var h16596 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596);
} else {
var G__24960 = a16589;
var G__24961 = b16590;
var G__24962 = c16591;
var G__24963 = d16592;
var G__24964 = e16593;
var G__24965 = f16594;
var G__24966 = g16595;
var G__24967 = h16596;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967) : f.call(null,G__24960,G__24961,G__24962,G__24963,G__24964,G__24965,G__24966,G__24967));
}
} else {
var i16597 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597);
} else {
var G__24968 = a16589;
var G__24969 = b16590;
var G__24970 = c16591;
var G__24971 = d16592;
var G__24972 = e16593;
var G__24973 = f16594;
var G__24974 = g16595;
var G__24975 = h16596;
var G__24976 = i16597;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976) : f.call(null,G__24968,G__24969,G__24970,G__24971,G__24972,G__24973,G__24974,G__24975,G__24976));
}
} else {
var j16598 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598);
} else {
var G__24977 = a16589;
var G__24978 = b16590;
var G__24979 = c16591;
var G__24980 = d16592;
var G__24981 = e16593;
var G__24982 = f16594;
var G__24983 = g16595;
var G__24984 = h16596;
var G__24985 = i16597;
var G__24986 = j16598;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986) : f.call(null,G__24977,G__24978,G__24979,G__24980,G__24981,G__24982,G__24983,G__24984,G__24985,G__24986));
}
} else {
var k16599 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599);
} else {
var G__24987 = a16589;
var G__24988 = b16590;
var G__24989 = c16591;
var G__24990 = d16592;
var G__24991 = e16593;
var G__24992 = f16594;
var G__24993 = g16595;
var G__24994 = h16596;
var G__24995 = i16597;
var G__24996 = j16598;
var G__24997 = k16599;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997) : f.call(null,G__24987,G__24988,G__24989,G__24990,G__24991,G__24992,G__24993,G__24994,G__24995,G__24996,G__24997));
}
} else {
var l16600 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600);
} else {
var G__24998 = a16589;
var G__24999 = b16590;
var G__25000 = c16591;
var G__25001 = d16592;
var G__25002 = e16593;
var G__25003 = f16594;
var G__25004 = g16595;
var G__25005 = h16596;
var G__25006 = i16597;
var G__25007 = j16598;
var G__25008 = k16599;
var G__25009 = l16600;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__24998,G__24999,G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009) : f.call(null,G__24998,G__24999,G__25000,G__25001,G__25002,G__25003,G__25004,G__25005,G__25006,G__25007,G__25008,G__25009));
}
} else {
var m16601 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601);
} else {
var G__25010 = a16589;
var G__25011 = b16590;
var G__25012 = c16591;
var G__25013 = d16592;
var G__25014 = e16593;
var G__25015 = f16594;
var G__25016 = g16595;
var G__25017 = h16596;
var G__25018 = i16597;
var G__25019 = j16598;
var G__25020 = k16599;
var G__25021 = l16600;
var G__25022 = m16601;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022) : f.call(null,G__25010,G__25011,G__25012,G__25013,G__25014,G__25015,G__25016,G__25017,G__25018,G__25019,G__25020,G__25021,G__25022));
}
} else {
var n16602 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602);
} else {
var G__25023 = a16589;
var G__25024 = b16590;
var G__25025 = c16591;
var G__25026 = d16592;
var G__25027 = e16593;
var G__25028 = f16594;
var G__25029 = g16595;
var G__25030 = h16596;
var G__25031 = i16597;
var G__25032 = j16598;
var G__25033 = k16599;
var G__25034 = l16600;
var G__25035 = m16601;
var G__25036 = n16602;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036) : f.call(null,G__25023,G__25024,G__25025,G__25026,G__25027,G__25028,G__25029,G__25030,G__25031,G__25032,G__25033,G__25034,G__25035,G__25036));
}
} else {
var o16603 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603);
} else {
var G__25037 = a16589;
var G__25038 = b16590;
var G__25039 = c16591;
var G__25040 = d16592;
var G__25041 = e16593;
var G__25042 = f16594;
var G__25043 = g16595;
var G__25044 = h16596;
var G__25045 = i16597;
var G__25046 = j16598;
var G__25047 = k16599;
var G__25048 = l16600;
var G__25049 = m16601;
var G__25050 = n16602;
var G__25051 = o16603;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051) : f.call(null,G__25037,G__25038,G__25039,G__25040,G__25041,G__25042,G__25043,G__25044,G__25045,G__25046,G__25047,G__25048,G__25049,G__25050,G__25051));
}
} else {
var p16604 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604);
} else {
var G__25052 = a16589;
var G__25053 = b16590;
var G__25054 = c16591;
var G__25055 = d16592;
var G__25056 = e16593;
var G__25057 = f16594;
var G__25058 = g16595;
var G__25059 = h16596;
var G__25060 = i16597;
var G__25061 = j16598;
var G__25062 = k16599;
var G__25063 = l16600;
var G__25064 = m16601;
var G__25065 = n16602;
var G__25066 = o16603;
var G__25067 = p16604;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067) : f.call(null,G__25052,G__25053,G__25054,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066,G__25067));
}
} else {
var q16605 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605);
} else {
var G__25068 = a16589;
var G__25069 = b16590;
var G__25070 = c16591;
var G__25071 = d16592;
var G__25072 = e16593;
var G__25073 = f16594;
var G__25074 = g16595;
var G__25075 = h16596;
var G__25076 = i16597;
var G__25077 = j16598;
var G__25078 = k16599;
var G__25079 = l16600;
var G__25080 = m16601;
var G__25081 = n16602;
var G__25082 = o16603;
var G__25083 = p16604;
var G__25084 = q16605;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084) : f.call(null,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080,G__25081,G__25082,G__25083,G__25084));
}
} else {
var r16606 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606);
} else {
var G__25085 = a16589;
var G__25086 = b16590;
var G__25087 = c16591;
var G__25088 = d16592;
var G__25089 = e16593;
var G__25090 = f16594;
var G__25091 = g16595;
var G__25092 = h16596;
var G__25093 = i16597;
var G__25094 = j16598;
var G__25095 = k16599;
var G__25096 = l16600;
var G__25097 = m16601;
var G__25098 = n16602;
var G__25099 = o16603;
var G__25100 = p16604;
var G__25101 = q16605;
var G__25102 = r16606;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102) : f.call(null,G__25085,G__25086,G__25087,G__25088,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102));
}
} else {
var s16607 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606,s16607);
} else {
var G__25103 = a16589;
var G__25104 = b16590;
var G__25105 = c16591;
var G__25106 = d16592;
var G__25107 = e16593;
var G__25108 = f16594;
var G__25109 = g16595;
var G__25110 = h16596;
var G__25111 = i16597;
var G__25112 = j16598;
var G__25113 = k16599;
var G__25114 = l16600;
var G__25115 = m16601;
var G__25116 = n16602;
var G__25117 = o16603;
var G__25118 = p16604;
var G__25119 = q16605;
var G__25120 = r16606;
var G__25121 = s16607;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121) : f.call(null,G__25103,G__25104,G__25105,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121));
}
} else {
var t16608 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a16589,b16590,c16591,d16592,e16593,f16594,g16595,h16596,i16597,j16598,k16599,l16600,m16601,n16602,o16603,p16604,q16605,r16606,s16607,t16608);
} else {
var G__25122 = a16589;
var G__25123 = b16590;
var G__25124 = c16591;
var G__25125 = d16592;
var G__25126 = e16593;
var G__25127 = f16594;
var G__25128 = g16595;
var G__25129 = h16596;
var G__25130 = i16597;
var G__25131 = j16598;
var G__25132 = k16599;
var G__25133 = l16600;
var G__25134 = m16601;
var G__25135 = n16602;
var G__25136 = o16603;
var G__25137 = p16604;
var G__25138 = q16605;
var G__25139 = r16606;
var G__25140 = s16607;
var G__25141 = t16608;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141) : f.call(null,G__25122,G__25123,G__25124,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__25142__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__25142 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__25143__i = 0, G__25143__a = new Array(arguments.length -  5);
while (G__25143__i < G__25143__a.length) {G__25143__a[G__25143__i] = arguments[G__25143__i + 5]; ++G__25143__i;}
  args = new cljs.core.IndexedSeq(G__25143__a,0);
} 
return G__25142__delegate.call(this,f,a,b,c,d,args);};
G__25142.cljs$lang$maxFixedArity = 5;
G__25142.cljs$lang$applyTo = (function (arglist__25144){
var f = cljs.core.first(arglist__25144);
arglist__25144 = cljs.core.next(arglist__25144);
var a = cljs.core.first(arglist__25144);
arglist__25144 = cljs.core.next(arglist__25144);
var b = cljs.core.first(arglist__25144);
arglist__25144 = cljs.core.next(arglist__25144);
var c = cljs.core.first(arglist__25144);
arglist__25144 = cljs.core.next(arglist__25144);
var d = cljs.core.first(arglist__25144);
var args = cljs.core.rest(arglist__25144);
return G__25142__delegate(f,a,b,c,d,args);
});
G__25142.cljs$core$IFn$_invoke$arity$variadic = G__25142__delegate;
return G__25142;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__25145 = null;
if (arguments.length > 5) {
var G__25146__i = 0, G__25146__a = new Array(arguments.length -  5);
while (G__25146__i < G__25146__a.length) {G__25146__a[G__25146__i] = arguments[G__25146__i + 5]; ++G__25146__i;}
G__25145 = new cljs.core.IndexedSeq(G__25146__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__25145);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__25162 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25162) : f.call(null,G__25162));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__25163 = cljs.core.meta(obj);
var G__25164 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25163,G__25164) : f.call(null,G__25163,G__25164));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__25165 = cljs.core.meta(obj);
var G__25166 = a;
var G__25167 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25165,G__25166,G__25167) : f.call(null,G__25165,G__25166,G__25167));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__25168 = cljs.core.meta(obj);
var G__25169 = a;
var G__25170 = b;
var G__25171 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25168,G__25169,G__25170,G__25171) : f.call(null,G__25168,G__25169,G__25170,G__25171));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__25172 = cljs.core.meta(obj);
var G__25173 = a;
var G__25174 = b;
var G__25175 = c;
var G__25176 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25172,G__25173,G__25174,G__25175,G__25176) : f.call(null,G__25172,G__25173,G__25174,G__25175,G__25176));
})());
});
var vary_meta__7 = (function() { 
var G__25177__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__25177 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__25178__i = 0, G__25178__a = new Array(arguments.length -  6);
while (G__25178__i < G__25178__a.length) {G__25178__a[G__25178__i] = arguments[G__25178__i + 6]; ++G__25178__i;}
  args = new cljs.core.IndexedSeq(G__25178__a,0);
} 
return G__25177__delegate.call(this,obj,f,a,b,c,d,args);};
G__25177.cljs$lang$maxFixedArity = 6;
G__25177.cljs$lang$applyTo = (function (arglist__25179){
var obj = cljs.core.first(arglist__25179);
arglist__25179 = cljs.core.next(arglist__25179);
var f = cljs.core.first(arglist__25179);
arglist__25179 = cljs.core.next(arglist__25179);
var a = cljs.core.first(arglist__25179);
arglist__25179 = cljs.core.next(arglist__25179);
var b = cljs.core.first(arglist__25179);
arglist__25179 = cljs.core.next(arglist__25179);
var c = cljs.core.first(arglist__25179);
arglist__25179 = cljs.core.next(arglist__25179);
var d = cljs.core.first(arglist__25179);
var args = cljs.core.rest(arglist__25179);
return G__25177__delegate(obj,f,a,b,c,d,args);
});
G__25177.cljs$core$IFn$_invoke$arity$variadic = G__25177__delegate;
return G__25177;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__25180 = null;
if (arguments.length > 6) {
var G__25181__i = 0, G__25181__a = new Array(arguments.length -  6);
while (G__25181__i < G__25181__a.length) {G__25181__a[G__25181__i] = arguments[G__25181__i + 6]; ++G__25181__i;}
G__25180 = new cljs.core.IndexedSeq(G__25181__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__25180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__25182__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__25182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__25183__i = 0, G__25183__a = new Array(arguments.length -  2);
while (G__25183__i < G__25183__a.length) {G__25183__a[G__25183__i] = arguments[G__25183__i + 2]; ++G__25183__i;}
  more = new cljs.core.IndexedSeq(G__25183__a,0);
} 
return G__25182__delegate.call(this,x,y,more);};
G__25182.cljs$lang$maxFixedArity = 2;
G__25182.cljs$lang$applyTo = (function (arglist__25184){
var x = cljs.core.first(arglist__25184);
arglist__25184 = cljs.core.next(arglist__25184);
var y = cljs.core.first(arglist__25184);
var more = cljs.core.rest(arglist__25184);
return G__25182__delegate(x,y,more);
});
G__25182.cljs$core$IFn$_invoke$arity$variadic = G__25182__delegate;
return G__25182;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__25185 = null;
if (arguments.length > 2) {
var G__25186__i = 0, G__25186__a = new Array(arguments.length -  2);
while (G__25186__i < G__25186__a.length) {G__25186__a[G__25186__i] = arguments[G__25186__i + 2]; ++G__25186__i;}
G__25185 = new cljs.core.IndexedSeq(G__25186__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t25190 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t25190 = (function (nil_iter,meta25191){
this.nil_iter = nil_iter;
this.meta25191 = meta25191;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t25190.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t25190.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t25190.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t25190.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_25192){
var self__ = this;
var _25192__$1 = this;
return self__.meta25191;
});

cljs.core.t25190.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_25192,meta25191__$1){
var self__ = this;
var _25192__$1 = this;
return (new cljs.core.t25190(self__.nil_iter,meta25191__$1));
});

cljs.core.t25190.cljs$lang$type = true;

cljs.core.t25190.cljs$lang$ctorStr = "cljs.core/t25190";

cljs.core.t25190.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/t25190");
});

cljs.core.__GT_t25190 = (function __GT_t25190(nil_iter__$1,meta25191){
return (new cljs.core.t25190(nil_iter__$1,meta25191));
});

}

return (new cljs.core.t25190(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15646__auto__ = !((lt.stepper == null));
if(and__15646__auto__){
return self__.iter.hasNext();
} else {
return and__15646__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__25193 = lt;
var G__25194 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__25193,G__25194) : self__.xform.call(null,G__25193,G__25194));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25195 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25195) : self__.xform.call(null,G__25195));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__25197 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25197) : xform.call(null,G__25197));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__25199 = cljs.core.next(iters__$1);
iters__$1 = G__25199;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__16545__auto___25200 = self__.iters.length;
var i_25201 = (0);
while(true){
if((i_25201 < n__16545__auto___25200)){
(self__.nexts[i_25201] = (self__.iters[i_25201]).next());

var G__25202 = (i_25201 + (1));
i_25201 = G__25202;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__15646__auto__ = !((lt.stepper == null));
if(and__15646__auto__){
return this$.hasNext();
} else {
return and__15646__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__25198 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__25198) : self__.xform.call(null,G__25198));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__25207 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__25207) : xform.call(null,G__25207));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__25208_25212 = cljs.core.seq(colls);
var chunk__25209_25213 = null;
var count__25210_25214 = (0);
var i__25211_25215 = (0);
while(true){
if((i__25211_25215 < count__25210_25214)){
var coll_25216 = chunk__25209_25213.cljs$core$IIndexed$_nth$arity$2(null,i__25211_25215);
iters.push(cljs.core.iter(coll_25216));

var G__25217 = seq__25208_25212;
var G__25218 = chunk__25209_25213;
var G__25219 = count__25210_25214;
var G__25220 = (i__25211_25215 + (1));
seq__25208_25212 = G__25217;
chunk__25209_25213 = G__25218;
count__25210_25214 = G__25219;
i__25211_25215 = G__25220;
continue;
} else {
var temp__4126__auto___25221 = cljs.core.seq(seq__25208_25212);
if(temp__4126__auto___25221){
var seq__25208_25222__$1 = temp__4126__auto___25221;
if(cljs.core.chunked_seq_QMARK_(seq__25208_25222__$1)){
var c__16445__auto___25223 = cljs.core.chunk_first(seq__25208_25222__$1);
var G__25224 = cljs.core.chunk_rest(seq__25208_25222__$1);
var G__25225 = c__16445__auto___25223;
var G__25226 = cljs.core.count(c__16445__auto___25223);
var G__25227 = (0);
seq__25208_25212 = G__25224;
chunk__25209_25213 = G__25225;
count__25210_25214 = G__25226;
i__25211_25215 = G__25227;
continue;
} else {
var coll_25228 = cljs.core.first(seq__25208_25222__$1);
iters.push(cljs.core.iter(coll_25228));

var G__25229 = cljs.core.next(seq__25208_25222__$1);
var G__25230 = null;
var G__25231 = (0);
var G__25232 = (0);
seq__25208_25212 = G__25229;
chunk__25209_25213 = G__25230;
count__25210_25214 = G__25231;
i__25211_25215 = G__25232;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__15658__auto__ = cljs.core.seq(coll);
if(or__15658__auto__){
return or__15658__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__25233__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__25233 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__25234__i = 0, G__25234__a = new Array(arguments.length -  2);
while (G__25234__i < G__25234__a.length) {G__25234__a[G__25234__i] = arguments[G__25234__i + 2]; ++G__25234__i;}
  colls = new cljs.core.IndexedSeq(G__25234__a,0);
} 
return G__25233__delegate.call(this,xform,coll,colls);};
G__25233.cljs$lang$maxFixedArity = 2;
G__25233.cljs$lang$applyTo = (function (arglist__25235){
var xform = cljs.core.first(arglist__25235);
arglist__25235 = cljs.core.next(arglist__25235);
var coll = cljs.core.first(arglist__25235);
var colls = cljs.core.rest(arglist__25235);
return G__25233__delegate(xform,coll,colls);
});
G__25233.cljs$core$IFn$_invoke$arity$variadic = G__25233__delegate;
return G__25233;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__25236 = null;
if (arguments.length > 2) {
var G__25237__i = 0, G__25237__a = new Array(arguments.length -  2);
while (G__25237__i < G__25237__a.length) {G__25237__a[G__25237__i] = arguments[G__25237__i + 2]; ++G__25237__i;}
G__25236 = new cljs.core.IndexedSeq(G__25237__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__25236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__25239 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25239) : pred.call(null,G__25239));
})())){
var G__25240 = pred;
var G__25241 = cljs.core.next(coll);
pred = G__25240;
coll = G__25241;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__15658__auto__ = (function (){var G__25245 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25245) : pred.call(null,G__25245));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__25246 = pred;
var G__25247 = cljs.core.next(coll);
pred = G__25246;
coll = G__25247;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__25254 = null;
var G__25254__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__25254__1 = (function (x){
return cljs.core.not((function (){var G__25251 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25251) : f.call(null,G__25251));
})());
});
var G__25254__2 = (function (x,y){
return cljs.core.not((function (){var G__25252 = x;
var G__25253 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25252,G__25253) : f.call(null,G__25252,G__25253));
})());
});
var G__25254__3 = (function() { 
var G__25255__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__25255 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__25256__i = 0, G__25256__a = new Array(arguments.length -  2);
while (G__25256__i < G__25256__a.length) {G__25256__a[G__25256__i] = arguments[G__25256__i + 2]; ++G__25256__i;}
  zs = new cljs.core.IndexedSeq(G__25256__a,0);
} 
return G__25255__delegate.call(this,x,y,zs);};
G__25255.cljs$lang$maxFixedArity = 2;
G__25255.cljs$lang$applyTo = (function (arglist__25257){
var x = cljs.core.first(arglist__25257);
arglist__25257 = cljs.core.next(arglist__25257);
var y = cljs.core.first(arglist__25257);
var zs = cljs.core.rest(arglist__25257);
return G__25255__delegate(x,y,zs);
});
G__25255.cljs$core$IFn$_invoke$arity$variadic = G__25255__delegate;
return G__25255;
})()
;
G__25254 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__25254__0.call(this);
case 1:
return G__25254__1.call(this,x);
case 2:
return G__25254__2.call(this,x,y);
default:
var G__25258 = null;
if (arguments.length > 2) {
var G__25259__i = 0, G__25259__a = new Array(arguments.length -  2);
while (G__25259__i < G__25259__a.length) {G__25259__a[G__25259__i] = arguments[G__25259__i + 2]; ++G__25259__i;}
G__25258 = new cljs.core.IndexedSeq(G__25259__a,0);
}
return G__25254__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__25258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25254.cljs$lang$maxFixedArity = 2;
G__25254.cljs$lang$applyTo = G__25254__3.cljs$lang$applyTo;
G__25254.cljs$core$IFn$_invoke$arity$0 = G__25254__0;
G__25254.cljs$core$IFn$_invoke$arity$1 = G__25254__1;
G__25254.cljs$core$IFn$_invoke$arity$2 = G__25254__2;
G__25254.cljs$core$IFn$_invoke$arity$variadic = G__25254__3.cljs$core$IFn$_invoke$arity$variadic;
return G__25254;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__25260__delegate = function (args){
return x;
};
var G__25260 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25261__i = 0, G__25261__a = new Array(arguments.length -  0);
while (G__25261__i < G__25261__a.length) {G__25261__a[G__25261__i] = arguments[G__25261__i + 0]; ++G__25261__i;}
  args = new cljs.core.IndexedSeq(G__25261__a,0);
} 
return G__25260__delegate.call(this,args);};
G__25260.cljs$lang$maxFixedArity = 0;
G__25260.cljs$lang$applyTo = (function (arglist__25262){
var args = cljs.core.seq(arglist__25262);
return G__25260__delegate(args);
});
G__25260.cljs$core$IFn$_invoke$arity$variadic = G__25260__delegate;
return G__25260;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__25317 = null;
var G__25317__0 = (function (){
var G__25290 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25290) : f.call(null,G__25290));
});
var G__25317__1 = (function (x){
var G__25291 = (function (){var G__25292 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25292) : g.call(null,G__25292));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25291) : f.call(null,G__25291));
});
var G__25317__2 = (function (x,y){
var G__25293 = (function (){var G__25294 = x;
var G__25295 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25294,G__25295) : g.call(null,G__25294,G__25295));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25293) : f.call(null,G__25293));
});
var G__25317__3 = (function (x,y,z){
var G__25296 = (function (){var G__25297 = x;
var G__25298 = y;
var G__25299 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25297,G__25298,G__25299) : g.call(null,G__25297,G__25298,G__25299));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25296) : f.call(null,G__25296));
});
var G__25317__4 = (function() { 
var G__25318__delegate = function (x,y,z,args){
var G__25300 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25300) : f.call(null,G__25300));
};
var G__25318 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25319__i = 0, G__25319__a = new Array(arguments.length -  3);
while (G__25319__i < G__25319__a.length) {G__25319__a[G__25319__i] = arguments[G__25319__i + 3]; ++G__25319__i;}
  args = new cljs.core.IndexedSeq(G__25319__a,0);
} 
return G__25318__delegate.call(this,x,y,z,args);};
G__25318.cljs$lang$maxFixedArity = 3;
G__25318.cljs$lang$applyTo = (function (arglist__25320){
var x = cljs.core.first(arglist__25320);
arglist__25320 = cljs.core.next(arglist__25320);
var y = cljs.core.first(arglist__25320);
arglist__25320 = cljs.core.next(arglist__25320);
var z = cljs.core.first(arglist__25320);
var args = cljs.core.rest(arglist__25320);
return G__25318__delegate(x,y,z,args);
});
G__25318.cljs$core$IFn$_invoke$arity$variadic = G__25318__delegate;
return G__25318;
})()
;
G__25317 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25317__0.call(this);
case 1:
return G__25317__1.call(this,x);
case 2:
return G__25317__2.call(this,x,y);
case 3:
return G__25317__3.call(this,x,y,z);
default:
var G__25321 = null;
if (arguments.length > 3) {
var G__25322__i = 0, G__25322__a = new Array(arguments.length -  3);
while (G__25322__i < G__25322__a.length) {G__25322__a[G__25322__i] = arguments[G__25322__i + 3]; ++G__25322__i;}
G__25321 = new cljs.core.IndexedSeq(G__25322__a,0);
}
return G__25317__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25317.cljs$lang$maxFixedArity = 3;
G__25317.cljs$lang$applyTo = G__25317__4.cljs$lang$applyTo;
G__25317.cljs$core$IFn$_invoke$arity$0 = G__25317__0;
G__25317.cljs$core$IFn$_invoke$arity$1 = G__25317__1;
G__25317.cljs$core$IFn$_invoke$arity$2 = G__25317__2;
G__25317.cljs$core$IFn$_invoke$arity$3 = G__25317__3;
G__25317.cljs$core$IFn$_invoke$arity$variadic = G__25317__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25317;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__25323 = null;
var G__25323__0 = (function (){
var G__25301 = (function (){var G__25302 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25302) : g.call(null,G__25302));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25301) : f.call(null,G__25301));
});
var G__25323__1 = (function (x){
var G__25303 = (function (){var G__25304 = (function (){var G__25305 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25305) : h.call(null,G__25305));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25304) : g.call(null,G__25304));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25303) : f.call(null,G__25303));
});
var G__25323__2 = (function (x,y){
var G__25306 = (function (){var G__25307 = (function (){var G__25308 = x;
var G__25309 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25308,G__25309) : h.call(null,G__25308,G__25309));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25307) : g.call(null,G__25307));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25306) : f.call(null,G__25306));
});
var G__25323__3 = (function (x,y,z){
var G__25310 = (function (){var G__25311 = (function (){var G__25312 = x;
var G__25313 = y;
var G__25314 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25312,G__25313,G__25314) : h.call(null,G__25312,G__25313,G__25314));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25311) : g.call(null,G__25311));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25310) : f.call(null,G__25310));
});
var G__25323__4 = (function() { 
var G__25324__delegate = function (x,y,z,args){
var G__25315 = (function (){var G__25316 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25316) : g.call(null,G__25316));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25315) : f.call(null,G__25315));
};
var G__25324 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25325__i = 0, G__25325__a = new Array(arguments.length -  3);
while (G__25325__i < G__25325__a.length) {G__25325__a[G__25325__i] = arguments[G__25325__i + 3]; ++G__25325__i;}
  args = new cljs.core.IndexedSeq(G__25325__a,0);
} 
return G__25324__delegate.call(this,x,y,z,args);};
G__25324.cljs$lang$maxFixedArity = 3;
G__25324.cljs$lang$applyTo = (function (arglist__25326){
var x = cljs.core.first(arglist__25326);
arglist__25326 = cljs.core.next(arglist__25326);
var y = cljs.core.first(arglist__25326);
arglist__25326 = cljs.core.next(arglist__25326);
var z = cljs.core.first(arglist__25326);
var args = cljs.core.rest(arglist__25326);
return G__25324__delegate(x,y,z,args);
});
G__25324.cljs$core$IFn$_invoke$arity$variadic = G__25324__delegate;
return G__25324;
})()
;
G__25323 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25323__0.call(this);
case 1:
return G__25323__1.call(this,x);
case 2:
return G__25323__2.call(this,x,y);
case 3:
return G__25323__3.call(this,x,y,z);
default:
var G__25327 = null;
if (arguments.length > 3) {
var G__25328__i = 0, G__25328__a = new Array(arguments.length -  3);
while (G__25328__i < G__25328__a.length) {G__25328__a[G__25328__i] = arguments[G__25328__i + 3]; ++G__25328__i;}
G__25327 = new cljs.core.IndexedSeq(G__25328__a,0);
}
return G__25323__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25323.cljs$lang$maxFixedArity = 3;
G__25323.cljs$lang$applyTo = G__25323__4.cljs$lang$applyTo;
G__25323.cljs$core$IFn$_invoke$arity$0 = G__25323__0;
G__25323.cljs$core$IFn$_invoke$arity$1 = G__25323__1;
G__25323.cljs$core$IFn$_invoke$arity$2 = G__25323__2;
G__25323.cljs$core$IFn$_invoke$arity$3 = G__25323__3;
G__25323.cljs$core$IFn$_invoke$arity$variadic = G__25323__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25323;
})()
});
var comp__4 = (function() { 
var G__25329__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__25330__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__25331 = cljs.core.first(fs__$2).call(null,ret);
var G__25332 = cljs.core.next(fs__$2);
ret = G__25331;
fs__$2 = G__25332;
continue;
} else {
return ret;
}
break;
}
};
var G__25330 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25333__i = 0, G__25333__a = new Array(arguments.length -  0);
while (G__25333__i < G__25333__a.length) {G__25333__a[G__25333__i] = arguments[G__25333__i + 0]; ++G__25333__i;}
  args = new cljs.core.IndexedSeq(G__25333__a,0);
} 
return G__25330__delegate.call(this,args);};
G__25330.cljs$lang$maxFixedArity = 0;
G__25330.cljs$lang$applyTo = (function (arglist__25334){
var args = cljs.core.seq(arglist__25334);
return G__25330__delegate(args);
});
G__25330.cljs$core$IFn$_invoke$arity$variadic = G__25330__delegate;
return G__25330;
})()
;
;})(fs__$1))
};
var G__25329 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25335__i = 0, G__25335__a = new Array(arguments.length -  3);
while (G__25335__i < G__25335__a.length) {G__25335__a[G__25335__i] = arguments[G__25335__i + 3]; ++G__25335__i;}
  fs = new cljs.core.IndexedSeq(G__25335__a,0);
} 
return G__25329__delegate.call(this,f1,f2,f3,fs);};
G__25329.cljs$lang$maxFixedArity = 3;
G__25329.cljs$lang$applyTo = (function (arglist__25336){
var f1 = cljs.core.first(arglist__25336);
arglist__25336 = cljs.core.next(arglist__25336);
var f2 = cljs.core.first(arglist__25336);
arglist__25336 = cljs.core.next(arglist__25336);
var f3 = cljs.core.first(arglist__25336);
var fs = cljs.core.rest(arglist__25336);
return G__25329__delegate(f1,f2,f3,fs);
});
G__25329.cljs$core$IFn$_invoke$arity$variadic = G__25329__delegate;
return G__25329;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__25337 = null;
if (arguments.length > 3) {
var G__25338__i = 0, G__25338__a = new Array(arguments.length -  3);
while (G__25338__i < G__25338__a.length) {G__25338__a[G__25338__i] = arguments[G__25338__i + 3]; ++G__25338__i;}
G__25337 = new cljs.core.IndexedSeq(G__25338__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__25337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__25423 = null;
var G__25423__0 = (function (){
var G__25381 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25381) : f.call(null,G__25381));
});
var G__25423__1 = (function (x){
var G__25382 = arg1;
var G__25383 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25382,G__25383) : f.call(null,G__25382,G__25383));
});
var G__25423__2 = (function (x,y){
var G__25384 = arg1;
var G__25385 = x;
var G__25386 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25384,G__25385,G__25386) : f.call(null,G__25384,G__25385,G__25386));
});
var G__25423__3 = (function (x,y,z){
var G__25387 = arg1;
var G__25388 = x;
var G__25389 = y;
var G__25390 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25387,G__25388,G__25389,G__25390) : f.call(null,G__25387,G__25388,G__25389,G__25390));
});
var G__25423__4 = (function() { 
var G__25424__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__25424 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25425__i = 0, G__25425__a = new Array(arguments.length -  3);
while (G__25425__i < G__25425__a.length) {G__25425__a[G__25425__i] = arguments[G__25425__i + 3]; ++G__25425__i;}
  args = new cljs.core.IndexedSeq(G__25425__a,0);
} 
return G__25424__delegate.call(this,x,y,z,args);};
G__25424.cljs$lang$maxFixedArity = 3;
G__25424.cljs$lang$applyTo = (function (arglist__25426){
var x = cljs.core.first(arglist__25426);
arglist__25426 = cljs.core.next(arglist__25426);
var y = cljs.core.first(arglist__25426);
arglist__25426 = cljs.core.next(arglist__25426);
var z = cljs.core.first(arglist__25426);
var args = cljs.core.rest(arglist__25426);
return G__25424__delegate(x,y,z,args);
});
G__25424.cljs$core$IFn$_invoke$arity$variadic = G__25424__delegate;
return G__25424;
})()
;
G__25423 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25423__0.call(this);
case 1:
return G__25423__1.call(this,x);
case 2:
return G__25423__2.call(this,x,y);
case 3:
return G__25423__3.call(this,x,y,z);
default:
var G__25427 = null;
if (arguments.length > 3) {
var G__25428__i = 0, G__25428__a = new Array(arguments.length -  3);
while (G__25428__i < G__25428__a.length) {G__25428__a[G__25428__i] = arguments[G__25428__i + 3]; ++G__25428__i;}
G__25427 = new cljs.core.IndexedSeq(G__25428__a,0);
}
return G__25423__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25427);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25423.cljs$lang$maxFixedArity = 3;
G__25423.cljs$lang$applyTo = G__25423__4.cljs$lang$applyTo;
G__25423.cljs$core$IFn$_invoke$arity$0 = G__25423__0;
G__25423.cljs$core$IFn$_invoke$arity$1 = G__25423__1;
G__25423.cljs$core$IFn$_invoke$arity$2 = G__25423__2;
G__25423.cljs$core$IFn$_invoke$arity$3 = G__25423__3;
G__25423.cljs$core$IFn$_invoke$arity$variadic = G__25423__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25423;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__25429 = null;
var G__25429__0 = (function (){
var G__25391 = arg1;
var G__25392 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25391,G__25392) : f.call(null,G__25391,G__25392));
});
var G__25429__1 = (function (x){
var G__25393 = arg1;
var G__25394 = arg2;
var G__25395 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25393,G__25394,G__25395) : f.call(null,G__25393,G__25394,G__25395));
});
var G__25429__2 = (function (x,y){
var G__25396 = arg1;
var G__25397 = arg2;
var G__25398 = x;
var G__25399 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25396,G__25397,G__25398,G__25399) : f.call(null,G__25396,G__25397,G__25398,G__25399));
});
var G__25429__3 = (function (x,y,z){
var G__25400 = arg1;
var G__25401 = arg2;
var G__25402 = x;
var G__25403 = y;
var G__25404 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25400,G__25401,G__25402,G__25403,G__25404) : f.call(null,G__25400,G__25401,G__25402,G__25403,G__25404));
});
var G__25429__4 = (function() { 
var G__25430__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__25430 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25431__i = 0, G__25431__a = new Array(arguments.length -  3);
while (G__25431__i < G__25431__a.length) {G__25431__a[G__25431__i] = arguments[G__25431__i + 3]; ++G__25431__i;}
  args = new cljs.core.IndexedSeq(G__25431__a,0);
} 
return G__25430__delegate.call(this,x,y,z,args);};
G__25430.cljs$lang$maxFixedArity = 3;
G__25430.cljs$lang$applyTo = (function (arglist__25432){
var x = cljs.core.first(arglist__25432);
arglist__25432 = cljs.core.next(arglist__25432);
var y = cljs.core.first(arglist__25432);
arglist__25432 = cljs.core.next(arglist__25432);
var z = cljs.core.first(arglist__25432);
var args = cljs.core.rest(arglist__25432);
return G__25430__delegate(x,y,z,args);
});
G__25430.cljs$core$IFn$_invoke$arity$variadic = G__25430__delegate;
return G__25430;
})()
;
G__25429 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25429__0.call(this);
case 1:
return G__25429__1.call(this,x);
case 2:
return G__25429__2.call(this,x,y);
case 3:
return G__25429__3.call(this,x,y,z);
default:
var G__25433 = null;
if (arguments.length > 3) {
var G__25434__i = 0, G__25434__a = new Array(arguments.length -  3);
while (G__25434__i < G__25434__a.length) {G__25434__a[G__25434__i] = arguments[G__25434__i + 3]; ++G__25434__i;}
G__25433 = new cljs.core.IndexedSeq(G__25434__a,0);
}
return G__25429__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25433);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25429.cljs$lang$maxFixedArity = 3;
G__25429.cljs$lang$applyTo = G__25429__4.cljs$lang$applyTo;
G__25429.cljs$core$IFn$_invoke$arity$0 = G__25429__0;
G__25429.cljs$core$IFn$_invoke$arity$1 = G__25429__1;
G__25429.cljs$core$IFn$_invoke$arity$2 = G__25429__2;
G__25429.cljs$core$IFn$_invoke$arity$3 = G__25429__3;
G__25429.cljs$core$IFn$_invoke$arity$variadic = G__25429__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25429;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__25435 = null;
var G__25435__0 = (function (){
var G__25405 = arg1;
var G__25406 = arg2;
var G__25407 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25405,G__25406,G__25407) : f.call(null,G__25405,G__25406,G__25407));
});
var G__25435__1 = (function (x){
var G__25408 = arg1;
var G__25409 = arg2;
var G__25410 = arg3;
var G__25411 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25408,G__25409,G__25410,G__25411) : f.call(null,G__25408,G__25409,G__25410,G__25411));
});
var G__25435__2 = (function (x,y){
var G__25412 = arg1;
var G__25413 = arg2;
var G__25414 = arg3;
var G__25415 = x;
var G__25416 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__25412,G__25413,G__25414,G__25415,G__25416) : f.call(null,G__25412,G__25413,G__25414,G__25415,G__25416));
});
var G__25435__3 = (function (x,y,z){
var G__25417 = arg1;
var G__25418 = arg2;
var G__25419 = arg3;
var G__25420 = x;
var G__25421 = y;
var G__25422 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__25417,G__25418,G__25419,G__25420,G__25421,G__25422) : f.call(null,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422));
});
var G__25435__4 = (function() { 
var G__25436__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__25436 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25437__i = 0, G__25437__a = new Array(arguments.length -  3);
while (G__25437__i < G__25437__a.length) {G__25437__a[G__25437__i] = arguments[G__25437__i + 3]; ++G__25437__i;}
  args = new cljs.core.IndexedSeq(G__25437__a,0);
} 
return G__25436__delegate.call(this,x,y,z,args);};
G__25436.cljs$lang$maxFixedArity = 3;
G__25436.cljs$lang$applyTo = (function (arglist__25438){
var x = cljs.core.first(arglist__25438);
arglist__25438 = cljs.core.next(arglist__25438);
var y = cljs.core.first(arglist__25438);
arglist__25438 = cljs.core.next(arglist__25438);
var z = cljs.core.first(arglist__25438);
var args = cljs.core.rest(arglist__25438);
return G__25436__delegate(x,y,z,args);
});
G__25436.cljs$core$IFn$_invoke$arity$variadic = G__25436__delegate;
return G__25436;
})()
;
G__25435 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25435__0.call(this);
case 1:
return G__25435__1.call(this,x);
case 2:
return G__25435__2.call(this,x,y);
case 3:
return G__25435__3.call(this,x,y,z);
default:
var G__25439 = null;
if (arguments.length > 3) {
var G__25440__i = 0, G__25440__a = new Array(arguments.length -  3);
while (G__25440__i < G__25440__a.length) {G__25440__a[G__25440__i] = arguments[G__25440__i + 3]; ++G__25440__i;}
G__25439 = new cljs.core.IndexedSeq(G__25440__a,0);
}
return G__25435__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25435.cljs$lang$maxFixedArity = 3;
G__25435.cljs$lang$applyTo = G__25435__4.cljs$lang$applyTo;
G__25435.cljs$core$IFn$_invoke$arity$0 = G__25435__0;
G__25435.cljs$core$IFn$_invoke$arity$1 = G__25435__1;
G__25435.cljs$core$IFn$_invoke$arity$2 = G__25435__2;
G__25435.cljs$core$IFn$_invoke$arity$3 = G__25435__3;
G__25435.cljs$core$IFn$_invoke$arity$variadic = G__25435__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25435;
})()
});
var partial__5 = (function() { 
var G__25441__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__25442__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__25442 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25443__i = 0, G__25443__a = new Array(arguments.length -  0);
while (G__25443__i < G__25443__a.length) {G__25443__a[G__25443__i] = arguments[G__25443__i + 0]; ++G__25443__i;}
  args = new cljs.core.IndexedSeq(G__25443__a,0);
} 
return G__25442__delegate.call(this,args);};
G__25442.cljs$lang$maxFixedArity = 0;
G__25442.cljs$lang$applyTo = (function (arglist__25444){
var args = cljs.core.seq(arglist__25444);
return G__25442__delegate(args);
});
G__25442.cljs$core$IFn$_invoke$arity$variadic = G__25442__delegate;
return G__25442;
})()
;
};
var G__25441 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__25445__i = 0, G__25445__a = new Array(arguments.length -  4);
while (G__25445__i < G__25445__a.length) {G__25445__a[G__25445__i] = arguments[G__25445__i + 4]; ++G__25445__i;}
  more = new cljs.core.IndexedSeq(G__25445__a,0);
} 
return G__25441__delegate.call(this,f,arg1,arg2,arg3,more);};
G__25441.cljs$lang$maxFixedArity = 4;
G__25441.cljs$lang$applyTo = (function (arglist__25446){
var f = cljs.core.first(arglist__25446);
arglist__25446 = cljs.core.next(arglist__25446);
var arg1 = cljs.core.first(arglist__25446);
arglist__25446 = cljs.core.next(arglist__25446);
var arg2 = cljs.core.first(arglist__25446);
arglist__25446 = cljs.core.next(arglist__25446);
var arg3 = cljs.core.first(arglist__25446);
var more = cljs.core.rest(arglist__25446);
return G__25441__delegate(f,arg1,arg2,arg3,more);
});
G__25441.cljs$core$IFn$_invoke$arity$variadic = G__25441__delegate;
return G__25441;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__25447 = null;
if (arguments.length > 4) {
var G__25448__i = 0, G__25448__a = new Array(arguments.length -  4);
while (G__25448__i < G__25448__a.length) {G__25448__a[G__25448__i] = arguments[G__25448__i + 4]; ++G__25448__i;}
G__25447 = new cljs.core.IndexedSeq(G__25448__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__25447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__25481 = null;
var G__25481__1 = (function (a){
var G__25465 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25465) : f.call(null,G__25465));
});
var G__25481__2 = (function (a,b){
var G__25466 = (((a == null))?x:a);
var G__25467 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25466,G__25467) : f.call(null,G__25466,G__25467));
});
var G__25481__3 = (function (a,b,c){
var G__25468 = (((a == null))?x:a);
var G__25469 = b;
var G__25470 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25468,G__25469,G__25470) : f.call(null,G__25468,G__25469,G__25470));
});
var G__25481__4 = (function() { 
var G__25482__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__25482 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25483__i = 0, G__25483__a = new Array(arguments.length -  3);
while (G__25483__i < G__25483__a.length) {G__25483__a[G__25483__i] = arguments[G__25483__i + 3]; ++G__25483__i;}
  ds = new cljs.core.IndexedSeq(G__25483__a,0);
} 
return G__25482__delegate.call(this,a,b,c,ds);};
G__25482.cljs$lang$maxFixedArity = 3;
G__25482.cljs$lang$applyTo = (function (arglist__25484){
var a = cljs.core.first(arglist__25484);
arglist__25484 = cljs.core.next(arglist__25484);
var b = cljs.core.first(arglist__25484);
arglist__25484 = cljs.core.next(arglist__25484);
var c = cljs.core.first(arglist__25484);
var ds = cljs.core.rest(arglist__25484);
return G__25482__delegate(a,b,c,ds);
});
G__25482.cljs$core$IFn$_invoke$arity$variadic = G__25482__delegate;
return G__25482;
})()
;
G__25481 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__25481__1.call(this,a);
case 2:
return G__25481__2.call(this,a,b);
case 3:
return G__25481__3.call(this,a,b,c);
default:
var G__25485 = null;
if (arguments.length > 3) {
var G__25486__i = 0, G__25486__a = new Array(arguments.length -  3);
while (G__25486__i < G__25486__a.length) {G__25486__a[G__25486__i] = arguments[G__25486__i + 3]; ++G__25486__i;}
G__25485 = new cljs.core.IndexedSeq(G__25486__a,0);
}
return G__25481__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25481.cljs$lang$maxFixedArity = 3;
G__25481.cljs$lang$applyTo = G__25481__4.cljs$lang$applyTo;
G__25481.cljs$core$IFn$_invoke$arity$1 = G__25481__1;
G__25481.cljs$core$IFn$_invoke$arity$2 = G__25481__2;
G__25481.cljs$core$IFn$_invoke$arity$3 = G__25481__3;
G__25481.cljs$core$IFn$_invoke$arity$variadic = G__25481__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25481;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__25487 = null;
var G__25487__2 = (function (a,b){
var G__25471 = (((a == null))?x:a);
var G__25472 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25471,G__25472) : f.call(null,G__25471,G__25472));
});
var G__25487__3 = (function (a,b,c){
var G__25473 = (((a == null))?x:a);
var G__25474 = (((b == null))?y:b);
var G__25475 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25473,G__25474,G__25475) : f.call(null,G__25473,G__25474,G__25475));
});
var G__25487__4 = (function() { 
var G__25488__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__25488 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25489__i = 0, G__25489__a = new Array(arguments.length -  3);
while (G__25489__i < G__25489__a.length) {G__25489__a[G__25489__i] = arguments[G__25489__i + 3]; ++G__25489__i;}
  ds = new cljs.core.IndexedSeq(G__25489__a,0);
} 
return G__25488__delegate.call(this,a,b,c,ds);};
G__25488.cljs$lang$maxFixedArity = 3;
G__25488.cljs$lang$applyTo = (function (arglist__25490){
var a = cljs.core.first(arglist__25490);
arglist__25490 = cljs.core.next(arglist__25490);
var b = cljs.core.first(arglist__25490);
arglist__25490 = cljs.core.next(arglist__25490);
var c = cljs.core.first(arglist__25490);
var ds = cljs.core.rest(arglist__25490);
return G__25488__delegate(a,b,c,ds);
});
G__25488.cljs$core$IFn$_invoke$arity$variadic = G__25488__delegate;
return G__25488;
})()
;
G__25487 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25487__2.call(this,a,b);
case 3:
return G__25487__3.call(this,a,b,c);
default:
var G__25491 = null;
if (arguments.length > 3) {
var G__25492__i = 0, G__25492__a = new Array(arguments.length -  3);
while (G__25492__i < G__25492__a.length) {G__25492__a[G__25492__i] = arguments[G__25492__i + 3]; ++G__25492__i;}
G__25491 = new cljs.core.IndexedSeq(G__25492__a,0);
}
return G__25487__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25487.cljs$lang$maxFixedArity = 3;
G__25487.cljs$lang$applyTo = G__25487__4.cljs$lang$applyTo;
G__25487.cljs$core$IFn$_invoke$arity$2 = G__25487__2;
G__25487.cljs$core$IFn$_invoke$arity$3 = G__25487__3;
G__25487.cljs$core$IFn$_invoke$arity$variadic = G__25487__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25487;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__25493 = null;
var G__25493__2 = (function (a,b){
var G__25476 = (((a == null))?x:a);
var G__25477 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25476,G__25477) : f.call(null,G__25476,G__25477));
});
var G__25493__3 = (function (a,b,c){
var G__25478 = (((a == null))?x:a);
var G__25479 = (((b == null))?y:b);
var G__25480 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25478,G__25479,G__25480) : f.call(null,G__25478,G__25479,G__25480));
});
var G__25493__4 = (function() { 
var G__25494__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__25494 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__25495__i = 0, G__25495__a = new Array(arguments.length -  3);
while (G__25495__i < G__25495__a.length) {G__25495__a[G__25495__i] = arguments[G__25495__i + 3]; ++G__25495__i;}
  ds = new cljs.core.IndexedSeq(G__25495__a,0);
} 
return G__25494__delegate.call(this,a,b,c,ds);};
G__25494.cljs$lang$maxFixedArity = 3;
G__25494.cljs$lang$applyTo = (function (arglist__25496){
var a = cljs.core.first(arglist__25496);
arglist__25496 = cljs.core.next(arglist__25496);
var b = cljs.core.first(arglist__25496);
arglist__25496 = cljs.core.next(arglist__25496);
var c = cljs.core.first(arglist__25496);
var ds = cljs.core.rest(arglist__25496);
return G__25494__delegate(a,b,c,ds);
});
G__25494.cljs$core$IFn$_invoke$arity$variadic = G__25494__delegate;
return G__25494;
})()
;
G__25493 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__25493__2.call(this,a,b);
case 3:
return G__25493__3.call(this,a,b,c);
default:
var G__25497 = null;
if (arguments.length > 3) {
var G__25498__i = 0, G__25498__a = new Array(arguments.length -  3);
while (G__25498__i < G__25498__a.length) {G__25498__a[G__25498__i] = arguments[G__25498__i + 3]; ++G__25498__i;}
G__25497 = new cljs.core.IndexedSeq(G__25498__a,0);
}
return G__25493__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__25497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25493.cljs$lang$maxFixedArity = 3;
G__25493.cljs$lang$applyTo = G__25493__4.cljs$lang$applyTo;
G__25493.cljs$core$IFn$_invoke$arity$2 = G__25493__2;
G__25493.cljs$core$IFn$_invoke$arity$3 = G__25493__3;
G__25493.cljs$core$IFn$_invoke$arity$variadic = G__25493__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25493;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__25529 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__25529) : cljs.core.volatile_BANG_.call(null,G__25529));
})();
return ((function (i){
return (function() {
var G__25559 = null;
var G__25559__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25559__1 = (function (result){
var G__25530 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25530) : rf.call(null,G__25530));
});
var G__25559__2 = (function (result,input){
var G__25531 = result;
var G__25532 = (function (){var G__25533 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__25534 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25533,G__25534) : f.call(null,G__25533,G__25534));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25531,G__25532) : rf.call(null,G__25531,G__25532));
});
G__25559 = function(result,input){
switch(arguments.length){
case 0:
return G__25559__0.call(this);
case 1:
return G__25559__1.call(this,result);
case 2:
return G__25559__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25559.cljs$core$IFn$_invoke$arity$0 = G__25559__0;
G__25559.cljs$core$IFn$_invoke$arity$1 = G__25559__1;
G__25559.cljs$core$IFn$_invoke$arity$2 = G__25559__2;
return G__25559;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25560 = size;
var i_25561 = (0);
while(true){
if((i_25561 < n__16545__auto___25560)){
cljs.core.chunk_append(b,(function (){var G__25555 = (idx + i_25561);
var G__25556 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25561);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25555,G__25556) : f.call(null,G__25555,G__25556));
})());

var G__25562 = (i_25561 + (1));
i_25561 = G__25562;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__25557 = idx;
var G__25558 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25557,G__25558) : f.call(null,G__25557,G__25558));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__25581 = null;
var G__25581__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25581__1 = (function (result){
var G__25575 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25575) : rf.call(null,G__25575));
});
var G__25581__2 = (function (result,input){
var v = (function (){var G__25576 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25576) : f.call(null,G__25576));
})();
if((v == null)){
return result;
} else {
var G__25577 = result;
var G__25578 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25577,G__25578) : rf.call(null,G__25577,G__25578));
}
});
G__25581 = function(result,input){
switch(arguments.length){
case 0:
return G__25581__0.call(this);
case 1:
return G__25581__1.call(this,result);
case 2:
return G__25581__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25581.cljs$core$IFn$_invoke$arity$0 = G__25581__0;
G__25581.cljs$core$IFn$_invoke$arity$1 = G__25581__1;
G__25581.cljs$core$IFn$_invoke$arity$2 = G__25581__2;
return G__25581;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25582 = size;
var i_25583 = (0);
while(true){
if((i_25583 < n__16545__auto___25582)){
var x_25584 = (function (){var G__25579 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25583);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25579) : f.call(null,G__25579));
})();
if((x_25584 == null)){
} else {
cljs.core.chunk_append(b,x_25584);
}

var G__25585 = (i_25583 + (1));
i_25583 = G__25585;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25580 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25580) : f.call(null,G__25580));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25586 = this$__$1;
return goog.getUid(G__25586);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__25587 = cljs.core.seq(self__.watches);
var chunk__25588 = null;
var count__25589 = (0);
var i__25590 = (0);
while(true){
if((i__25590 < count__25589)){
var vec__25591 = chunk__25588.cljs$core$IIndexed$_nth$arity$2(null,i__25590);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25591,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25591,(1),null);
var G__25592_25601 = key;
var G__25593_25602 = this$__$1;
var G__25594_25603 = oldval;
var G__25595_25604 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25592_25601,G__25593_25602,G__25594_25603,G__25595_25604) : f.call(null,G__25592_25601,G__25593_25602,G__25594_25603,G__25595_25604));

var G__25605 = seq__25587;
var G__25606 = chunk__25588;
var G__25607 = count__25589;
var G__25608 = (i__25590 + (1));
seq__25587 = G__25605;
chunk__25588 = G__25606;
count__25589 = G__25607;
i__25590 = G__25608;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25587);
if(temp__4126__auto__){
var seq__25587__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25587__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__25587__$1);
var G__25609 = cljs.core.chunk_rest(seq__25587__$1);
var G__25610 = c__16445__auto__;
var G__25611 = cljs.core.count(c__16445__auto__);
var G__25612 = (0);
seq__25587 = G__25609;
chunk__25588 = G__25610;
count__25589 = G__25611;
i__25590 = G__25612;
continue;
} else {
var vec__25596 = cljs.core.first(seq__25587__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25596,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25596,(1),null);
var G__25597_25613 = key;
var G__25598_25614 = this$__$1;
var G__25599_25615 = oldval;
var G__25600_25616 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__25597_25613,G__25598_25614,G__25599_25615,G__25600_25616) : f.call(null,G__25597_25613,G__25598_25614,G__25599_25615,G__25600_25616));

var G__25617 = cljs.core.next(seq__25587__$1);
var G__25618 = null;
var G__25619 = (0);
var G__25620 = (0);
seq__25587 = G__25617;
chunk__25588 = G__25618;
count__25589 = G__25619;
i__25590 = G__25620;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__25624__delegate = function (x,p__25621){
var map__25623 = p__25621;
var map__25623__$1 = ((cljs.core.seq_QMARK_(map__25623))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25623):map__25623);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25623__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25623__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__25624 = function (x,var_args){
var p__25621 = null;
if (arguments.length > 1) {
var G__25625__i = 0, G__25625__a = new Array(arguments.length -  1);
while (G__25625__i < G__25625__a.length) {G__25625__a[G__25625__i] = arguments[G__25625__i + 1]; ++G__25625__i;}
  p__25621 = new cljs.core.IndexedSeq(G__25625__a,0);
} 
return G__25624__delegate.call(this,x,p__25621);};
G__25624.cljs$lang$maxFixedArity = 1;
G__25624.cljs$lang$applyTo = (function (arglist__25626){
var x = cljs.core.first(arglist__25626);
var p__25621 = cljs.core.rest(arglist__25626);
return G__25624__delegate(x,p__25621);
});
G__25624.cljs$core$IFn$_invoke$arity$variadic = G__25624__delegate;
return G__25624;
})()
;
atom = function(x,var_args){
var p__25621 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__25627 = null;
if (arguments.length > 1) {
var G__25628__i = 0, G__25628__a = new Array(arguments.length -  1);
while (G__25628__i < G__25628__a.length) {G__25628__a[G__25628__i] = arguments[G__25628__i + 1]; ++G__25628__i;}
G__25627 = new cljs.core.IndexedSeq(G__25628__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25627);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__25631 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__25631) : validate.call(null,G__25631));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__25632 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__25632) : cljs.core.pr_str.call(null,G__25632));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25639 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25639) : f.call(null,G__25639));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25640 = a.state;
var G__25641 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25640,G__25641) : f.call(null,G__25640,G__25641));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__25642 = a.state;
var G__25643 = x;
var G__25644 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25642,G__25643,G__25644) : f.call(null,G__25642,G__25643,G__25644));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__25645__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__25645 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__25646__i = 0, G__25646__a = new Array(arguments.length -  4);
while (G__25646__i < G__25646__a.length) {G__25646__a[G__25646__i] = arguments[G__25646__i + 4]; ++G__25646__i;}
  more = new cljs.core.IndexedSeq(G__25646__a,0);
} 
return G__25645__delegate.call(this,a,f,x,y,more);};
G__25645.cljs$lang$maxFixedArity = 4;
G__25645.cljs$lang$applyTo = (function (arglist__25647){
var a = cljs.core.first(arglist__25647);
arglist__25647 = cljs.core.next(arglist__25647);
var f = cljs.core.first(arglist__25647);
arglist__25647 = cljs.core.next(arglist__25647);
var x = cljs.core.first(arglist__25647);
arglist__25647 = cljs.core.next(arglist__25647);
var y = cljs.core.first(arglist__25647);
var more = cljs.core.rest(arglist__25647);
return G__25645__delegate(a,f,x,y,more);
});
G__25645.cljs$core$IFn$_invoke$arity$variadic = G__25645__delegate;
return G__25645;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__25648 = null;
if (arguments.length > 4) {
var G__25649__i = 0, G__25649__a = new Array(arguments.length -  4);
while (G__25649__i < G__25649__a.length) {G__25649__a[G__25649__i] = arguments[G__25649__i + 4]; ++G__25649__i;}
G__25648 = new cljs.core.IndexedSeq(G__25649__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__25648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25716 = null;
var G__25716__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25716__1 = (function (result){
var G__25683 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25683) : rf.call(null,G__25683));
});
var G__25716__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__25684 = i;
var G__25685 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25684,G__25685) : f.call(null,G__25684,G__25685));
})();
if((v == null)){
return result;
} else {
var G__25686 = result;
var G__25687 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25686,G__25687) : rf.call(null,G__25686,G__25687));
}
});
G__25716 = function(result,input){
switch(arguments.length){
case 0:
return G__25716__0.call(this);
case 1:
return G__25716__1.call(this,result);
case 2:
return G__25716__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25716.cljs$core$IFn$_invoke$arity$0 = G__25716__0;
G__25716.cljs$core$IFn$_invoke$arity$1 = G__25716__1;
G__25716.cljs$core$IFn$_invoke$arity$2 = G__25716__2;
return G__25716;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___25717 = size;
var i_25718 = (0);
while(true){
if((i_25718 < n__16545__auto___25717)){
var x_25719 = (function (){var G__25712 = (idx + i_25718);
var G__25713 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_25718);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25712,G__25713) : f.call(null,G__25712,G__25713));
})();
if((x_25719 == null)){
} else {
cljs.core.chunk_append(b,x_25719);
}

var G__25720 = (i_25718 + (1));
i_25718 = G__25720;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__25714 = idx;
var G__25715 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25714,G__25715) : f.call(null,G__25714,G__25715));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__25934 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25934) : p.call(null,G__25934));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__25936 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25936) : p.call(null,G__25936));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__25937 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25937) : p.call(null,G__25937));
} else {
return and__15646__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__25939 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25939) : p.call(null,G__25939));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__25941 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25941) : p.call(null,G__25941));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__25942 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__25942) : p.call(null,G__25942));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__26111__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__26111 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26112__i = 0, G__26112__a = new Array(arguments.length -  3);
while (G__26112__i < G__26112__a.length) {G__26112__a[G__26112__i] = arguments[G__26112__i + 3]; ++G__26112__i;}
  args = new cljs.core.IndexedSeq(G__26112__a,0);
} 
return G__26111__delegate.call(this,x,y,z,args);};
G__26111.cljs$lang$maxFixedArity = 3;
G__26111.cljs$lang$applyTo = (function (arglist__26113){
var x = cljs.core.first(arglist__26113);
arglist__26113 = cljs.core.next(arglist__26113);
var y = cljs.core.first(arglist__26113);
arglist__26113 = cljs.core.next(arglist__26113);
var z = cljs.core.first(arglist__26113);
var args = cljs.core.rest(arglist__26113);
return G__26111__delegate(x,y,z,args);
});
G__26111.cljs$core$IFn$_invoke$arity$variadic = G__26111__delegate;
return G__26111;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__26114 = null;
if (arguments.length > 3) {
var G__26115__i = 0, G__26115__a = new Array(arguments.length -  3);
while (G__26115__i < G__26115__a.length) {G__26115__a[G__26115__i] = arguments[G__26115__i + 3]; ++G__26115__i;}
G__26114 = new cljs.core.IndexedSeq(G__26115__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__25974 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25974) : p1.call(null,G__25974));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__25975 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25975) : p2.call(null,G__25975));
} else {
return and__15646__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__25977 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25977) : p1.call(null,G__25977));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__25979 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25979) : p1.call(null,G__25979));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__25981 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25981) : p2.call(null,G__25981));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var G__25982 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25982) : p2.call(null,G__25982));
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__25984 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25984) : p1.call(null,G__25984));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__25986 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25986) : p1.call(null,G__25986));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__25988 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25988) : p1.call(null,G__25988));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__25990 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25990) : p2.call(null,G__25990));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__25992 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25992) : p2.call(null,G__25992));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var G__25993 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25993) : p2.call(null,G__25993));
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__26116__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25721_SHARP_){
var and__15646__auto__ = (function (){var G__25998 = p1__25721_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__25998) : p1.call(null,G__25998));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__25999 = p1__25721_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__25999) : p2.call(null,G__25999));
} else {
return and__15646__auto__;
}
}),args)));
};
var G__26116 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26117__i = 0, G__26117__a = new Array(arguments.length -  3);
while (G__26117__i < G__26117__a.length) {G__26117__a[G__26117__i] = arguments[G__26117__i + 3]; ++G__26117__i;}
  args = new cljs.core.IndexedSeq(G__26117__a,0);
} 
return G__26116__delegate.call(this,x,y,z,args);};
G__26116.cljs$lang$maxFixedArity = 3;
G__26116.cljs$lang$applyTo = (function (arglist__26118){
var x = cljs.core.first(arglist__26118);
arglist__26118 = cljs.core.next(arglist__26118);
var y = cljs.core.first(arglist__26118);
arglist__26118 = cljs.core.next(arglist__26118);
var z = cljs.core.first(arglist__26118);
var args = cljs.core.rest(arglist__26118);
return G__26116__delegate(x,y,z,args);
});
G__26116.cljs$core$IFn$_invoke$arity$variadic = G__26116__delegate;
return G__26116;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__26119 = null;
if (arguments.length > 3) {
var G__26120__i = 0, G__26120__a = new Array(arguments.length -  3);
while (G__26120__i < G__26120__a.length) {G__26120__a[G__26120__i] = arguments[G__26120__i + 3]; ++G__26120__i;}
G__26119 = new cljs.core.IndexedSeq(G__26120__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26045 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26045) : p1.call(null,G__26045));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26047 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26047) : p2.call(null,G__26047));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26048 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26048) : p3.call(null,G__26048));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26050 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26050) : p1.call(null,G__26050));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26052 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26052) : p2.call(null,G__26052));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26054 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26054) : p3.call(null,G__26054));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__26056 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26056) : p1.call(null,G__26056));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__26058 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26058) : p2.call(null,G__26058));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var G__26059 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26059) : p3.call(null,G__26059));
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__15646__auto__ = (function (){var G__26061 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26061) : p1.call(null,G__26061));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26063 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26063) : p2.call(null,G__26063));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var and__15646__auto____$2 = (function (){var G__26065 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26065) : p3.call(null,G__26065));
})();
if(cljs.core.truth_(and__15646__auto____$2)){
var and__15646__auto____$3 = (function (){var G__26067 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26067) : p1.call(null,G__26067));
})();
if(cljs.core.truth_(and__15646__auto____$3)){
var and__15646__auto____$4 = (function (){var G__26069 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26069) : p2.call(null,G__26069));
})();
if(cljs.core.truth_(and__15646__auto____$4)){
var and__15646__auto____$5 = (function (){var G__26071 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26071) : p3.call(null,G__26071));
})();
if(cljs.core.truth_(and__15646__auto____$5)){
var and__15646__auto____$6 = (function (){var G__26073 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26073) : p1.call(null,G__26073));
})();
if(cljs.core.truth_(and__15646__auto____$6)){
var and__15646__auto____$7 = (function (){var G__26075 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26075) : p2.call(null,G__26075));
})();
if(cljs.core.truth_(and__15646__auto____$7)){
var G__26076 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26076) : p3.call(null,G__26076));
} else {
return and__15646__auto____$7;
}
} else {
return and__15646__auto____$6;
}
} else {
return and__15646__auto____$5;
}
} else {
return and__15646__auto____$4;
}
} else {
return and__15646__auto____$3;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__26121__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__25722_SHARP_){
var and__15646__auto__ = (function (){var G__26083 = p1__25722_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26083) : p1.call(null,G__26083));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26085 = p1__25722_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26085) : p2.call(null,G__26085));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26086 = p1__25722_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26086) : p3.call(null,G__26086));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
}),args)));
};
var G__26121 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26122__i = 0, G__26122__a = new Array(arguments.length -  3);
while (G__26122__i < G__26122__a.length) {G__26122__a[G__26122__i] = arguments[G__26122__i + 3]; ++G__26122__i;}
  args = new cljs.core.IndexedSeq(G__26122__a,0);
} 
return G__26121__delegate.call(this,x,y,z,args);};
G__26121.cljs$lang$maxFixedArity = 3;
G__26121.cljs$lang$applyTo = (function (arglist__26123){
var x = cljs.core.first(arglist__26123);
arglist__26123 = cljs.core.next(arglist__26123);
var y = cljs.core.first(arglist__26123);
arglist__26123 = cljs.core.next(arglist__26123);
var z = cljs.core.first(arglist__26123);
var args = cljs.core.rest(arglist__26123);
return G__26121__delegate(x,y,z,args);
});
G__26121.cljs$core$IFn$_invoke$arity$variadic = G__26121__delegate;
return G__26121;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__26124 = null;
if (arguments.length > 3) {
var G__26125__i = 0, G__26125__a = new Array(arguments.length -  3);
while (G__26125__i < G__26125__a.length) {G__26125__a[G__26125__i] = arguments[G__26125__i + 3]; ++G__26125__i;}
G__26124 = new cljs.core.IndexedSeq(G__26125__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__26126__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25723_SHARP_){
var G__26102 = x;
return (p1__25723_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25723_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26102) : p1__25723_SHARP_.call(null,G__26102));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25724_SHARP_){
var and__15646__auto__ = (function (){var G__26104 = x;
return (p1__25724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26104) : p1__25724_SHARP_.call(null,G__26104));
})();
if(cljs.core.truth_(and__15646__auto__)){
var G__26105 = y;
return (p1__25724_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25724_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26105) : p1__25724_SHARP_.call(null,G__26105));
} else {
return and__15646__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25725_SHARP_){
var and__15646__auto__ = (function (){var G__26107 = x;
return (p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26107) : p1__25725_SHARP_.call(null,G__26107));
})();
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__26109 = y;
return (p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26109) : p1__25725_SHARP_.call(null,G__26109));
})();
if(cljs.core.truth_(and__15646__auto____$1)){
var G__26110 = z;
return (p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__25725_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26110) : p1__25725_SHARP_.call(null,G__26110));
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__26127__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__25726_SHARP_){
return cljs.core.every_QMARK_(p1__25726_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__26127 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26128__i = 0, G__26128__a = new Array(arguments.length -  3);
while (G__26128__i < G__26128__a.length) {G__26128__a[G__26128__i] = arguments[G__26128__i + 3]; ++G__26128__i;}
  args = new cljs.core.IndexedSeq(G__26128__a,0);
} 
return G__26127__delegate.call(this,x,y,z,args);};
G__26127.cljs$lang$maxFixedArity = 3;
G__26127.cljs$lang$applyTo = (function (arglist__26129){
var x = cljs.core.first(arglist__26129);
arglist__26129 = cljs.core.next(arglist__26129);
var y = cljs.core.first(arglist__26129);
arglist__26129 = cljs.core.next(arglist__26129);
var z = cljs.core.first(arglist__26129);
var args = cljs.core.rest(arglist__26129);
return G__26127__delegate(x,y,z,args);
});
G__26127.cljs$core$IFn$_invoke$arity$variadic = G__26127__delegate;
return G__26127;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__26130 = null;
if (arguments.length > 3) {
var G__26131__i = 0, G__26131__a = new Array(arguments.length -  3);
while (G__26131__i < G__26131__a.length) {G__26131__a[G__26131__i] = arguments[G__26131__i + 3]; ++G__26131__i;}
G__26130 = new cljs.core.IndexedSeq(G__26131__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__26126 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26132__i = 0, G__26132__a = new Array(arguments.length -  3);
while (G__26132__i < G__26132__a.length) {G__26132__a[G__26132__i] = arguments[G__26132__i + 3]; ++G__26132__i;}
  ps = new cljs.core.IndexedSeq(G__26132__a,0);
} 
return G__26126__delegate.call(this,p1,p2,p3,ps);};
G__26126.cljs$lang$maxFixedArity = 3;
G__26126.cljs$lang$applyTo = (function (arglist__26133){
var p1 = cljs.core.first(arglist__26133);
arglist__26133 = cljs.core.next(arglist__26133);
var p2 = cljs.core.first(arglist__26133);
arglist__26133 = cljs.core.next(arglist__26133);
var p3 = cljs.core.first(arglist__26133);
var ps = cljs.core.rest(arglist__26133);
return G__26126__delegate(p1,p2,p3,ps);
});
G__26126.cljs$core$IFn$_invoke$arity$variadic = G__26126__delegate;
return G__26126;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__26134 = null;
if (arguments.length > 3) {
var G__26135__i = 0, G__26135__a = new Array(arguments.length -  3);
while (G__26135__i < G__26135__a.length) {G__26135__a[G__26135__i] = arguments[G__26135__i + 3]; ++G__26135__i;}
G__26134 = new cljs.core.IndexedSeq(G__26135__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__26341 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26341) : p.call(null,G__26341));
});
var sp1__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26343 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26343) : p.call(null,G__26343));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26344 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26344) : p.call(null,G__26344));
}
});
var sp1__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26346 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26346) : p.call(null,G__26346));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26348 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26348) : p.call(null,G__26348));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26349 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__26349) : p.call(null,G__26349));
}
}
});
var sp1__4 = (function() { 
var G__26510__delegate = function (x,y,z,args){
var or__15658__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__26510 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26511__i = 0, G__26511__a = new Array(arguments.length -  3);
while (G__26511__i < G__26511__a.length) {G__26511__a[G__26511__i] = arguments[G__26511__i + 3]; ++G__26511__i;}
  args = new cljs.core.IndexedSeq(G__26511__a,0);
} 
return G__26510__delegate.call(this,x,y,z,args);};
G__26510.cljs$lang$maxFixedArity = 3;
G__26510.cljs$lang$applyTo = (function (arglist__26512){
var x = cljs.core.first(arglist__26512);
arglist__26512 = cljs.core.next(arglist__26512);
var y = cljs.core.first(arglist__26512);
arglist__26512 = cljs.core.next(arglist__26512);
var z = cljs.core.first(arglist__26512);
var args = cljs.core.rest(arglist__26512);
return G__26510__delegate(x,y,z,args);
});
G__26510.cljs$core$IFn$_invoke$arity$variadic = G__26510__delegate;
return G__26510;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__26513 = null;
if (arguments.length > 3) {
var G__26514__i = 0, G__26514__a = new Array(arguments.length -  3);
while (G__26514__i < G__26514__a.length) {G__26514__a[G__26514__i] = arguments[G__26514__i + 3]; ++G__26514__i;}
G__26513 = new cljs.core.IndexedSeq(G__26514__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26513);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__15658__auto__ = (function (){var G__26381 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26381) : p1.call(null,G__26381));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26382 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26382) : p2.call(null,G__26382));
}
});
var sp2__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26384 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26384) : p1.call(null,G__26384));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26386 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26386) : p1.call(null,G__26386));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26388 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26388) : p2.call(null,G__26388));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var G__26389 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26389) : p2.call(null,G__26389));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26391 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26391) : p1.call(null,G__26391));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26393 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26393) : p1.call(null,G__26393));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26395 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26395) : p1.call(null,G__26395));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26397 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26397) : p2.call(null,G__26397));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26399 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26399) : p2.call(null,G__26399));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var G__26400 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26400) : p2.call(null,G__26400));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__26515__delegate = function (x,y,z,args){
var or__15658__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__){
return (function (p1__26136_SHARP_){
var or__15658__auto____$1 = (function (){var G__26402 = p1__26136_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26402) : p1.call(null,G__26402));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26403 = p1__26136_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26403) : p2.call(null,G__26403));
}
});})(or__15658__auto__))
,args);
}
};
var G__26515 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26516__i = 0, G__26516__a = new Array(arguments.length -  3);
while (G__26516__i < G__26516__a.length) {G__26516__a[G__26516__i] = arguments[G__26516__i + 3]; ++G__26516__i;}
  args = new cljs.core.IndexedSeq(G__26516__a,0);
} 
return G__26515__delegate.call(this,x,y,z,args);};
G__26515.cljs$lang$maxFixedArity = 3;
G__26515.cljs$lang$applyTo = (function (arglist__26517){
var x = cljs.core.first(arglist__26517);
arglist__26517 = cljs.core.next(arglist__26517);
var y = cljs.core.first(arglist__26517);
arglist__26517 = cljs.core.next(arglist__26517);
var z = cljs.core.first(arglist__26517);
var args = cljs.core.rest(arglist__26517);
return G__26515__delegate(x,y,z,args);
});
G__26515.cljs$core$IFn$_invoke$arity$variadic = G__26515__delegate;
return G__26515;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__26518 = null;
if (arguments.length > 3) {
var G__26519__i = 0, G__26519__a = new Array(arguments.length -  3);
while (G__26519__i < G__26519__a.length) {G__26519__a[G__26519__i] = arguments[G__26519__i + 3]; ++G__26519__i;}
G__26518 = new cljs.core.IndexedSeq(G__26519__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__15658__auto__ = (function (){var G__26449 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26449) : p1.call(null,G__26449));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26451 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26451) : p2.call(null,G__26451));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26452 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26452) : p3.call(null,G__26452));
}
}
});
var sp3__2 = (function (x,y){
var or__15658__auto__ = (function (){var G__26454 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26454) : p1.call(null,G__26454));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26456 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26456) : p2.call(null,G__26456));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26458 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26458) : p3.call(null,G__26458));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26460 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26460) : p1.call(null,G__26460));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26462 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26462) : p2.call(null,G__26462));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var G__26463 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26463) : p3.call(null,G__26463));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__15658__auto__ = (function (){var G__26465 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26465) : p1.call(null,G__26465));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26467 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26467) : p2.call(null,G__26467));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26469 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26469) : p3.call(null,G__26469));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var or__15658__auto____$3 = (function (){var G__26471 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26471) : p1.call(null,G__26471));
})();
if(cljs.core.truth_(or__15658__auto____$3)){
return or__15658__auto____$3;
} else {
var or__15658__auto____$4 = (function (){var G__26473 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26473) : p2.call(null,G__26473));
})();
if(cljs.core.truth_(or__15658__auto____$4)){
return or__15658__auto____$4;
} else {
var or__15658__auto____$5 = (function (){var G__26475 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26475) : p3.call(null,G__26475));
})();
if(cljs.core.truth_(or__15658__auto____$5)){
return or__15658__auto____$5;
} else {
var or__15658__auto____$6 = (function (){var G__26477 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26477) : p1.call(null,G__26477));
})();
if(cljs.core.truth_(or__15658__auto____$6)){
return or__15658__auto____$6;
} else {
var or__15658__auto____$7 = (function (){var G__26479 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26479) : p2.call(null,G__26479));
})();
if(cljs.core.truth_(or__15658__auto____$7)){
return or__15658__auto____$7;
} else {
var G__26480 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26480) : p3.call(null,G__26480));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__26520__delegate = function (x,y,z,args){
var or__15658__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__){
return (function (p1__26137_SHARP_){
var or__15658__auto____$1 = (function (){var G__26482 = p1__26137_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__26482) : p1.call(null,G__26482));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var G__26484 = p1__26137_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__26484) : p2.call(null,G__26484));
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
var G__26485 = p1__26137_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__26485) : p3.call(null,G__26485));
}
}
});})(or__15658__auto__))
,args);
}
};
var G__26520 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26521__i = 0, G__26521__a = new Array(arguments.length -  3);
while (G__26521__i < G__26521__a.length) {G__26521__a[G__26521__i] = arguments[G__26521__i + 3]; ++G__26521__i;}
  args = new cljs.core.IndexedSeq(G__26521__a,0);
} 
return G__26520__delegate.call(this,x,y,z,args);};
G__26520.cljs$lang$maxFixedArity = 3;
G__26520.cljs$lang$applyTo = (function (arglist__26522){
var x = cljs.core.first(arglist__26522);
arglist__26522 = cljs.core.next(arglist__26522);
var y = cljs.core.first(arglist__26522);
arglist__26522 = cljs.core.next(arglist__26522);
var z = cljs.core.first(arglist__26522);
var args = cljs.core.rest(arglist__26522);
return G__26520__delegate(x,y,z,args);
});
G__26520.cljs$core$IFn$_invoke$arity$variadic = G__26520__delegate;
return G__26520;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__26523 = null;
if (arguments.length > 3) {
var G__26524__i = 0, G__26524__a = new Array(arguments.length -  3);
while (G__26524__i < G__26524__a.length) {G__26524__a[G__26524__i] = arguments[G__26524__i + 3]; ++G__26524__i;}
G__26523 = new cljs.core.IndexedSeq(G__26524__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__26525__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__26138_SHARP_){
var G__26501 = x;
return (p1__26138_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26138_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26501) : p1__26138_SHARP_.call(null,G__26501));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__26139_SHARP_){
var or__15658__auto__ = (function (){var G__26503 = x;
return (p1__26139_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26139_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26503) : p1__26139_SHARP_.call(null,G__26503));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var G__26504 = y;
return (p1__26139_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26139_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26504) : p1__26139_SHARP_.call(null,G__26504));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__26140_SHARP_){
var or__15658__auto__ = (function (){var G__26506 = x;
return (p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26506) : p1__26140_SHARP_.call(null,G__26506));
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var G__26508 = y;
return (p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26508) : p1__26140_SHARP_.call(null,G__26508));
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var G__26509 = z;
return (p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__26140_SHARP_.cljs$core$IFn$_invoke$arity$1(G__26509) : p1__26140_SHARP_.call(null,G__26509));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__26526__delegate = function (x,y,z,args){
var or__15658__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.some(((function (or__15658__auto__,ps__$1){
return (function (p1__26141_SHARP_){
return cljs.core.some(p1__26141_SHARP_,args);
});})(or__15658__auto__,ps__$1))
,ps__$1);
}
};
var G__26526 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__26527__i = 0, G__26527__a = new Array(arguments.length -  3);
while (G__26527__i < G__26527__a.length) {G__26527__a[G__26527__i] = arguments[G__26527__i + 3]; ++G__26527__i;}
  args = new cljs.core.IndexedSeq(G__26527__a,0);
} 
return G__26526__delegate.call(this,x,y,z,args);};
G__26526.cljs$lang$maxFixedArity = 3;
G__26526.cljs$lang$applyTo = (function (arglist__26528){
var x = cljs.core.first(arglist__26528);
arglist__26528 = cljs.core.next(arglist__26528);
var y = cljs.core.first(arglist__26528);
arglist__26528 = cljs.core.next(arglist__26528);
var z = cljs.core.first(arglist__26528);
var args = cljs.core.rest(arglist__26528);
return G__26526__delegate(x,y,z,args);
});
G__26526.cljs$core$IFn$_invoke$arity$variadic = G__26526__delegate;
return G__26526;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__26529 = null;
if (arguments.length > 3) {
var G__26530__i = 0, G__26530__a = new Array(arguments.length -  3);
while (G__26530__i < G__26530__a.length) {G__26530__a[G__26530__i] = arguments[G__26530__i + 3]; ++G__26530__i;}
G__26529 = new cljs.core.IndexedSeq(G__26530__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__26529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__26525 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__26531__i = 0, G__26531__a = new Array(arguments.length -  3);
while (G__26531__i < G__26531__a.length) {G__26531__a[G__26531__i] = arguments[G__26531__i + 3]; ++G__26531__i;}
  ps = new cljs.core.IndexedSeq(G__26531__a,0);
} 
return G__26525__delegate.call(this,p1,p2,p3,ps);};
G__26525.cljs$lang$maxFixedArity = 3;
G__26525.cljs$lang$applyTo = (function (arglist__26532){
var p1 = cljs.core.first(arglist__26532);
arglist__26532 = cljs.core.next(arglist__26532);
var p2 = cljs.core.first(arglist__26532);
arglist__26532 = cljs.core.next(arglist__26532);
var p3 = cljs.core.first(arglist__26532);
var ps = cljs.core.rest(arglist__26532);
return G__26525__delegate(p1,p2,p3,ps);
});
G__26525.cljs$core$IFn$_invoke$arity$variadic = G__26525__delegate;
return G__26525;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__26533 = null;
if (arguments.length > 3) {
var G__26534__i = 0, G__26534__a = new Array(arguments.length -  3);
while (G__26534__i < G__26534__a.length) {G__26534__a[G__26534__i] = arguments[G__26534__i + 3]; ++G__26534__i;}
G__26533 = new cljs.core.IndexedSeq(G__26534__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__26533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__26589 = null;
var G__26589__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26589__1 = (function (result){
var G__26575 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26575) : rf.call(null,G__26575));
});
var G__26589__2 = (function (result,input){
var G__26576 = result;
var G__26577 = (function (){var G__26578 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26578) : f.call(null,G__26578));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26576,G__26577) : rf.call(null,G__26576,G__26577));
});
var G__26589__3 = (function() { 
var G__26590__delegate = function (result,input,inputs){
var G__26579 = result;
var G__26580 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26579,G__26580) : rf.call(null,G__26579,G__26580));
};
var G__26590 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__26591__i = 0, G__26591__a = new Array(arguments.length -  2);
while (G__26591__i < G__26591__a.length) {G__26591__a[G__26591__i] = arguments[G__26591__i + 2]; ++G__26591__i;}
  inputs = new cljs.core.IndexedSeq(G__26591__a,0);
} 
return G__26590__delegate.call(this,result,input,inputs);};
G__26590.cljs$lang$maxFixedArity = 2;
G__26590.cljs$lang$applyTo = (function (arglist__26592){
var result = cljs.core.first(arglist__26592);
arglist__26592 = cljs.core.next(arglist__26592);
var input = cljs.core.first(arglist__26592);
var inputs = cljs.core.rest(arglist__26592);
return G__26590__delegate(result,input,inputs);
});
G__26590.cljs$core$IFn$_invoke$arity$variadic = G__26590__delegate;
return G__26590;
})()
;
G__26589 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__26589__0.call(this);
case 1:
return G__26589__1.call(this,result);
case 2:
return G__26589__2.call(this,result,input);
default:
var G__26593 = null;
if (arguments.length > 2) {
var G__26594__i = 0, G__26594__a = new Array(arguments.length -  2);
while (G__26594__i < G__26594__a.length) {G__26594__a[G__26594__i] = arguments[G__26594__i + 2]; ++G__26594__i;}
G__26593 = new cljs.core.IndexedSeq(G__26594__a,0);
}
return G__26589__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__26593);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26589.cljs$lang$maxFixedArity = 2;
G__26589.cljs$lang$applyTo = G__26589__3.cljs$lang$applyTo;
G__26589.cljs$core$IFn$_invoke$arity$0 = G__26589__0;
G__26589.cljs$core$IFn$_invoke$arity$1 = G__26589__1;
G__26589.cljs$core$IFn$_invoke$arity$2 = G__26589__2;
G__26589.cljs$core$IFn$_invoke$arity$variadic = G__26589__3.cljs$core$IFn$_invoke$arity$variadic;
return G__26589;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___26595 = size;
var i_26596 = (0);
while(true){
if((i_26596 < n__16545__auto___26595)){
cljs.core.chunk_append(b,(function (){var G__26581 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26596);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26581) : f.call(null,G__26581));
})());

var G__26597 = (i_26596 + (1));
i_26596 = G__26597;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__26582 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26582) : f.call(null,G__26582));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__26583 = cljs.core.first(s1);
var G__26584 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26583,G__26584) : f.call(null,G__26583,G__26584));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__26585 = cljs.core.first(s1);
var G__26586 = cljs.core.first(s2);
var G__26587 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26585,G__26586,G__26587) : f.call(null,G__26585,G__26586,G__26587));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__26598__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__26535_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__26535_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__26598 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26599__i = 0, G__26599__a = new Array(arguments.length -  4);
while (G__26599__i < G__26599__a.length) {G__26599__a[G__26599__i] = arguments[G__26599__i + 4]; ++G__26599__i;}
  colls = new cljs.core.IndexedSeq(G__26599__a,0);
} 
return G__26598__delegate.call(this,f,c1,c2,c3,colls);};
G__26598.cljs$lang$maxFixedArity = 4;
G__26598.cljs$lang$applyTo = (function (arglist__26600){
var f = cljs.core.first(arglist__26600);
arglist__26600 = cljs.core.next(arglist__26600);
var c1 = cljs.core.first(arglist__26600);
arglist__26600 = cljs.core.next(arglist__26600);
var c2 = cljs.core.first(arglist__26600);
arglist__26600 = cljs.core.next(arglist__26600);
var c3 = cljs.core.first(arglist__26600);
var colls = cljs.core.rest(arglist__26600);
return G__26598__delegate(f,c1,c2,c3,colls);
});
G__26598.cljs$core$IFn$_invoke$arity$variadic = G__26598__delegate;
return G__26598;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__26601 = null;
if (arguments.length > 4) {
var G__26602__i = 0, G__26602__a = new Array(arguments.length -  4);
while (G__26602__i < G__26602__a.length) {G__26602__a[G__26602__i] = arguments[G__26602__i + 4]; ++G__26602__i;}
G__26601 = new cljs.core.IndexedSeq(G__26602__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26611 = null;
var G__26611__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26611__1 = (function (result){
var G__26608 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26608) : rf.call(null,G__26608));
});
var G__26611__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__26609 = result;
var G__26610 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26609,G__26610) : rf.call(null,G__26609,G__26610));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__26611 = function(result,input){
switch(arguments.length){
case 0:
return G__26611__0.call(this);
case 1:
return G__26611__1.call(this,result);
case 2:
return G__26611__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26611.cljs$core$IFn$_invoke$arity$0 = G__26611__0;
G__26611.cljs$core$IFn$_invoke$arity$1 = G__26611__1;
G__26611.cljs$core$IFn$_invoke$arity$2 = G__26611__2;
return G__26611;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__26618 = null;
var G__26618__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26618__1 = (function (result){
var G__26615 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26615) : rf.call(null,G__26615));
});
var G__26618__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__26616 = result;
var G__26617 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26616,G__26617) : rf.call(null,G__26616,G__26617));
}
});
G__26618 = function(result,input){
switch(arguments.length){
case 0:
return G__26618__0.call(this);
case 1:
return G__26618__1.call(this,result);
case 2:
return G__26618__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26618.cljs$core$IFn$_invoke$arity$0 = G__26618__0;
G__26618.cljs$core$IFn$_invoke$arity$1 = G__26618__1;
G__26618.cljs$core$IFn$_invoke$arity$2 = G__26618__2;
return G__26618;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__26619 = (n__$1 - (1));
var G__26620 = cljs.core.rest(s);
n__$1 = G__26619;
coll__$1 = G__26620;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__26623 = cljs.core.next(s);
var G__26624 = cljs.core.next(lead);
s = G__26623;
lead = G__26624;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__26637 = null;
var G__26637__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26637__1 = (function (result){
var G__26631 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26631) : rf.call(null,G__26631));
});
var G__26637__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__15646__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__15646__auto__)){
var G__26632 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26632) : pred.call(null,G__26632));
} else {
return and__15646__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__26633 = result;
var G__26634 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26633,G__26634) : rf.call(null,G__26633,G__26634));
}
});
G__26637 = function(result,input){
switch(arguments.length){
case 0:
return G__26637__0.call(this);
case 1:
return G__26637__1.call(this,result);
case 2:
return G__26637__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26637.cljs$core$IFn$_invoke$arity$0 = G__26637__0;
G__26637.cljs$core$IFn$_invoke$arity$1 = G__26637__1;
G__26637.cljs$core$IFn$_invoke$arity$2 = G__26637__2;
return G__26637;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__15646__auto__ = s;
if(and__15646__auto__){
var G__26636 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__26636) : pred__$1.call(null,G__26636));
} else {
return and__15646__auto__;
}
})())){
var G__26638 = pred__$1;
var G__26639 = cljs.core.rest(s);
pred__$1 = G__26638;
coll__$1 = G__26639;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__26648 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26648) : f.call(null,G__26648));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__26651__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__26651 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__26652__i = 0, G__26652__a = new Array(arguments.length -  2);
while (G__26652__i < G__26652__a.length) {G__26652__a[G__26652__i] = arguments[G__26652__i + 2]; ++G__26652__i;}
  colls = new cljs.core.IndexedSeq(G__26652__a,0);
} 
return G__26651__delegate.call(this,c1,c2,colls);};
G__26651.cljs$lang$maxFixedArity = 2;
G__26651.cljs$lang$applyTo = (function (arglist__26653){
var c1 = cljs.core.first(arglist__26653);
arglist__26653 = cljs.core.next(arglist__26653);
var c2 = cljs.core.first(arglist__26653);
var colls = cljs.core.rest(arglist__26653);
return G__26651__delegate(c1,c2,colls);
});
G__26651.cljs$core$IFn$_invoke$arity$variadic = G__26651__delegate;
return G__26651;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__26654 = null;
if (arguments.length > 2) {
var G__26655__i = 0, G__26655__a = new Array(arguments.length -  2);
while (G__26655__i < G__26655__a.length) {G__26655__a[G__26655__i] = arguments[G__26655__i + 2]; ++G__26655__i;}
G__26654 = new cljs.core.IndexedSeq(G__26655__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__26654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__26670 = null;
var G__26670__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26670__1 = (function (result){
var G__26663 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26663) : rf.call(null,G__26663));
});
var G__26670__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__26664 = result;
var G__26665 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26664,G__26665) : rf.call(null,G__26664,G__26665));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__26666 = sepr;
var G__26667 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26666,G__26667) : rf.call(null,G__26666,G__26667));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__26668 = result;
var G__26669 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26668,G__26669) : rf.call(null,G__26668,G__26669));
}
});
G__26670 = function(result,input){
switch(arguments.length){
case 0:
return G__26670__0.call(this);
case 1:
return G__26670__1.call(this,result);
case 2:
return G__26670__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26670.cljs$core$IFn$_invoke$arity$0 = G__26670__0;
G__26670.cljs$core$IFn$_invoke$arity$1 = G__26670__1;
G__26670.cljs$core$IFn$_invoke$arity$2 = G__26670__2;
return G__26670;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__26679__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__26679 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__26680__i = 0, G__26680__a = new Array(arguments.length -  1);
while (G__26680__i < G__26680__a.length) {G__26680__a[G__26680__i] = arguments[G__26680__i + 1]; ++G__26680__i;}
  colls = new cljs.core.IndexedSeq(G__26680__a,0);
} 
return G__26679__delegate.call(this,f,colls);};
G__26679.cljs$lang$maxFixedArity = 1;
G__26679.cljs$lang$applyTo = (function (arglist__26681){
var f = cljs.core.first(arglist__26681);
var colls = cljs.core.rest(arglist__26681);
return G__26679__delegate(f,colls);
});
G__26679.cljs$core$IFn$_invoke$arity$variadic = G__26679__delegate;
return G__26679;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__26682 = null;
if (arguments.length > 1) {
var G__26683__i = 0, G__26683__a = new Array(arguments.length -  1);
while (G__26683__i < G__26683__a.length) {G__26683__a[G__26683__i] = arguments[G__26683__i + 1]; ++G__26683__i;}
G__26682 = new cljs.core.IndexedSeq(G__26683__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26682);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__26702 = null;
var G__26702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__26702__1 = (function (result){
var G__26696 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__26696) : rf.call(null,G__26696));
});
var G__26702__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__26697 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26697) : pred.call(null,G__26697));
})())){
var G__26698 = result;
var G__26699 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__26698,G__26699) : rf.call(null,G__26698,G__26699));
} else {
return result;
}
});
G__26702 = function(result,input){
switch(arguments.length){
case 0:
return G__26702__0.call(this);
case 1:
return G__26702__1.call(this,result);
case 2:
return G__26702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26702.cljs$core$IFn$_invoke$arity$0 = G__26702__0;
G__26702.cljs$core$IFn$_invoke$arity$1 = G__26702__1;
G__26702.cljs$core$IFn$_invoke$arity$2 = G__26702__2;
return G__26702;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__16545__auto___26703 = size;
var i_26704 = (0);
while(true){
if((i_26704 < n__16545__auto___26703)){
if(cljs.core.truth_((function (){var G__26700 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26704);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26700) : pred.call(null,G__26700));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_26704));
} else {
}

var G__26705 = (i_26704 + (1));
i_26704 = G__26705;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__26701 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26701) : pred.call(null,G__26701));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__26712 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__26712) : branch_QMARK_.call(null,G__26712));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__26713 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__26713) : children.call(null,G__26713));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__26714_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__26714_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__26717 = to;
if(G__26717){
var bit__16332__auto__ = (G__26717.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16332__auto__) || (G__26717.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__26718 = to;
if(G__26718){
var bit__16332__auto__ = (G__26718.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__16332__auto__) || (G__26718.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__26720 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26720) : f.call(null,G__26720));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__26721__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__26721 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__26722__i = 0, G__26722__a = new Array(arguments.length -  4);
while (G__26722__i < G__26722__a.length) {G__26722__a[G__26722__i] = arguments[G__26722__i + 4]; ++G__26722__i;}
  colls = new cljs.core.IndexedSeq(G__26722__a,0);
} 
return G__26721__delegate.call(this,f,c1,c2,c3,colls);};
G__26721.cljs$lang$maxFixedArity = 4;
G__26721.cljs$lang$applyTo = (function (arglist__26723){
var f = cljs.core.first(arglist__26723);
arglist__26723 = cljs.core.next(arglist__26723);
var c1 = cljs.core.first(arglist__26723);
arglist__26723 = cljs.core.next(arglist__26723);
var c2 = cljs.core.first(arglist__26723);
arglist__26723 = cljs.core.next(arglist__26723);
var c3 = cljs.core.first(arglist__26723);
var colls = cljs.core.rest(arglist__26723);
return G__26721__delegate(f,c1,c2,c3,colls);
});
G__26721.cljs$core$IFn$_invoke$arity$variadic = G__26721__delegate;
return G__26721;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__26724 = null;
if (arguments.length > 4) {
var G__26725__i = 0, G__26725__a = new Array(arguments.length -  4);
while (G__26725__i < G__26725__a.length) {G__26725__a[G__26725__i] = arguments[G__26725__i + 4]; ++G__26725__i;}
G__26724 = new cljs.core.IndexedSeq(G__26725__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__26724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__26727 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__26727) : pred.call(null,G__26727));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__26742 = m__$1;
if(G__26742){
var bit__16339__auto__ = (G__26742.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__16339__auto__) || (G__26742.cljs$core$ILookup$)){
return true;
} else {
if((!G__26742.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26742);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__26742);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__26743 = sentinel;
var G__26744 = m__$2;
var G__26745 = cljs.core.next(ks__$1);
sentinel = G__26743;
m__$1 = G__26744;
ks__$1 = G__26745;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__26746,v){
var vec__26751 = p__26746;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26751,(0),null);
var ks = cljs.core.nthnext(vec__26751,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__26752,f){
var vec__26790 = p__26752;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26790,(0),null);
var ks = cljs.core.nthnext(vec__26790,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26791 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26791) : f.call(null,G__26791));
})());
}
});
var update_in__4 = (function (m,p__26753,f,a){
var vec__26792 = p__26753;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26792,(0),null);
var ks = cljs.core.nthnext(vec__26792,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26793 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26794 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26793,G__26794) : f.call(null,G__26793,G__26794));
})());
}
});
var update_in__5 = (function (m,p__26754,f,a,b){
var vec__26795 = p__26754;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26795,(0),null);
var ks = cljs.core.nthnext(vec__26795,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26796 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26797 = a;
var G__26798 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26796,G__26797,G__26798) : f.call(null,G__26796,G__26797,G__26798));
})());
}
});
var update_in__6 = (function (m,p__26755,f,a,b,c){
var vec__26799 = p__26755;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26799,(0),null);
var ks = cljs.core.nthnext(vec__26799,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26800 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26801 = a;
var G__26802 = b;
var G__26803 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26800,G__26801,G__26802,G__26803) : f.call(null,G__26800,G__26801,G__26802,G__26803));
})());
}
});
var update_in__7 = (function() { 
var G__26805__delegate = function (m,p__26756,f,a,b,c,args){
var vec__26804 = p__26756;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26804,(0),null);
var ks = cljs.core.nthnext(vec__26804,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__26805 = function (m,p__26756,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__26806__i = 0, G__26806__a = new Array(arguments.length -  6);
while (G__26806__i < G__26806__a.length) {G__26806__a[G__26806__i] = arguments[G__26806__i + 6]; ++G__26806__i;}
  args = new cljs.core.IndexedSeq(G__26806__a,0);
} 
return G__26805__delegate.call(this,m,p__26756,f,a,b,c,args);};
G__26805.cljs$lang$maxFixedArity = 6;
G__26805.cljs$lang$applyTo = (function (arglist__26807){
var m = cljs.core.first(arglist__26807);
arglist__26807 = cljs.core.next(arglist__26807);
var p__26756 = cljs.core.first(arglist__26807);
arglist__26807 = cljs.core.next(arglist__26807);
var f = cljs.core.first(arglist__26807);
arglist__26807 = cljs.core.next(arglist__26807);
var a = cljs.core.first(arglist__26807);
arglist__26807 = cljs.core.next(arglist__26807);
var b = cljs.core.first(arglist__26807);
arglist__26807 = cljs.core.next(arglist__26807);
var c = cljs.core.first(arglist__26807);
var args = cljs.core.rest(arglist__26807);
return G__26805__delegate(m,p__26756,f,a,b,c,args);
});
G__26805.cljs$core$IFn$_invoke$arity$variadic = G__26805__delegate;
return G__26805;
})()
;
update_in = function(m,p__26756,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__26756,f);
case 4:
return update_in__4.call(this,m,p__26756,f,a);
case 5:
return update_in__5.call(this,m,p__26756,f,a,b);
case 6:
return update_in__6.call(this,m,p__26756,f,a,b,c);
default:
var G__26808 = null;
if (arguments.length > 6) {
var G__26809__i = 0, G__26809__a = new Array(arguments.length -  6);
while (G__26809__i < G__26809__a.length) {G__26809__a[G__26809__i] = arguments[G__26809__i + 6]; ++G__26809__i;}
G__26808 = new cljs.core.IndexedSeq(G__26809__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__26756,f,a,b,c, G__26808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26820 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26820) : f.call(null,G__26820));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26821 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26822 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26821,G__26822) : f.call(null,G__26821,G__26822));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26823 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26824 = x;
var G__26825 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26823,G__26824,G__26825) : f.call(null,G__26823,G__26824,G__26825));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__26826 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__26827 = x;
var G__26828 = y;
var G__26829 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__26826,G__26827,G__26828,G__26829) : f.call(null,G__26826,G__26827,G__26828,G__26829));
})());
});
var update__7 = (function() { 
var G__26830__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__26830 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__26831__i = 0, G__26831__a = new Array(arguments.length -  6);
while (G__26831__i < G__26831__a.length) {G__26831__a[G__26831__i] = arguments[G__26831__i + 6]; ++G__26831__i;}
  more = new cljs.core.IndexedSeq(G__26831__a,0);
} 
return G__26830__delegate.call(this,m,k,f,x,y,z,more);};
G__26830.cljs$lang$maxFixedArity = 6;
G__26830.cljs$lang$applyTo = (function (arglist__26832){
var m = cljs.core.first(arglist__26832);
arglist__26832 = cljs.core.next(arglist__26832);
var k = cljs.core.first(arglist__26832);
arglist__26832 = cljs.core.next(arglist__26832);
var f = cljs.core.first(arglist__26832);
arglist__26832 = cljs.core.next(arglist__26832);
var x = cljs.core.first(arglist__26832);
arglist__26832 = cljs.core.next(arglist__26832);
var y = cljs.core.first(arglist__26832);
arglist__26832 = cljs.core.next(arglist__26832);
var z = cljs.core.first(arglist__26832);
var more = cljs.core.rest(arglist__26832);
return G__26830__delegate(m,k,f,x,y,z,more);
});
G__26830.cljs$core$IFn$_invoke$arity$variadic = G__26830__delegate;
return G__26830;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__26833 = null;
if (arguments.length > 6) {
var G__26834__i = 0, G__26834__a = new Array(arguments.length -  6);
while (G__26834__i < G__26834__a.length) {G__26834__a[G__26834__i] = arguments[G__26834__i + 6]; ++G__26834__i;}
G__26833 = new cljs.core.IndexedSeq(G__26834__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__26833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__26835 = (ll - (5));
var G__26836 = r;
ll = G__26835;
ret = G__26836;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26841 = cljs.core.pv_aget(node,(0));
var G__26842 = (level - (5));
node = G__26841;
level = G__26842;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__26843 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__26844 = (level - (5));
node = G__26843;
level = G__26844;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26854 = init__$2;
var G__26855 = (j + i);
var G__26856 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26854,G__26855,G__26856) : f.call(null,G__26854,G__26855,G__26856));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26867 = (j + (1));
var G__26868 = init__$3;
j = G__26867;
init__$2 = G__26868;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26857 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26857) : cljs.core.deref.call(null,G__26857));
} else {
var G__26869 = (i + len);
var G__26870 = init__$2;
i = G__26869;
init__$1 = G__26870;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__26858 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__26858) : cljs.core.tv_editable_root.call(null,G__26858));
})(),(function (){var G__26859 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__26859) : cljs.core.tv_editable_tail.call(null,G__26859));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__26860 = init__$2;
var G__26861 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__26860,G__26861) : f.call(null,G__26860,G__26861));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__26871 = (j + (1));
var G__26872 = init__$3;
j = G__26871;
init__$2 = G__26872;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26862 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26862) : cljs.core.deref.call(null,G__26862));
} else {
var G__26873 = (i + len);
var G__26874 = init__$2;
i = G__26873;
init__$1 = G__26874;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__26863 = coll__$1;
var G__26864 = cljs.core.first_array_for_longvec(coll__$1);
var G__26865 = (0);
var G__26866 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26863,G__26864,G__26865,G__26866) : cljs.core.chunked_seq.call(null,G__26863,G__26864,G__26865,G__26866));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__16545__auto___26875 = len;
var i_26876 = (0);
while(true){
if((i_26876 < n__16545__auto___26875)){
(new_tail[i_26876] = (self__.tail[i_26876]));

var G__26877 = (i_26876 + (1));
i_26876 = G__26877;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__26878 = null;
var G__26878__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26878__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26878 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26878__2.call(this,self__,k);
case 3:
return G__26878__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26878.cljs$core$IFn$_invoke$arity$2 = G__26878__2;
G__26878.cljs$core$IFn$_invoke$arity$3 = G__26878__3;
return G__26878;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args26853){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26853)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__26879 = (i + (1));
var G__26880 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__26879;
out = G__26880;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26881__i = 0, G__26881__a = new Array(arguments.length -  0);
while (G__26881__i < G__26881__a.length) {G__26881__a[G__26881__i] = arguments[G__26881__i + 0]; ++G__26881__i;}
  args = new cljs.core.IndexedSeq(G__26881__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__26882){
var args = cljs.core.seq(arglist__26882);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26883 = self__.vec;
var G__26884 = self__.node;
var G__26885 = self__.i;
var G__26886 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26883,G__26884,G__26885,G__26886) : cljs.core.chunked_seq.call(null,G__26883,G__26884,G__26885,G__26886));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__26887 = self__.vec;
var G__26888 = (self__.i + self__.off);
var G__26889 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26887,G__26888,G__26889) : cljs.core.subvec.call(null,G__26887,G__26888,G__26889));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__26890 = self__.vec;
var G__26891 = (self__.i + self__.off);
var G__26892 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__26890,G__26891,G__26892) : cljs.core.subvec.call(null,G__26890,G__26891,G__26892));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__26893 = self__.vec;
var G__26894 = self__.node;
var G__26895 = self__.i;
var G__26896 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26893,G__26894,G__26895,G__26896) : cljs.core.chunked_seq.call(null,G__26893,G__26894,G__26895,G__26896));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26897 = self__.vec;
var G__26898 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26899 = end;
var G__26900 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26897,G__26898,G__26899,G__26900) : cljs.core.chunked_seq.call(null,G__26897,G__26898,G__26899,G__26900));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__26901 = self__.vec;
var G__26902 = self__.node;
var G__26903 = self__.i;
var G__26904 = self__.off;
var G__26905 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__26901,G__26902,G__26903,G__26904,G__26905) : cljs.core.chunked_seq.call(null,G__26901,G__26902,G__26903,G__26904,G__26905));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__26906 = self__.vec;
var G__26907 = cljs.core.unchecked_array_for(self__.vec,end);
var G__26908 = end;
var G__26909 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__26906,G__26907,G__26908,G__26909) : cljs.core.chunked_seq.call(null,G__26906,G__26907,G__26908,G__26909));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__26911 = self__.meta;
var G__26912 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__26913 = self__.start;
var G__26914 = (function (){var x__15975__auto__ = self__.end;
var y__15976__auto__ = (v_pos + (1));
return ((x__15975__auto__ > y__15976__auto__) ? x__15975__auto__ : y__15976__auto__);
})();
var G__26915 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26911,G__26912,G__26913,G__26914,G__26915) : cljs.core.build_subvec.call(null,G__26911,G__26912,G__26913,G__26914,G__26915));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__26916 = self__.meta;
var G__26917 = self__.v;
var G__26918 = self__.start;
var G__26919 = (self__.end - (1));
var G__26920 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26916,G__26917,G__26918,G__26919,G__26920) : cljs.core.build_subvec.call(null,G__26916,G__26917,G__26918,G__26919,G__26920));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__26922 = meta__$1;
var G__26923 = self__.v;
var G__26924 = self__.start;
var G__26925 = self__.end;
var G__26926 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26922,G__26923,G__26924,G__26925,G__26926) : cljs.core.build_subvec.call(null,G__26922,G__26923,G__26924,G__26925,G__26926));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__26927 = self__.meta;
var G__26928 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__26929 = self__.start;
var G__26930 = (self__.end + (1));
var G__26931 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__26927,G__26928,G__26929,G__26930,G__26931) : cljs.core.build_subvec.call(null,G__26927,G__26928,G__26929,G__26930,G__26931));
});

cljs.core.Subvec.prototype.call = (function() {
var G__26932 = null;
var G__26932__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__26932__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__26932 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26932__2.call(this,self__,k);
case 3:
return G__26932__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26932.cljs$core$IFn$_invoke$arity$2 = G__26932__2;
G__26932.cljs$core$IFn$_invoke$arity$3 = G__26932__3;
return G__26932;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args26910){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26910)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__26933 = meta;
var G__26934 = v.v;
var G__26935 = (v.start + start);
var G__26936 = (v.start + end);
var G__26937 = __hash;
meta = G__26933;
v = G__26934;
start = G__26935;
end = G__26936;
__hash = G__26937;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj26944 = {};
return obj26944;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__26952 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__26953 = (level - (5));
node = G__26952;
level = G__26953;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__26957 = null;
var G__26957__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26957__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26957 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26957__2.call(this,self__,k);
case 3:
return G__26957__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26957.cljs$core$IFn$_invoke$arity$2 = G__26957__2;
G__26957.cljs$core$IFn$_invoke$arity$3 = G__26957__3;
return G__26957;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args26954){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26954)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__15658__auto__ = self__.front;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15658__auto__ = self__.rear;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__26958 = (i + incr);
i = G__26958;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__26959 = (i + (1));
var G__26960 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__26959;
out = G__26960;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj26964 = {};
return obj26964;
})();
var l = ks.length;
var i_26965 = (0);
while(true){
if((i_26965 < l)){
var k_26966 = (ks[i_26965]);
(new_obj[k_26966] = (obj[k_26966]));

var G__26967 = (i_26965 + (1));
i_26965 = G__26967;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__26971 = k;
return goog.isString(G__26971);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__26972 = init__$1;
var G__26973 = k;
var G__26974 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__26972,G__26973,G__26974) : f.call(null,G__26972,G__26973,G__26974));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__26975 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26975) : cljs.core.deref.call(null,G__26975));
} else {
var G__26981 = cljs.core.rest(keys__$1);
var G__26982 = init__$2;
keys__$1 = G__26981;
init__$1 = G__26982;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__26977 = k;
return goog.isString(G__26977);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__26978 = k;
return goog.isString(G__26978);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__15646__auto__ = (function (){var G__26980 = k;
return goog.isString(G__26980);
})();
if(cljs.core.truth_(and__15646__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__15646__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__26968_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__26968_SHARP_,(self__.strobj[p1__26968_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__26983 = null;
var G__26983__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__26983__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__26983 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__26983__2.call(this,self__,k);
case 3:
return G__26983__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26983.cljs$core$IFn$_invoke$arity$2 = G__26983__2;
G__26983.cljs$core$IFn$_invoke$arity$3 = G__26983__3;
return G__26983;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args26969){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26969)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj26985 = {};
return obj26985;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__26986 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26986,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26986,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__26987 = (i + (2));
i = G__26987;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__26988 = (i + (2));
i = G__26988;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__26989 = (i + (2));
i = G__26989;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__26990 = (i + (2));
i = G__26990;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__26991 = (i + (2));
i = G__26991;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__15658__auto__ = (function (){var G__26995 = k;
return goog.isString(G__26995);
})();
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_26996 = (0);
while(true){
if((i_26996 < l)){
(narr[i_26996] = (arr[i_26996]));

var G__26997 = (i_26996 + (1));
i_26996 = G__26997;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__26999 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__26999) : cljs.core.keys.call(null,G__26999));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27000 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27000) : cljs.core.vals.call(null,G__27000));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27001 = cljs.core.seq(coll);
var chunk__27002 = null;
var count__27003 = (0);
var i__27004 = (0);
while(true){
if((i__27004 < count__27003)){
var vec__27005 = chunk__27002.cljs$core$IIndexed$_nth$arity$2(null,i__27004);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27005,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27005,(1),null);
var G__27006_27019 = v;
var G__27007_27020 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27006_27019,G__27007_27020) : f.call(null,G__27006_27019,G__27007_27020));

var G__27021 = seq__27001;
var G__27022 = chunk__27002;
var G__27023 = count__27003;
var G__27024 = (i__27004 + (1));
seq__27001 = G__27021;
chunk__27002 = G__27022;
count__27003 = G__27023;
i__27004 = G__27024;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27001);
if(temp__4126__auto__){
var seq__27001__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27001__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27001__$1);
var G__27025 = cljs.core.chunk_rest(seq__27001__$1);
var G__27026 = c__16445__auto__;
var G__27027 = cljs.core.count(c__16445__auto__);
var G__27028 = (0);
seq__27001 = G__27025;
chunk__27002 = G__27026;
count__27003 = G__27027;
i__27004 = G__27028;
continue;
} else {
var vec__27008 = cljs.core.first(seq__27001__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27008,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27008,(1),null);
var G__27009_27029 = v;
var G__27010_27030 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27009_27029,G__27010_27030) : f.call(null,G__27009_27029,G__27010_27030));

var G__27031 = cljs.core.next(seq__27001__$1);
var G__27032 = null;
var G__27033 = (0);
var G__27034 = (0);
seq__27001 = G__27031;
chunk__27002 = G__27032;
count__27003 = G__27033;
i__27004 = G__27034;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__27011 = init__$1;
var G__27012 = (self__.arr[i]);
var G__27013 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27011,G__27012,G__27013) : f.call(null,G__27011,G__27012,G__27013));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27014 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27014) : cljs.core.deref.call(null,G__27014));
} else {
var G__27035 = (i + (2));
var G__27036 = init__$2;
i = G__27035;
init__$1 = G__27036;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__27015 = other;
if(G__27015){
var bit__16332__auto__ = (G__27015.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__16332__auto__) || (G__27015.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__27037 = (i + (2));
i = G__27037;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj27017 = {};
return obj27017;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__27038 = (s + (2));
var G__27039 = d;
s = G__27038;
d = G__27039;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__27040 = (s + (2));
var G__27041 = (d + (2));
s = G__27040;
d = G__27041;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__27018 = cljs.core.aclone(self__.arr);
(G__27018[(idx + (1))] = v);

return G__27018;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27042 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27043 = cljs.core.next(es);
ret = G__27042;
es = G__27043;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__27044 = null;
var G__27044__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27044__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27044 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27044__2.call(this,self__,k);
case 3:
return G__27044__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27044.cljs$core$IFn$_invoke$arity$2 = G__27044__2;
G__27044.cljs$core$IFn$_invoke$arity$3 = G__27044__3;
return G__27044;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args26998){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26998)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27045 = (i + (2));
var G__27046 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27045;
ret = G__27046;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__27047_27055 = self__.arr;
G__27047_27055.pop();

G__27047_27055.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__27048 = self__.len;
var G__27049 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__27048,G__27049) : cljs.core.array__GT_transient_hash_map.call(null,G__27048,G__27049));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__27050 = o;
if(G__27050){
var bit__16339__auto__ = (G__27050.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16339__auto__) || (G__27050.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27050.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27050);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27050);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__27051 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27051) : cljs.core.key.call(null,G__27051));
})(),(function (){var G__27052 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27052) : cljs.core.val.call(null,G__27052));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27056 = cljs.core.next(es);
var G__27057 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__27053 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27053) : cljs.core.key.call(null,G__27053));
})(),(function (){var G__27054 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27054) : cljs.core.val.call(null,G__27054));
})());
es = G__27056;
tcoll__$2 = G__27057;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__27058 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__27059 = (i + (2));
out = G__27058;
i = G__27059;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__27062 = cljs.core.aclone(arr);
(G__27062[i] = a);

return G__27062;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__27063 = cljs.core.aclone(arr);
(G__27063[i] = a);

(G__27063[j] = b);

return G__27063;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__27068 = init__$1;
var G__27069 = k;
var G__27070 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27068,G__27069,G__27070) : f.call(null,G__27068,G__27069,G__27070));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27071 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27071) : cljs.core.deref.call(null,G__27071));
} else {
var G__27072 = (i + (2));
var G__27073 = init__$2;
i = G__27072;
init__$1 = G__27073;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27074 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27074) : cljs.core.create_inode_seq.call(null,G__27074));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27088 = (0);
var j_27089 = (0);
while(true){
if((i_27088 < (32))){
if((((self__.bitmap >>> i_27088) & (1)) === (0))){
var G__27090 = (i_27088 + (1));
var G__27091 = j_27089;
i_27088 = G__27090;
j_27089 = G__27091;
continue;
} else {
(nodes[i_27088] = ((!(((self__.arr[j_27089]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_27089])),(self__.arr[j_27089]),(self__.arr[(j_27089 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27089 + (1))])));

var G__27092 = (i_27088 + (1));
var G__27093 = (j_27089 + (2));
i_27088 = G__27092;
j_27089 = G__27093;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27075 = edit__$1;
var G__27076 = (shift + (5));
var G__27077 = key_or_nil;
var G__27078 = val_or_node;
var G__27079 = hash;
var G__27080 = key;
var G__27081 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081) : cljs.core.create_node.call(null,G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_27094 = (0);
var j_27095 = (0);
while(true){
if((i_27094 < (32))){
if((((self__.bitmap >>> i_27094) & (1)) === (0))){
var G__27096 = (i_27094 + (1));
var G__27097 = j_27095;
i_27094 = G__27096;
j_27095 = G__27097;
continue;
} else {
(nodes[i_27094] = ((!(((self__.arr[j_27095]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_27095])),(self__.arr[j_27095]),(self__.arr[(j_27095 + (1))]),added_leaf_QMARK_):(self__.arr[(j_27095 + (1))])));

var G__27098 = (i_27094 + (1));
var G__27099 = (j_27095 + (2));
i_27094 = G__27098;
j_27095 = G__27099;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__27082 = (shift + (5));
var G__27083 = key_or_nil;
var G__27084 = val_or_node;
var G__27085 = hash;
var G__27086 = key;
var G__27087 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__27082,G__27083,G__27084,G__27085,G__27086,G__27087) : cljs.core.create_node.call(null,G__27082,G__27083,G__27084,G__27085,G__27086,G__27087));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__27100 = (i + (1));
var G__27101 = (j + (2));
var G__27102 = (bitmap | ((1) << i));
i = G__27100;
j = G__27101;
bitmap = G__27102;
continue;
} else {
var G__27103 = (i + (1));
var G__27104 = j;
var G__27105 = bitmap;
i = G__27103;
j = G__27104;
bitmap = G__27105;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27106 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__27106) : cljs.core.create_array_node_seq.call(null,G__27106));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27107 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27107) : cljs.core.deref.call(null,G__27107));
} else {
var G__27108 = (i + (1));
var G__27109 = init__$2;
i = G__27108;
init__$1 = G__27109;
continue;
}
} else {
var G__27110 = (i + (1));
var G__27111 = init__$1;
i = G__27110;
init__$1 = G__27111;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__27112 = (i + (2));
i = G__27112;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__27113 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__27113) : cljs.core.create_inode_seq.call(null,G__27113));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__27114 = self__.nodes;
var G__27115 = (self__.i + (2));
var G__27116 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27114,G__27115,G__27116) : cljs.core.create_inode_seq.call(null,G__27114,G__27115,G__27116));
} else {
var G__27117 = self__.nodes;
var G__27118 = self__.i;
var G__27119 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__27117,G__27118,G__27119) : cljs.core.create_inode_seq.call(null,G__27117,G__27118,G__27119));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__27123 = (j + (2));
j = G__27123;
continue;
}
} else {
var G__27124 = (j + (2));
j = G__27124;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__27125 = null;
var G__27126 = self__.nodes;
var G__27127 = self__.i;
var G__27128 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__27125,G__27126,G__27127,G__27128) : cljs.core.create_array_node_seq.call(null,G__27125,G__27126,G__27127,G__27128));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__27133 = (j + (1));
j = G__27133;
continue;
}
} else {
var G__27134 = (j + (1));
j = G__27134;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27136 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27136) : cljs.core.keys.call(null,G__27136));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27137 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27137) : cljs.core.vals.call(null,G__27137));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27138 = cljs.core.seq(coll);
var chunk__27139 = null;
var count__27140 = (0);
var i__27141 = (0);
while(true){
if((i__27141 < count__27140)){
var vec__27142 = chunk__27139.cljs$core$IIndexed$_nth$arity$2(null,i__27141);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27142,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27142,(1),null);
var G__27143_27154 = v;
var G__27144_27155 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27143_27154,G__27144_27155) : f.call(null,G__27143_27154,G__27144_27155));

var G__27156 = seq__27138;
var G__27157 = chunk__27139;
var G__27158 = count__27140;
var G__27159 = (i__27141 + (1));
seq__27138 = G__27156;
chunk__27139 = G__27157;
count__27140 = G__27158;
i__27141 = G__27159;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27138);
if(temp__4126__auto__){
var seq__27138__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27138__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27138__$1);
var G__27160 = cljs.core.chunk_rest(seq__27138__$1);
var G__27161 = c__16445__auto__;
var G__27162 = cljs.core.count(c__16445__auto__);
var G__27163 = (0);
seq__27138 = G__27160;
chunk__27139 = G__27161;
count__27140 = G__27162;
i__27141 = G__27163;
continue;
} else {
var vec__27145 = cljs.core.first(seq__27138__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27145,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27145,(1),null);
var G__27146_27164 = v;
var G__27147_27165 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27146_27164,G__27147_27165) : f.call(null,G__27146_27164,G__27147_27165));

var G__27166 = cljs.core.next(seq__27138__$1);
var G__27167 = null;
var G__27168 = (0);
var G__27169 = (0);
seq__27138 = G__27166;
chunk__27139 = G__27167;
count__27140 = G__27168;
i__27141 = G__27169;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__27148 = init;
var G__27149 = null;
var G__27150 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27148,G__27149,G__27150) : f.call(null,G__27148,G__27149,G__27150));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27151 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27151) : cljs.core.deref.call(null,G__27151));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj27153 = {};
return obj27153;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27170 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27171 = cljs.core.next(es);
ret = G__27170;
es = G__27171;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__27172 = null;
var G__27172__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27172__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27172 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27172__2.call(this,self__,k);
case 3:
return G__27172__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27172.cljs$core$IFn$_invoke$arity$2 = G__27172__2;
G__27172.cljs$core$IFn$_invoke$arity$3 = G__27172__3;
return G__27172;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args27135){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27135)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27173 = (i + (2));
var G__27174 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__27173;
ret = G__27174;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__27175 = (i + (1));
var G__27176 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__27175;
out = G__27176;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__27177 = o;
if(G__27177){
var bit__16339__auto__ = (G__27177.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__16339__auto__) || (G__27177.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__27177.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27177);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__27177);
}
})()){
return tcoll.assoc_BANG_((function (){var G__27178 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27178) : cljs.core.key.call(null,G__27178));
})(),(function (){var G__27179 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27179) : cljs.core.val.call(null,G__27179));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__27182 = cljs.core.next(es);
var G__27183 = tcoll__$1.assoc_BANG_((function (){var G__27180 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27180) : cljs.core.key.call(null,G__27180));
})(),(function (){var G__27181 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__27181) : cljs.core.val.call(null,G__27181));
})());
es = G__27182;
tcoll__$1 = G__27183;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__27184 = ((ascending_QMARK_)?t.left:t.right);
var G__27185 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__27184;
stack__$1 = G__27185;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__27198 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27198) : cljs.core.deref.call(null,G__27198));
} else {
var init__$2 = (function (){var G__27199 = init__$1;
var G__27200 = node.key;
var G__27201 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27199,G__27200,G__27201) : f.call(null,G__27199,G__27200,G__27201));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__27202 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27202) : cljs.core.deref.call(null,G__27202));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__27203 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27203) : cljs.core.deref.call(null,G__27203));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__27205 = null;
var G__27205__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27205__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27205 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27205__2.call(this,self__,k);
case 3:
return G__27205__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27205.cljs$core$IFn$_invoke$arity$2 = G__27205__2;
G__27205.cljs$core$IFn$_invoke$arity$3 = G__27205__3;
return G__27205;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args27204){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27204)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__27207 = null;
var G__27207__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27207__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27207 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27207__2.call(this,self__,k);
case 3:
return G__27207__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27207.cljs$core$IFn$_invoke$arity$2 = G__27207__2;
G__27207.cljs$core$IFn$_invoke$arity$3 = G__27207__3;
return G__27207;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args27206){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27206)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__27220 = k;
var G__27221 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27220,G__27221) : comp.call(null,G__27220,G__27221));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__27240 = k;
var G__27241 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27240,G__27241) : comp.call(null,G__27240,G__27241));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__27252 = k;
var G__27253 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27252,G__27253) : comp.call(null,G__27252,G__27253));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27255 = cljs.core.seq(coll);
var chunk__27256 = null;
var count__27257 = (0);
var i__27258 = (0);
while(true){
if((i__27258 < count__27257)){
var vec__27259 = chunk__27256.cljs$core$IIndexed$_nth$arity$2(null,i__27258);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27259,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27259,(1),null);
var G__27260_27272 = v;
var G__27261_27273 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27260_27272,G__27261_27273) : f.call(null,G__27260_27272,G__27261_27273));

var G__27274 = seq__27255;
var G__27275 = chunk__27256;
var G__27276 = count__27257;
var G__27277 = (i__27258 + (1));
seq__27255 = G__27274;
chunk__27256 = G__27275;
count__27257 = G__27276;
i__27258 = G__27277;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27255);
if(temp__4126__auto__){
var seq__27255__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27255__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27255__$1);
var G__27278 = cljs.core.chunk_rest(seq__27255__$1);
var G__27279 = c__16445__auto__;
var G__27280 = cljs.core.count(c__16445__auto__);
var G__27281 = (0);
seq__27255 = G__27278;
chunk__27256 = G__27279;
count__27257 = G__27280;
i__27258 = G__27281;
continue;
} else {
var vec__27262 = cljs.core.first(seq__27255__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27262,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27262,(1),null);
var G__27263_27282 = v;
var G__27264_27283 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27263_27282,G__27264_27283) : f.call(null,G__27263_27282,G__27264_27283));

var G__27284 = cljs.core.next(seq__27255__$1);
var G__27285 = null;
var G__27286 = (0);
var G__27287 = (0);
seq__27255 = G__27284;
chunk__27256 = G__27285;
count__27257 = G__27286;
i__27258 = G__27287;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27265 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__27265) : cljs.core.keys.call(null,G__27265));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__27266 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__27266) : cljs.core.vals.call(null,G__27266));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27267 = k;
var G__27268 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27267,G__27268) : self__.comp.call(null,G__27267,G__27268));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__27288 = t.left;
t = G__27288;
continue;
} else {
var G__27289 = t.right;
t = G__27289;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__27290 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__27291 = cljs.core.next(es);
ret = G__27290;
es = G__27291;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__27292 = null;
var G__27292__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27292__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27292 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27292__2.call(this,self__,k);
case 3:
return G__27292__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27292.cljs$core$IFn$_invoke$arity$2 = G__27292__2;
G__27292.cljs$core$IFn$_invoke$arity$3 = G__27292__3;
return G__27292;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args27254){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27254)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__27269 = k;
var G__27270 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__27269,G__27270) : self__.comp.call(null,G__27269,G__27270));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__27293 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27294 = t.left;
stack = G__27293;
t = G__27294;
continue;
} else {
var G__27295 = stack;
var G__27296 = t.right;
stack = G__27295;
t = G__27296;
continue;
}
} else {
if((c > (0))){
var G__27297 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__27298 = t.right;
stack = G__27297;
t = G__27298;
continue;
} else {
var G__27299 = stack;
var G__27300 = t.left;
stack = G__27299;
t = G__27300;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__27271 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__27271) : cljs.core.key.call(null,G__27271));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__27301 = cljs.core.nnext(in$);
var G__27302 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27301;
out = G__27302;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27303__i = 0, G__27303__a = new Array(arguments.length -  0);
while (G__27303__i < G__27303__a.length) {G__27303__a[G__27303__i] = arguments[G__27303__i + 0]; ++G__27303__i;}
  keyvals = new cljs.core.IndexedSeq(G__27303__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__27304){
var keyvals = cljs.core.seq(arglist__27304);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27305__i = 0, G__27305__a = new Array(arguments.length -  0);
while (G__27305__i < G__27305__a.length) {G__27305__a[G__27305__i] = arguments[G__27305__i + 0]; ++G__27305__i;}
  keyvals = new cljs.core.IndexedSeq(G__27305__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__27306){
var keyvals = cljs.core.seq(arglist__27306);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj27310 = {};
return obj27310;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__27311 = cljs.core.nnext(kvs);
kvs = G__27311;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27312__i = 0, G__27312__a = new Array(arguments.length -  0);
while (G__27312__i < G__27312__a.length) {G__27312__a[G__27312__i] = arguments[G__27312__i + 0]; ++G__27312__i;}
  keyvals = new cljs.core.IndexedSeq(G__27312__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__27313){
var keyvals = cljs.core.seq(arglist__27313);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__27314 = cljs.core.nnext(in$);
var G__27315 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27314;
out = G__27315;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__27316__i = 0, G__27316__a = new Array(arguments.length -  0);
while (G__27316__i < G__27316__a.length) {G__27316__a[G__27316__i] = arguments[G__27316__i + 0]; ++G__27316__i;}
  keyvals = new cljs.core.IndexedSeq(G__27316__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__27317){
var keyvals = cljs.core.seq(arglist__27317);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__27318 = cljs.core.nnext(in$);
var G__27319 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__27318;
out = G__27319;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__27320__i = 0, G__27320__a = new Array(arguments.length -  1);
while (G__27320__i < G__27320__a.length) {G__27320__a[G__27320__i] = arguments[G__27320__i + 1]; ++G__27320__i;}
  keyvals = new cljs.core.IndexedSeq(G__27320__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__27321){
var comparator = cljs.core.first(arglist__27321);
var keyvals = cljs.core.rest(arglist__27321);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27322 = self__.mseq;
if(G__27322){
var bit__16339__auto__ = (G__27322.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27322.cljs$core$INext$)){
return true;
} else {
if((!G__27322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27322);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27323 = self__.mseq;
if(G__27323){
var bit__16339__auto__ = (G__27323.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27323.cljs$core$INext$)){
return true;
} else {
if((!G__27323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27323);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27324 = self__.mseq;
if(G__27324){
var bit__16339__auto__ = (G__27324.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27324.cljs$core$INext$)){
return true;
} else {
if((!G__27324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27324);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__27325 = self__.mseq;
if(G__27325){
var bit__16339__auto__ = (G__27325.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__16339__auto__) || (G__27325.cljs$core$INext$)){
return true;
} else {
if((!G__27325.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27325);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__27325);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__27326_SHARP_,p2__27327_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__15658__auto__ = p1__27326_SHARP_;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__27327_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__27328__i = 0, G__27328__a = new Array(arguments.length -  0);
while (G__27328__i < G__27328__a.length) {G__27328__a[G__27328__i] = arguments[G__27328__i + 0]; ++G__27328__i;}
  maps = new cljs.core.IndexedSeq(G__27328__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__27329){
var maps = cljs.core.seq(arglist__27329);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__27332 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__27333 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27332,G__27333) : f.call(null,G__27332,G__27333));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__15658__auto__ = m1;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__27334__i = 0, G__27334__a = new Array(arguments.length -  1);
while (G__27334__i < G__27334__a.length) {G__27334__a[G__27334__i] = arguments[G__27334__i + 1]; ++G__27334__i;}
  maps = new cljs.core.IndexedSeq(G__27334__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__27335){
var f = cljs.core.first(arglist__27335);
var maps = cljs.core.rest(arglist__27335);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__27336 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__27337 = cljs.core.next(keys);
ret = G__27336;
keys = G__27337;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27340 = cljs.core.seq(coll);
var chunk__27341 = null;
var count__27342 = (0);
var i__27343 = (0);
while(true){
if((i__27343 < count__27342)){
var vec__27344 = chunk__27341.cljs$core$IIndexed$_nth$arity$2(null,i__27343);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27344,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27344,(1),null);
var G__27345_27350 = v;
var G__27346_27351 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27345_27350,G__27346_27351) : f.call(null,G__27345_27350,G__27346_27351));

var G__27352 = seq__27340;
var G__27353 = chunk__27341;
var G__27354 = count__27342;
var G__27355 = (i__27343 + (1));
seq__27340 = G__27352;
chunk__27341 = G__27353;
count__27342 = G__27354;
i__27343 = G__27355;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27340);
if(temp__4126__auto__){
var seq__27340__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27340__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27340__$1);
var G__27356 = cljs.core.chunk_rest(seq__27340__$1);
var G__27357 = c__16445__auto__;
var G__27358 = cljs.core.count(c__16445__auto__);
var G__27359 = (0);
seq__27340 = G__27356;
chunk__27341 = G__27357;
count__27342 = G__27358;
i__27343 = G__27359;
continue;
} else {
var vec__27347 = cljs.core.first(seq__27340__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27347,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27347,(1),null);
var G__27348_27360 = v;
var G__27349_27361 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27348_27360,G__27349_27361) : f.call(null,G__27348_27360,G__27349_27361));

var G__27362 = cljs.core.next(seq__27340__$1);
var G__27363 = null;
var G__27364 = (0);
var G__27365 = (0);
seq__27340 = G__27362;
chunk__27341 = G__27363;
count__27342 = G__27364;
i__27343 = G__27365;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27338_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27338_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__27366 = null;
var G__27366__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27366__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27366 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27366__2.call(this,self__,k);
case 3:
return G__27366__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27366.cljs$core$IFn$_invoke$arity$2 = G__27366__2;
G__27366.cljs$core$IFn$_invoke$arity$3 = G__27366__3;
return G__27366;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args27339){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27339)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__27367 = (i + (1));
var G__27368 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__27367;
out = G__27368;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__27369 = (i + (1));
var G__27370 = cljs.core._conj_BANG_(out,(items[i]));
i = G__27369;
out = G__27370;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__27372 = null;
var G__27372__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__27372__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__27372 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27372__2.call(this,self__,k);
case 3:
return G__27372__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27372.cljs$core$IFn$_invoke$arity$2 = G__27372__2;
G__27372.cljs$core$IFn$_invoke$arity$3 = G__27372__3;
return G__27372;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args27371){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27371)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__27375 = cljs.core.seq(coll);
var chunk__27376 = null;
var count__27377 = (0);
var i__27378 = (0);
while(true){
if((i__27378 < count__27377)){
var vec__27379 = chunk__27376.cljs$core$IIndexed$_nth$arity$2(null,i__27378);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27379,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27379,(1),null);
var G__27380_27385 = v;
var G__27381_27386 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27380_27385,G__27381_27386) : f.call(null,G__27380_27385,G__27381_27386));

var G__27387 = seq__27375;
var G__27388 = chunk__27376;
var G__27389 = count__27377;
var G__27390 = (i__27378 + (1));
seq__27375 = G__27387;
chunk__27376 = G__27388;
count__27377 = G__27389;
i__27378 = G__27390;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27375);
if(temp__4126__auto__){
var seq__27375__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27375__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27375__$1);
var G__27391 = cljs.core.chunk_rest(seq__27375__$1);
var G__27392 = c__16445__auto__;
var G__27393 = cljs.core.count(c__16445__auto__);
var G__27394 = (0);
seq__27375 = G__27391;
chunk__27376 = G__27392;
count__27377 = G__27393;
i__27378 = G__27394;
continue;
} else {
var vec__27382 = cljs.core.first(seq__27375__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27382,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27382,(1),null);
var G__27383_27395 = v;
var G__27384_27396 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27383_27395,G__27384_27396) : f.call(null,G__27383_27395,G__27384_27396));

var G__27397 = cljs.core.next(seq__27375__$1);
var G__27398 = null;
var G__27399 = (0);
var G__27400 = (0);
seq__27375 = G__27397;
chunk__27376 = G__27398;
count__27377 = G__27399;
i__27378 = G__27400;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__27373_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__27373_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__27401 = null;
var G__27401__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__27401__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__27401 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__27401__2.call(this,self__,k);
case 3:
return G__27401__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27401.cljs$core$IFn$_invoke$arity$2 = G__27401__2;
G__27401.cljs$core$IFn$_invoke$arity$3 = G__27401__3;
return G__27401;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args27374){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args27374)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__16539__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__16539__auto__.length)){
var G__27402 = (i + (1));
var G__27403 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__27402;
res = G__27403;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__27404 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__27405 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__27404;
out = G__27405;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__27406__delegate = function (keys){
return cljs.core.set(keys);
};
var G__27406 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27407__i = 0, G__27407__a = new Array(arguments.length -  0);
while (G__27407__i < G__27407__a.length) {G__27407__a[G__27407__i] = arguments[G__27407__i + 0]; ++G__27407__i;}
  keys = new cljs.core.IndexedSeq(G__27407__a,0);
} 
return G__27406__delegate.call(this,keys);};
G__27406.cljs$lang$maxFixedArity = 0;
G__27406.cljs$lang$applyTo = (function (arglist__27408){
var keys = cljs.core.seq(arglist__27408);
return G__27406__delegate(keys);
});
G__27406.cljs$core$IFn$_invoke$arity$variadic = G__27406__delegate;
return G__27406;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__27409 = null;
if (arguments.length > 0) {
var G__27410__i = 0, G__27410__a = new Array(arguments.length -  0);
while (G__27410__i < G__27410__a.length) {G__27410__a[G__27410__i] = arguments[G__27410__i + 0]; ++G__27410__i;}
G__27409 = new cljs.core.IndexedSeq(G__27410__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__27409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__27411__i = 0, G__27411__a = new Array(arguments.length -  0);
while (G__27411__i < G__27411__a.length) {G__27411__a[G__27411__i] = arguments[G__27411__i + 0]; ++G__27411__i;}
  keys = new cljs.core.IndexedSeq(G__27411__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__27412){
var keys = cljs.core.seq(arglist__27412);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__27413__i = 0, G__27413__a = new Array(arguments.length -  1);
while (G__27413__i < G__27413__a.length) {G__27413__a[G__27413__i] = arguments[G__27413__i + 1]; ++G__27413__i;}
  keys = new cljs.core.IndexedSeq(G__27413__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__27414){
var comparator = cljs.core.first(arglist__27414);
var keys = cljs.core.rest(arglist__27414);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__27415_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27415_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__27415_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__27416_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__27416_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__27416_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__27437 = null;
var G__27437__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27437__1 = (function (result){
var G__27427 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27427) : rf.call(null,G__27427));
});
var G__27437__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__27428 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27428) : cljs.core.deref.call(null,G__27428));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__27429 = result;
var G__27430 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27429,G__27430) : rf.call(null,G__27429,G__27430));
}
});
G__27437 = function(result,input){
switch(arguments.length){
case 0:
return G__27437__0.call(this);
case 1:
return G__27437__1.call(this,result);
case 2:
return G__27437__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27437.cljs$core$IFn$_invoke$arity$0 = G__27437__0;
G__27437.cljs$core$IFn$_invoke$arity$1 = G__27437__1;
G__27437.cljs$core$IFn$_invoke$arity$2 = G__27437__2;
return G__27437;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__27435,seen__$1){
while(true){
var vec__27436 = p__27435;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27436,(0),null);
var xs__$1 = vec__27436;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__27438 = cljs.core.rest(s);
var G__27439 = seen__$1;
p__27435 = G__27438;
seen__$1 = G__27439;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__27440 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__27441 = cljs.core.next(s__$1);
ret = G__27440;
s__$1 = G__27441;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__27443 = x;
if(G__27443){
var bit__16332__auto__ = (G__27443.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__16332__auto__) || (G__27443.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__27444 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__27445 = cljs.core.next(ks);
var G__27446 = cljs.core.next(vs);
map = G__27444;
ks = G__27445;
vs = G__27446;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__27457 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27457) : k.call(null,G__27457));
})() > (function (){var G__27458 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27458) : k.call(null,G__27458));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__27459__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27447_SHARP_,p2__27448_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__27447_SHARP_,p2__27448_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27459 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27460__i = 0, G__27460__a = new Array(arguments.length -  3);
while (G__27460__i < G__27460__a.length) {G__27460__a[G__27460__i] = arguments[G__27460__i + 3]; ++G__27460__i;}
  more = new cljs.core.IndexedSeq(G__27460__a,0);
} 
return G__27459__delegate.call(this,k,x,y,more);};
G__27459.cljs$lang$maxFixedArity = 3;
G__27459.cljs$lang$applyTo = (function (arglist__27461){
var k = cljs.core.first(arglist__27461);
arglist__27461 = cljs.core.next(arglist__27461);
var x = cljs.core.first(arglist__27461);
arglist__27461 = cljs.core.next(arglist__27461);
var y = cljs.core.first(arglist__27461);
var more = cljs.core.rest(arglist__27461);
return G__27459__delegate(k,x,y,more);
});
G__27459.cljs$core$IFn$_invoke$arity$variadic = G__27459__delegate;
return G__27459;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__27462 = null;
if (arguments.length > 3) {
var G__27463__i = 0, G__27463__a = new Array(arguments.length -  3);
while (G__27463__i < G__27463__a.length) {G__27463__a[G__27463__i] = arguments[G__27463__i + 3]; ++G__27463__i;}
G__27462 = new cljs.core.IndexedSeq(G__27463__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__27474 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27474) : k.call(null,G__27474));
})() < (function (){var G__27475 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__27475) : k.call(null,G__27475));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__27476__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27464_SHARP_,p2__27465_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__27464_SHARP_,p2__27465_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__27476 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__27477__i = 0, G__27477__a = new Array(arguments.length -  3);
while (G__27477__i < G__27477__a.length) {G__27477__a[G__27477__i] = arguments[G__27477__i + 3]; ++G__27477__i;}
  more = new cljs.core.IndexedSeq(G__27477__a,0);
} 
return G__27476__delegate.call(this,k,x,y,more);};
G__27476.cljs$lang$maxFixedArity = 3;
G__27476.cljs$lang$applyTo = (function (arglist__27478){
var k = cljs.core.first(arglist__27478);
arglist__27478 = cljs.core.next(arglist__27478);
var x = cljs.core.first(arglist__27478);
arglist__27478 = cljs.core.next(arglist__27478);
var y = cljs.core.first(arglist__27478);
var more = cljs.core.rest(arglist__27478);
return G__27476__delegate(k,x,y,more);
});
G__27476.cljs$core$IFn$_invoke$arity$variadic = G__27476__delegate;
return G__27476;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__27479 = null;
if (arguments.length > 3) {
var G__27480__i = 0, G__27480__a = new Array(arguments.length -  3);
while (G__27480__i < G__27480__a.length) {G__27480__a[G__27480__i] = arguments[G__27480__i + 3]; ++G__27480__i;}
G__27479 = new cljs.core.IndexedSeq(G__27480__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__27479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__27497 = null;
var G__27497__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27497__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27492 = result;
var G__27493 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27492,G__27493) : rf.call(null,G__27492,G__27493));
})());
})());
var G__27494 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27494) : rf.call(null,G__27494));
});
var G__27497__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__27495 = result;
var G__27496 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27495,G__27496) : rf.call(null,G__27495,G__27496));
} else {
return result;
}
});
G__27497 = function(result,input){
switch(arguments.length){
case 0:
return G__27497__0.call(this);
case 1:
return G__27497__1.call(this,result);
case 2:
return G__27497__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27497.cljs$core$IFn$_invoke$arity$0 = G__27497__0;
G__27497.cljs$core$IFn$_invoke$arity$1 = G__27497__1;
G__27497.cljs$core$IFn$_invoke$arity$2 = G__27497__2;
return G__27497;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__27510 = null;
var G__27510__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27510__1 = (function (result){
var G__27505 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27505) : rf.call(null,G__27505));
});
var G__27510__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__27506 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27506) : pred.call(null,G__27506));
})())){
var G__27507 = result;
var G__27508 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27507,G__27508) : rf.call(null,G__27507,G__27508));
} else {
return cljs.core.reduced(result);
}
});
G__27510 = function(result,input){
switch(arguments.length){
case 0:
return G__27510__0.call(this);
case 1:
return G__27510__1.call(this,result);
case 2:
return G__27510__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27510.cljs$core$IFn$_invoke$arity$0 = G__27510__0;
G__27510.cljs$core$IFn$_invoke$arity$1 = G__27510__1;
G__27510.cljs$core$IFn$_invoke$arity$2 = G__27510__2;
return G__27510;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__27509 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__27509) : pred.call(null,G__27509));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__27515 = (function (){var G__27517 = cljs.core._entry_key(sc,e);
var G__27518 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__27517,G__27518) : comp.call(null,G__27517,G__27518));
})();
var G__27516 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__27515,G__27516) : test.call(null,G__27515,G__27516));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27522 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27522,(0),null);
var s = vec__27522;
if(cljs.core.truth_((function (){var G__27523 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27523) : include.call(null,G__27523));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27524 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27524,(0),null);
var s = vec__27524;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27528 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27528,(0),null);
var s = vec__27528;
if(cljs.core.truth_((function (){var G__27529 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__27529) : include.call(null,G__27529));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__27530 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27530,(0),null);
var s = vec__27530;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__27531 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__27531) : Math.ceil.call(null,G__27531));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__16079__auto__ = self__.__hash;
if(!((h__16079__auto__ == null))){
return h__16079__auto__;
} else {
var h__16079__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__16079__auto____$1;

return h__16079__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__27532 = ret;
var G__27533 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27532,G__27533) : f.call(null,G__27532,G__27533));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__27534 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27534) : cljs.core.deref.call(null,G__27534));
} else {
var G__27535 = (i + self__.step);
var G__27536 = ret__$1;
i = G__27535;
ret = G__27536;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__27554 = null;
var G__27554__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27554__1 = (function (result){
var G__27551 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27551) : rf.call(null,G__27551));
});
var G__27554__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__27552 = result;
var G__27553 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27552,G__27553) : rf.call(null,G__27552,G__27553));
} else {
return result;
}
});
G__27554 = function(result,input){
switch(arguments.length){
case 0:
return G__27554__0.call(this);
case 1:
return G__27554__1.call(this,result);
case 2:
return G__27554__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27554.cljs$core$IFn$_invoke$arity$0 = G__27554__0;
G__27554.cljs$core$IFn$_invoke$arity$1 = G__27554__1;
G__27554.cljs$core$IFn$_invoke$arity$2 = G__27554__2;
return G__27554;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__27576 = null;
var G__27576__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27576__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__27567 = result;
var G__27568 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27567,G__27568) : rf.call(null,G__27567,G__27568));
})());
})());
var G__27569 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27569) : rf.call(null,G__27569));
});
var G__27576__2 = (function (result,input){
var pval = (function (){var G__27570 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27570) : cljs.core.deref.call(null,G__27570));
})();
var val = (function (){var G__27571 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27571) : f.call(null,G__27571));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__27572 = result;
var G__27573 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27572,G__27573) : rf.call(null,G__27572,G__27573));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__27576 = function(result,input){
switch(arguments.length){
case 0:
return G__27576__0.call(this);
case 1:
return G__27576__1.call(this,result);
case 2:
return G__27576__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27576.cljs$core$IFn$_invoke$arity$0 = G__27576__0;
G__27576.cljs$core$IFn$_invoke$arity$1 = G__27576__1;
G__27576.cljs$core$IFn$_invoke$arity$2 = G__27576__2;
return G__27576;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__27574 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27574) : f.call(null,G__27574));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__27555_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__27575 = p1__27555_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27575) : f.call(null,G__27575));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__27585 = init;
var G__27586 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27585,G__27586) : f.call(null,G__27585,G__27586));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__27681 = null;
var G__27681__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__27681__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27639 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27639) : f.call(null,G__27639));
})()],null));
});
var G__27681__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27640 = x;
var G__27641 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27640,G__27641) : f.call(null,G__27640,G__27641));
})()],null));
});
var G__27681__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27642 = x;
var G__27643 = y;
var G__27644 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27642,G__27643,G__27644) : f.call(null,G__27642,G__27643,G__27644));
})()],null));
});
var G__27681__4 = (function() { 
var G__27682__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__27682 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27683__i = 0, G__27683__a = new Array(arguments.length -  3);
while (G__27683__i < G__27683__a.length) {G__27683__a[G__27683__i] = arguments[G__27683__i + 3]; ++G__27683__i;}
  args = new cljs.core.IndexedSeq(G__27683__a,0);
} 
return G__27682__delegate.call(this,x,y,z,args);};
G__27682.cljs$lang$maxFixedArity = 3;
G__27682.cljs$lang$applyTo = (function (arglist__27684){
var x = cljs.core.first(arglist__27684);
arglist__27684 = cljs.core.next(arglist__27684);
var y = cljs.core.first(arglist__27684);
arglist__27684 = cljs.core.next(arglist__27684);
var z = cljs.core.first(arglist__27684);
var args = cljs.core.rest(arglist__27684);
return G__27682__delegate(x,y,z,args);
});
G__27682.cljs$core$IFn$_invoke$arity$variadic = G__27682__delegate;
return G__27682;
})()
;
G__27681 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27681__0.call(this);
case 1:
return G__27681__1.call(this,x);
case 2:
return G__27681__2.call(this,x,y);
case 3:
return G__27681__3.call(this,x,y,z);
default:
var G__27685 = null;
if (arguments.length > 3) {
var G__27686__i = 0, G__27686__a = new Array(arguments.length -  3);
while (G__27686__i < G__27686__a.length) {G__27686__a[G__27686__i] = arguments[G__27686__i + 3]; ++G__27686__i;}
G__27685 = new cljs.core.IndexedSeq(G__27686__a,0);
}
return G__27681__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27681.cljs$lang$maxFixedArity = 3;
G__27681.cljs$lang$applyTo = G__27681__4.cljs$lang$applyTo;
G__27681.cljs$core$IFn$_invoke$arity$0 = G__27681__0;
G__27681.cljs$core$IFn$_invoke$arity$1 = G__27681__1;
G__27681.cljs$core$IFn$_invoke$arity$2 = G__27681__2;
G__27681.cljs$core$IFn$_invoke$arity$3 = G__27681__3;
G__27681.cljs$core$IFn$_invoke$arity$variadic = G__27681__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27681;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__27687 = null;
var G__27687__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__27687__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27645 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27645) : f.call(null,G__27645));
})(),(function (){var G__27646 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27646) : g.call(null,G__27646));
})()],null));
});
var G__27687__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27647 = x;
var G__27648 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27647,G__27648) : f.call(null,G__27647,G__27648));
})(),(function (){var G__27649 = x;
var G__27650 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27649,G__27650) : g.call(null,G__27649,G__27650));
})()],null));
});
var G__27687__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27651 = x;
var G__27652 = y;
var G__27653 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27651,G__27652,G__27653) : f.call(null,G__27651,G__27652,G__27653));
})(),(function (){var G__27654 = x;
var G__27655 = y;
var G__27656 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27654,G__27655,G__27656) : g.call(null,G__27654,G__27655,G__27656));
})()],null));
});
var G__27687__4 = (function() { 
var G__27688__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__27688 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27689__i = 0, G__27689__a = new Array(arguments.length -  3);
while (G__27689__i < G__27689__a.length) {G__27689__a[G__27689__i] = arguments[G__27689__i + 3]; ++G__27689__i;}
  args = new cljs.core.IndexedSeq(G__27689__a,0);
} 
return G__27688__delegate.call(this,x,y,z,args);};
G__27688.cljs$lang$maxFixedArity = 3;
G__27688.cljs$lang$applyTo = (function (arglist__27690){
var x = cljs.core.first(arglist__27690);
arglist__27690 = cljs.core.next(arglist__27690);
var y = cljs.core.first(arglist__27690);
arglist__27690 = cljs.core.next(arglist__27690);
var z = cljs.core.first(arglist__27690);
var args = cljs.core.rest(arglist__27690);
return G__27688__delegate(x,y,z,args);
});
G__27688.cljs$core$IFn$_invoke$arity$variadic = G__27688__delegate;
return G__27688;
})()
;
G__27687 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27687__0.call(this);
case 1:
return G__27687__1.call(this,x);
case 2:
return G__27687__2.call(this,x,y);
case 3:
return G__27687__3.call(this,x,y,z);
default:
var G__27691 = null;
if (arguments.length > 3) {
var G__27692__i = 0, G__27692__a = new Array(arguments.length -  3);
while (G__27692__i < G__27692__a.length) {G__27692__a[G__27692__i] = arguments[G__27692__i + 3]; ++G__27692__i;}
G__27691 = new cljs.core.IndexedSeq(G__27692__a,0);
}
return G__27687__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27687.cljs$lang$maxFixedArity = 3;
G__27687.cljs$lang$applyTo = G__27687__4.cljs$lang$applyTo;
G__27687.cljs$core$IFn$_invoke$arity$0 = G__27687__0;
G__27687.cljs$core$IFn$_invoke$arity$1 = G__27687__1;
G__27687.cljs$core$IFn$_invoke$arity$2 = G__27687__2;
G__27687.cljs$core$IFn$_invoke$arity$3 = G__27687__3;
G__27687.cljs$core$IFn$_invoke$arity$variadic = G__27687__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27687;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__27693 = null;
var G__27693__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__27693__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27657 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__27657) : f.call(null,G__27657));
})(),(function (){var G__27658 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__27658) : g.call(null,G__27658));
})(),(function (){var G__27659 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__27659) : h.call(null,G__27659));
})()],null));
});
var G__27693__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27660 = x;
var G__27661 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__27660,G__27661) : f.call(null,G__27660,G__27661));
})(),(function (){var G__27662 = x;
var G__27663 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__27662,G__27663) : g.call(null,G__27662,G__27663));
})(),(function (){var G__27664 = x;
var G__27665 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__27664,G__27665) : h.call(null,G__27664,G__27665));
})()],null));
});
var G__27693__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__27666 = x;
var G__27667 = y;
var G__27668 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__27666,G__27667,G__27668) : f.call(null,G__27666,G__27667,G__27668));
})(),(function (){var G__27669 = x;
var G__27670 = y;
var G__27671 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__27669,G__27670,G__27671) : g.call(null,G__27669,G__27670,G__27671));
})(),(function (){var G__27672 = x;
var G__27673 = y;
var G__27674 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__27672,G__27673,G__27674) : h.call(null,G__27672,G__27673,G__27674));
})()],null));
});
var G__27693__4 = (function() { 
var G__27694__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__27694 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27695__i = 0, G__27695__a = new Array(arguments.length -  3);
while (G__27695__i < G__27695__a.length) {G__27695__a[G__27695__i] = arguments[G__27695__i + 3]; ++G__27695__i;}
  args = new cljs.core.IndexedSeq(G__27695__a,0);
} 
return G__27694__delegate.call(this,x,y,z,args);};
G__27694.cljs$lang$maxFixedArity = 3;
G__27694.cljs$lang$applyTo = (function (arglist__27696){
var x = cljs.core.first(arglist__27696);
arglist__27696 = cljs.core.next(arglist__27696);
var y = cljs.core.first(arglist__27696);
arglist__27696 = cljs.core.next(arglist__27696);
var z = cljs.core.first(arglist__27696);
var args = cljs.core.rest(arglist__27696);
return G__27694__delegate(x,y,z,args);
});
G__27694.cljs$core$IFn$_invoke$arity$variadic = G__27694__delegate;
return G__27694;
})()
;
G__27693 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27693__0.call(this);
case 1:
return G__27693__1.call(this,x);
case 2:
return G__27693__2.call(this,x,y);
case 3:
return G__27693__3.call(this,x,y,z);
default:
var G__27697 = null;
if (arguments.length > 3) {
var G__27698__i = 0, G__27698__a = new Array(arguments.length -  3);
while (G__27698__i < G__27698__a.length) {G__27698__a[G__27698__i] = arguments[G__27698__i + 3]; ++G__27698__i;}
G__27697 = new cljs.core.IndexedSeq(G__27698__a,0);
}
return G__27693__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27697);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27693.cljs$lang$maxFixedArity = 3;
G__27693.cljs$lang$applyTo = G__27693__4.cljs$lang$applyTo;
G__27693.cljs$core$IFn$_invoke$arity$0 = G__27693__0;
G__27693.cljs$core$IFn$_invoke$arity$1 = G__27693__1;
G__27693.cljs$core$IFn$_invoke$arity$2 = G__27693__2;
G__27693.cljs$core$IFn$_invoke$arity$3 = G__27693__3;
G__27693.cljs$core$IFn$_invoke$arity$variadic = G__27693__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27693;
})()
});
var juxt__4 = (function() { 
var G__27699__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__27700 = null;
var G__27700__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27587_SHARP_,p2__27588_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27587_SHARP_,(function (){return (p2__27588_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__27588_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__27588_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27700__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27589_SHARP_,p2__27590_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27589_SHARP_,(function (){var G__27675 = x;
return (p2__27590_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__27590_SHARP_.cljs$core$IFn$_invoke$arity$1(G__27675) : p2__27590_SHARP_.call(null,G__27675));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27700__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27591_SHARP_,p2__27592_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27591_SHARP_,(function (){var G__27676 = x;
var G__27677 = y;
return (p2__27592_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__27592_SHARP_.cljs$core$IFn$_invoke$arity$2(G__27676,G__27677) : p2__27592_SHARP_.call(null,G__27676,G__27677));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27700__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27593_SHARP_,p2__27594_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27593_SHARP_,(function (){var G__27678 = x;
var G__27679 = y;
var G__27680 = z;
return (p2__27594_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__27594_SHARP_.cljs$core$IFn$_invoke$arity$3(G__27678,G__27679,G__27680) : p2__27594_SHARP_.call(null,G__27678,G__27679,G__27680));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__27700__4 = (function() { 
var G__27701__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__27595_SHARP_,p2__27596_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__27595_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__27596_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__27701 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__27702__i = 0, G__27702__a = new Array(arguments.length -  3);
while (G__27702__i < G__27702__a.length) {G__27702__a[G__27702__i] = arguments[G__27702__i + 3]; ++G__27702__i;}
  args = new cljs.core.IndexedSeq(G__27702__a,0);
} 
return G__27701__delegate.call(this,x,y,z,args);};
G__27701.cljs$lang$maxFixedArity = 3;
G__27701.cljs$lang$applyTo = (function (arglist__27703){
var x = cljs.core.first(arglist__27703);
arglist__27703 = cljs.core.next(arglist__27703);
var y = cljs.core.first(arglist__27703);
arglist__27703 = cljs.core.next(arglist__27703);
var z = cljs.core.first(arglist__27703);
var args = cljs.core.rest(arglist__27703);
return G__27701__delegate(x,y,z,args);
});
G__27701.cljs$core$IFn$_invoke$arity$variadic = G__27701__delegate;
return G__27701;
})()
;
G__27700 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__27700__0.call(this);
case 1:
return G__27700__1.call(this,x);
case 2:
return G__27700__2.call(this,x,y);
case 3:
return G__27700__3.call(this,x,y,z);
default:
var G__27704 = null;
if (arguments.length > 3) {
var G__27705__i = 0, G__27705__a = new Array(arguments.length -  3);
while (G__27705__i < G__27705__a.length) {G__27705__a[G__27705__i] = arguments[G__27705__i + 3]; ++G__27705__i;}
G__27704 = new cljs.core.IndexedSeq(G__27705__a,0);
}
return G__27700__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__27704);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27700.cljs$lang$maxFixedArity = 3;
G__27700.cljs$lang$applyTo = G__27700__4.cljs$lang$applyTo;
G__27700.cljs$core$IFn$_invoke$arity$0 = G__27700__0;
G__27700.cljs$core$IFn$_invoke$arity$1 = G__27700__1;
G__27700.cljs$core$IFn$_invoke$arity$2 = G__27700__2;
G__27700.cljs$core$IFn$_invoke$arity$3 = G__27700__3;
G__27700.cljs$core$IFn$_invoke$arity$variadic = G__27700__4.cljs$core$IFn$_invoke$arity$variadic;
return G__27700;
})()
;})(fs__$1))
};
var G__27699 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__27706__i = 0, G__27706__a = new Array(arguments.length -  3);
while (G__27706__i < G__27706__a.length) {G__27706__a[G__27706__i] = arguments[G__27706__i + 3]; ++G__27706__i;}
  fs = new cljs.core.IndexedSeq(G__27706__a,0);
} 
return G__27699__delegate.call(this,f,g,h,fs);};
G__27699.cljs$lang$maxFixedArity = 3;
G__27699.cljs$lang$applyTo = (function (arglist__27707){
var f = cljs.core.first(arglist__27707);
arglist__27707 = cljs.core.next(arglist__27707);
var g = cljs.core.first(arglist__27707);
arglist__27707 = cljs.core.next(arglist__27707);
var h = cljs.core.first(arglist__27707);
var fs = cljs.core.rest(arglist__27707);
return G__27699__delegate(f,g,h,fs);
});
G__27699.cljs$core$IFn$_invoke$arity$variadic = G__27699__delegate;
return G__27699;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__27708 = null;
if (arguments.length > 3) {
var G__27709__i = 0, G__27709__a = new Array(arguments.length -  3);
while (G__27709__i < G__27709__a.length) {G__27709__a[G__27709__i] = arguments[G__27709__i + 3]; ++G__27709__i;}
G__27708 = new cljs.core.IndexedSeq(G__27709__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__27708);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__27710 = cljs.core.next(coll);
coll = G__27710;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__27711 = (n - (1));
var G__27712 = cljs.core.next(coll);
n = G__27711;
coll = G__27712;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__27716 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27716,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27716,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27716,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_27724 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__15658__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__27725_27731 = cljs.core.first(coll);
var G__27726_27732 = writer;
var G__27727_27733 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27725_27731,G__27726_27732,G__27727_27733) : print_one.call(null,G__27725_27731,G__27726_27732,G__27727_27733));
} else {
}

var coll_27734__$1 = cljs.core.next(coll);
var n_27735 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_27734__$1) && (((n_27735 == null)) || (!((n_27735 === (0)))))){
cljs.core._write(writer,sep);

var G__27728_27736 = cljs.core.first(coll_27734__$1);
var G__27729_27737 = writer;
var G__27730_27738 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27728_27736,G__27729_27737,G__27730_27738) : print_one.call(null,G__27728_27736,G__27729_27737,G__27730_27738));

var G__27739 = cljs.core.next(coll_27734__$1);
var G__27740 = (n_27735 - (1));
coll_27734__$1 = G__27739;
n_27735 = G__27740;
continue;
} else {
if((cljs.core.seq(coll_27734__$1)) && ((n_27735 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__15658__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_27724;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__27745 = cljs.core.seq(ss);
var chunk__27746 = null;
var count__27747 = (0);
var i__27748 = (0);
while(true){
if((i__27748 < count__27747)){
var s = chunk__27746.cljs$core$IIndexed$_nth$arity$2(null,i__27748);
cljs.core._write(writer,s);

var G__27749 = seq__27745;
var G__27750 = chunk__27746;
var G__27751 = count__27747;
var G__27752 = (i__27748 + (1));
seq__27745 = G__27749;
chunk__27746 = G__27750;
count__27747 = G__27751;
i__27748 = G__27752;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27745);
if(temp__4126__auto__){
var seq__27745__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27745__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27745__$1);
var G__27753 = cljs.core.chunk_rest(seq__27745__$1);
var G__27754 = c__16445__auto__;
var G__27755 = cljs.core.count(c__16445__auto__);
var G__27756 = (0);
seq__27745 = G__27753;
chunk__27746 = G__27754;
count__27747 = G__27755;
i__27748 = G__27756;
continue;
} else {
var s = cljs.core.first(seq__27745__$1);
cljs.core._write(writer,s);

var G__27757 = cljs.core.next(seq__27745__$1);
var G__27758 = null;
var G__27759 = (0);
var G__27760 = (0);
seq__27745 = G__27757;
chunk__27746 = G__27758;
count__27747 = G__27759;
i__27748 = G__27760;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__27761__i = 0, G__27761__a = new Array(arguments.length -  1);
while (G__27761__i < G__27761__a.length) {G__27761__a[G__27761__i] = arguments[G__27761__i + 1]; ++G__27761__i;}
  ss = new cljs.core.IndexedSeq(G__27761__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__27762){
var writer = cljs.core.first(arglist__27762);
var ss = cljs.core.rest(arglist__27762);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj27764 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj27764;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__27767 = "[\\\\\"\b\f\n\r\t]";
var G__27768 = "g";
return RegExp(G__27767,G__27768);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__15646__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__15646__auto__)){
var and__15646__auto____$1 = (function (){var G__27782 = obj;
if(G__27782){
var bit__16339__auto__ = (G__27782.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__16339__auto__) || (G__27782.cljs$core$IMeta$)){
return true;
} else {
if((!G__27782.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27782);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__27782);
}
})();
if(and__15646__auto____$1){
return cljs.core.meta(obj);
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__27783_27793 = cljs.core.meta(obj);
var G__27784_27794 = writer;
var G__27785_27795 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__27783_27793,G__27784_27794,G__27785_27795) : cljs.core.pr_writer.call(null,G__27783_27793,G__27784_27794,G__27785_27795));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__27786 = obj;
if(G__27786){
var bit__16332__auto__ = (G__27786.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16332__auto__) || (G__27786.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__27787 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__27788 = cljs.core.pr_writer;
var G__27789 = writer;
var G__27790 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__27787,G__27788,G__27789,G__27790) : cljs.core.print_map.call(null,G__27787,G__27788,G__27789,G__27790));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__27791 = obj;
return goog.isString(G__27791);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__27796 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__27796;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__27792 = obj;
if(G__27792){
var bit__16339__auto__ = (G__27792.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__16339__auto__) || (G__27792.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__27792.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27792);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__27792);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__27800 = obj;
var G__27801 = writer;
var G__27802 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__27800,G__27801,G__27802) : alt_impl.call(null,G__27800,G__27801,G__27802));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__27807 = cljs.core.seq(cljs.core.next(objs));
var chunk__27808 = null;
var count__27809 = (0);
var i__27810 = (0);
while(true){
if((i__27810 < count__27809)){
var obj = chunk__27808.cljs$core$IIndexed$_nth$arity$2(null,i__27810);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27811 = seq__27807;
var G__27812 = chunk__27808;
var G__27813 = count__27809;
var G__27814 = (i__27810 + (1));
seq__27807 = G__27811;
chunk__27808 = G__27812;
count__27809 = G__27813;
i__27810 = G__27814;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__27807);
if(temp__4126__auto__){
var seq__27807__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__27807__$1)){
var c__16445__auto__ = cljs.core.chunk_first(seq__27807__$1);
var G__27815 = cljs.core.chunk_rest(seq__27807__$1);
var G__27816 = c__16445__auto__;
var G__27817 = cljs.core.count(c__16445__auto__);
var G__27818 = (0);
seq__27807 = G__27815;
chunk__27808 = G__27816;
count__27809 = G__27817;
i__27810 = G__27818;
continue;
} else {
var obj = cljs.core.first(seq__27807__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__27819 = cljs.core.next(seq__27807__$1);
var G__27820 = null;
var G__27821 = (0);
var G__27822 = (0);
seq__27807 = G__27819;
chunk__27808 = G__27820;
count__27809 = G__27821;
i__27810 = G__27822;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27823__i = 0, G__27823__a = new Array(arguments.length -  0);
while (G__27823__i < G__27823__a.length) {G__27823__a[G__27823__i] = arguments[G__27823__i + 0]; ++G__27823__i;}
  objs = new cljs.core.IndexedSeq(G__27823__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__27824){
var objs = cljs.core.seq(arglist__27824);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27825__i = 0, G__27825__a = new Array(arguments.length -  0);
while (G__27825__i < G__27825__a.length) {G__27825__a[G__27825__i] = arguments[G__27825__i + 0]; ++G__27825__i;}
  objs = new cljs.core.IndexedSeq(G__27825__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__27826){
var objs = cljs.core.seq(arglist__27826);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27827__i = 0, G__27827__a = new Array(arguments.length -  0);
while (G__27827__i < G__27827__a.length) {G__27827__a[G__27827__i] = arguments[G__27827__i + 0]; ++G__27827__i;}
  objs = new cljs.core.IndexedSeq(G__27827__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__27828){
var objs = cljs.core.seq(arglist__27828);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27829__i = 0, G__27829__a = new Array(arguments.length -  0);
while (G__27829__i < G__27829__a.length) {G__27829__a[G__27829__i] = arguments[G__27829__i + 0]; ++G__27829__i;}
  objs = new cljs.core.IndexedSeq(G__27829__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__27830){
var objs = cljs.core.seq(arglist__27830);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27831__i = 0, G__27831__a = new Array(arguments.length -  0);
while (G__27831__i < G__27831__a.length) {G__27831__a[G__27831__i] = arguments[G__27831__i + 0]; ++G__27831__i;}
  objs = new cljs.core.IndexedSeq(G__27831__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__27832){
var objs = cljs.core.seq(arglist__27832);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27833__i = 0, G__27833__a = new Array(arguments.length -  0);
while (G__27833__i < G__27833__a.length) {G__27833__a[G__27833__i] = arguments[G__27833__i + 0]; ++G__27833__i;}
  objs = new cljs.core.IndexedSeq(G__27833__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__27834){
var objs = cljs.core.seq(arglist__27834);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27835__i = 0, G__27835__a = new Array(arguments.length -  0);
while (G__27835__i < G__27835__a.length) {G__27835__a[G__27835__i] = arguments[G__27835__i + 0]; ++G__27835__i;}
  objs = new cljs.core.IndexedSeq(G__27835__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__27836){
var objs = cljs.core.seq(arglist__27836);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__27837__i = 0, G__27837__a = new Array(arguments.length -  0);
while (G__27837__i < G__27837__a.length) {G__27837__a[G__27837__i] = arguments[G__27837__i + 0]; ++G__27837__i;}
  objs = new cljs.core.IndexedSeq(G__27837__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__27838){
var objs = cljs.core.seq(arglist__27838);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__27845_27851 = cljs.core.key(e);
var G__27846_27852 = w;
var G__27847_27853 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27845_27851,G__27846_27852,G__27847_27853) : print_one.call(null,G__27845_27851,G__27846_27852,G__27847_27853));

cljs.core._write(w," ");

var G__27848 = cljs.core.val(e);
var G__27849 = w;
var G__27850 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__27848,G__27849,G__27850) : print_one.call(null,G__27848,G__27849,G__27850));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__27854__i = 0, G__27854__a = new Array(arguments.length -  2);
while (G__27854__i < G__27854__a.length) {G__27854__a[G__27854__i] = arguments[G__27854__i + 2]; ++G__27854__i;}
  args = new cljs.core.IndexedSeq(G__27854__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__27855){
var iref = cljs.core.first(arglist__27855);
arglist__27855 = cljs.core.next(arglist__27855);
var f = cljs.core.first(arglist__27855);
var args = cljs.core.rest(arglist__27855);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__27858 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__27858) : cljs.core.atom.call(null,G__27858));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__27860 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27860) : cljs.core.deref.call(null,G__27860));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__27861_SHARP_,p2__27862_SHARP_){
var ret = (function (){var G__27865 = p1__27861_SHARP_;
var G__27866 = p2__27862_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27865,G__27866) : rf.call(null,G__27865,G__27866));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__27869 = null;
var G__27869__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27869__1 = (function (result){
var G__27868 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27868) : rf.call(null,G__27868));
});
var G__27869__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__27869 = function(result,input){
switch(arguments.length){
case 0:
return G__27869__0.call(this);
case 1:
return G__27869__1.call(this,result);
case 2:
return G__27869__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27869.cljs$core$IFn$_invoke$arity$0 = G__27869__0;
G__27869.cljs$core$IFn$_invoke$arity$1 = G__27869__1;
G__27869.cljs$core$IFn$_invoke$arity$2 = G__27869__2;
return G__27869;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__27878 = null;
var G__27878__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__27878__1 = (function (result){
var G__27874 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__27874) : rf.call(null,G__27874));
});
var G__27878__2 = (function (result,input){
var prior = (function (){var G__27875 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__27875) : cljs.core.deref.call(null,G__27875));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__27876 = result;
var G__27877 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__27876,G__27877) : rf.call(null,G__27876,G__27877));
}
});
G__27878 = function(result,input){
switch(arguments.length){
case 0:
return G__27878__0.call(this);
case 1:
return G__27878__1.call(this,result);
case 2:
return G__27878__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27878.cljs$core$IFn$_invoke$arity$0 = G__27878__0;
G__27878.cljs$core$IFn$_invoke$arity$1 = G__27878__1;
G__27878.cljs$core$IFn$_invoke$arity$2 = G__27878__2;
return G__27878;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__16636__auto__ = this;
return cljs.core.es6_iterator(this__16636__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__27880_SHARP_,p2__27879_SHARP_){
var G__27882 = p2__27879_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__27882) : proc.call(null,G__27882));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj27884 = {};
return obj27884;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._clj__GT_js[(function (){var G__27888 = x__16302__auto__;
return goog.typeOf(G__27888);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._key__GT_js[(function (){var G__27892 = x__16302__auto__;
return goog.typeOf(G__27892);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__27895 = k;
if(G__27895){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__27895.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27895.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27895);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27895);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__27896 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__27896) : cljs.core.clj__GT_js.call(null,G__27896));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__27912 = x;
if(G__27912){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__27912.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__27912.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27912);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__27912);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj27914 = {};
return obj27914;
})();
var seq__27915_27925 = cljs.core.seq(x);
var chunk__27916_27926 = null;
var count__27917_27927 = (0);
var i__27918_27928 = (0);
while(true){
if((i__27918_27928 < count__27917_27927)){
var vec__27919_27929 = chunk__27916_27926.cljs$core$IIndexed$_nth$arity$2(null,i__27918_27928);
var k_27930 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27919_27929,(0),null);
var v_27931 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27919_27929,(1),null);
(m[cljs.core.key__GT_js(k_27930)] = clj__GT_js(v_27931));

var G__27932 = seq__27915_27925;
var G__27933 = chunk__27916_27926;
var G__27934 = count__27917_27927;
var G__27935 = (i__27918_27928 + (1));
seq__27915_27925 = G__27932;
chunk__27916_27926 = G__27933;
count__27917_27927 = G__27934;
i__27918_27928 = G__27935;
continue;
} else {
var temp__4126__auto___27936 = cljs.core.seq(seq__27915_27925);
if(temp__4126__auto___27936){
var seq__27915_27937__$1 = temp__4126__auto___27936;
if(cljs.core.chunked_seq_QMARK_(seq__27915_27937__$1)){
var c__16445__auto___27938 = cljs.core.chunk_first(seq__27915_27937__$1);
var G__27939 = cljs.core.chunk_rest(seq__27915_27937__$1);
var G__27940 = c__16445__auto___27938;
var G__27941 = cljs.core.count(c__16445__auto___27938);
var G__27942 = (0);
seq__27915_27925 = G__27939;
chunk__27916_27926 = G__27940;
count__27917_27927 = G__27941;
i__27918_27928 = G__27942;
continue;
} else {
var vec__27920_27943 = cljs.core.first(seq__27915_27937__$1);
var k_27944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27920_27943,(0),null);
var v_27945 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__27920_27943,(1),null);
(m[cljs.core.key__GT_js(k_27944)] = clj__GT_js(v_27945));

var G__27946 = cljs.core.next(seq__27915_27937__$1);
var G__27947 = null;
var G__27948 = (0);
var G__27949 = (0);
seq__27915_27925 = G__27946;
chunk__27916_27926 = G__27947;
count__27917_27927 = G__27948;
i__27918_27928 = G__27949;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__27921_27950 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__27922_27951 = null;
var count__27923_27952 = (0);
var i__27924_27953 = (0);
while(true){
if((i__27924_27953 < count__27923_27952)){
var x_27954__$1 = chunk__27922_27951.cljs$core$IIndexed$_nth$arity$2(null,i__27924_27953);
arr.push(x_27954__$1);

var G__27955 = seq__27921_27950;
var G__27956 = chunk__27922_27951;
var G__27957 = count__27923_27952;
var G__27958 = (i__27924_27953 + (1));
seq__27921_27950 = G__27955;
chunk__27922_27951 = G__27956;
count__27923_27952 = G__27957;
i__27924_27953 = G__27958;
continue;
} else {
var temp__4126__auto___27959 = cljs.core.seq(seq__27921_27950);
if(temp__4126__auto___27959){
var seq__27921_27960__$1 = temp__4126__auto___27959;
if(cljs.core.chunked_seq_QMARK_(seq__27921_27960__$1)){
var c__16445__auto___27961 = cljs.core.chunk_first(seq__27921_27960__$1);
var G__27962 = cljs.core.chunk_rest(seq__27921_27960__$1);
var G__27963 = c__16445__auto___27961;
var G__27964 = cljs.core.count(c__16445__auto___27961);
var G__27965 = (0);
seq__27921_27950 = G__27962;
chunk__27922_27951 = G__27963;
count__27923_27952 = G__27964;
i__27924_27953 = G__27965;
continue;
} else {
var x_27966__$1 = cljs.core.first(seq__27921_27960__$1);
arr.push(x_27966__$1);

var G__27967 = cljs.core.next(seq__27921_27960__$1);
var G__27968 = null;
var G__27969 = (0);
var G__27970 = (0);
seq__27921_27950 = G__27967;
chunk__27922_27951 = G__27968;
count__27923_27952 = G__27969;
i__27924_27953 = G__27970;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj27972 = {};
return obj27972;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__15646__auto__ = x;
if(and__15646__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__15646__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__16302__auto__ = (((x == null))?null:x);
return (function (){var or__15658__auto__ = (cljs.core._js__GT_clj[(function (){var G__27976 = x__16302__auto__;
return goog.typeOf(G__27976);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__28033__delegate = function (x,opts){
var map__28006 = opts;
var map__28006__$1 = ((cljs.core.seq_QMARK_(map__28006))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28006):map__28006);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28006__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__28006,map__28006__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__28022 = x__$1;
if(G__28022){
var bit__16339__auto__ = null;
if(cljs.core.truth_((function (){var or__15658__auto__ = bit__16339__auto__;
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return G__28022.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__28022.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28022);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__28022);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__16414__auto__ = ((function (map__28006,map__28006__$1,keywordize_keys,keyfn){
return (function iter__28023(s__28024){
return (new cljs.core.LazySeq(null,((function (map__28006,map__28006__$1,keywordize_keys,keyfn){
return (function (){
var s__28024__$1 = s__28024;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__28024__$1);
if(temp__4126__auto__){
var s__28024__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__28024__$2)){
var c__16412__auto__ = cljs.core.chunk_first(s__28024__$2);
var size__16413__auto__ = cljs.core.count(c__16412__auto__);
var b__28026 = cljs.core.chunk_buffer(size__16413__auto__);
if((function (){var i__28025 = (0);
while(true){
if((i__28025 < size__16413__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__16412__auto__,i__28025);
cljs.core.chunk_append(b__28026,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28031 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28031) : keyfn.call(null,G__28031));
})(),thisfn((x__$1[k]))], null));

var G__28034 = (i__28025 + (1));
i__28025 = G__28034;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__28026),iter__28023(cljs.core.chunk_rest(s__28024__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__28026),null);
}
} else {
var k = cljs.core.first(s__28024__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__28032 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__28032) : keyfn.call(null,G__28032));
})(),thisfn((x__$1[k]))], null),iter__28023(cljs.core.rest(s__28024__$2)));
}
} else {
return null;
}
break;
}
});})(map__28006,map__28006__$1,keywordize_keys,keyfn))
,null,null));
});})(map__28006,map__28006__$1,keywordize_keys,keyfn))
;
return iter__16414__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__28006,map__28006__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__28033 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__28035__i = 0, G__28035__a = new Array(arguments.length -  1);
while (G__28035__i < G__28035__a.length) {G__28035__a[G__28035__i] = arguments[G__28035__i + 1]; ++G__28035__i;}
  opts = new cljs.core.IndexedSeq(G__28035__a,0);
} 
return G__28033__delegate.call(this,x,opts);};
G__28033.cljs$lang$maxFixedArity = 1;
G__28033.cljs$lang$applyTo = (function (arglist__28036){
var x = cljs.core.first(arglist__28036);
var opts = cljs.core.rest(arglist__28036);
return G__28033__delegate(x,opts);
});
G__28033.cljs$core$IFn$_invoke$arity$variadic = G__28033__delegate;
return G__28033;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__28037 = null;
if (arguments.length > 1) {
var G__28038__i = 0, G__28038__a = new Array(arguments.length -  1);
while (G__28038__i < G__28038__a.length) {G__28038__a[G__28038__i] = arguments[G__28038__i + 1]; ++G__28038__i;}
G__28037 = new cljs.core.IndexedSeq(G__28038__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__28037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__28041 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28041) : cljs.core.atom.call(null,G__28041));
})();
return ((function (mem){
return (function() { 
var G__28043__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__28042 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28042) : cljs.core.deref.call(null,G__28042));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__28043 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__28044__i = 0, G__28044__a = new Array(arguments.length -  0);
while (G__28044__i < G__28044__a.length) {G__28044__a[G__28044__i] = arguments[G__28044__i + 0]; ++G__28044__i;}
  args = new cljs.core.IndexedSeq(G__28044__a,0);
} 
return G__28043__delegate.call(this,args);};
G__28043.cljs$lang$maxFixedArity = 0;
G__28043.cljs$lang$applyTo = (function (arglist__28045){
var args = cljs.core.seq(arglist__28045);
return G__28043__delegate(args);
});
G__28043.cljs$core$IFn$_invoke$arity$variadic = G__28043__delegate;
return G__28043;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__28047 = ret;
f = G__28047;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__28048__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__28048 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28049__i = 0, G__28049__a = new Array(arguments.length -  1);
while (G__28049__i < G__28049__a.length) {G__28049__a[G__28049__i] = arguments[G__28049__i + 1]; ++G__28049__i;}
  args = new cljs.core.IndexedSeq(G__28049__a,0);
} 
return G__28048__delegate.call(this,f,args);};
G__28048.cljs$lang$maxFixedArity = 1;
G__28048.cljs$lang$applyTo = (function (arglist__28050){
var f = cljs.core.first(arglist__28050);
var args = cljs.core.rest(arglist__28050);
return G__28048__delegate(f,args);
});
G__28048.cljs$core$IFn$_invoke$arity$variadic = G__28048__delegate;
return G__28048;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__28051 = null;
if (arguments.length > 1) {
var G__28052__i = 0, G__28052__a = new Array(arguments.length -  1);
while (G__28052__i < G__28052__a.length) {G__28052__a[G__28052__i] = arguments[G__28052__i + 1]; ++G__28052__i;}
G__28051 = new cljs.core.IndexedSeq(G__28052__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__28051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__28055 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__28055) : Math.floor.call(null,G__28055));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__28057 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__28057) : f.call(null,G__28057));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__28059 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__28059) : cljs.core.atom.call(null,G__28059));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__28060__i = 0, G__28060__a = new Array(arguments.length -  1);
while (G__28060__i < G__28060__a.length) {G__28060__a[G__28060__i] = arguments[G__28060__i + 1]; ++G__28060__i;}
  args = new cljs.core.IndexedSeq(G__28060__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__28061){
var f = cljs.core.first(arglist__28061);
var args = cljs.core.rest(arglist__28061);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28126 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28126) : cljs.core.deref.call(null,G__28126));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__15658__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
var and__15646__auto__ = cljs.core.vector_QMARK_(parent);
if(and__15646__auto__){
var and__15646__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__15646__auto____$1){
var and__15646__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__15646__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__28151 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__28149 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__28149) : child.call(null,G__28149));
})(),(function (){var G__28150 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__28150) : parent.call(null,G__28150));
})());
var G__28152 = (i + (1));
ret = G__28151;
i = G__28152;
continue;
}
break;
}
} else {
return and__15646__auto____$2;
}
} else {
return and__15646__auto____$1;
}
} else {
return and__15646__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__28156 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28156) : cljs.core.deref.call(null,G__28156));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__28160 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28160) : cljs.core.deref.call(null,G__28160));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__28164 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28164) : cljs.core.deref.call(null,G__28164));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__28173 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__28173) : targets.call(null,G__28173));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__28174 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__28174) : sources.call(null,G__28174));
})()));
});})(tp,td,ta))
;
var or__15658__auto__ = ((cljs.core.contains_QMARK_((function (){var G__28178 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__28178) : tp.call(null,G__28178));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__28179 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28179) : ta.call(null,G__28179));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__28180 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__28180) : ta.call(null,G__28180));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__28187 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28187) : parentMap.call(null,G__28187));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__28188 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28188) : parentMap.call(null,G__28188));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__28181_SHARP_){
return cljs.core.cons(cljs.core.first(p1__28181_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__28181_SHARP_),cljs.core.second(p1__28181_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__28189 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__28189) : parentMap.call(null,G__28189));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__28182_SHARP_,p2__28183_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__28182_SHARP_,p2__28183_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__28192 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28192) : cljs.core.deref.call(null,G__28192));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__28193 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28193) : cljs.core.deref.call(null,G__28193));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__28209 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28209) : cljs.core.deref.call(null,G__28209));
})().call(null,x);
var or__15658__auto__ = (cljs.core.truth_((function (){var and__15646__auto__ = xprefs;
if(cljs.core.truth_(and__15646__auto__)){
var G__28211 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__28211) : xprefs.call(null,G__28211));
} else {
return and__15646__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__28212 = cljs.core.rest(ps);
ps = G__28212;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15658__auto____$1)){
return or__15658__auto____$1;
} else {
var or__15658__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__28213 = cljs.core.rest(ps);
ps = G__28213;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__15658__auto____$2)){
return or__15658__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__15658__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__15658__auto__)){
return or__15658__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__28227){
var vec__28228 = p__28227;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28228,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28228,(1),null);
var e = vec__28228;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__28229 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28229) : cljs.core.deref.call(null,G__28229));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__15658__auto__ = (be == null);
if(or__15658__auto__){
return or__15658__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__28230 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28230) : cljs.core.deref.call(null,G__28230));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28231 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28231) : cljs.core.deref.call(null,G__28231));
})(),(function (){var G__28232 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28232) : cljs.core.deref.call(null,G__28232));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj28234 = {};
return obj28234;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._reset[(function (){var G__28238 = x__16302__auto__;
return goog.typeOf(G__28238);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._reset["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._add_method[(function (){var G__28242 = x__16302__auto__;
return goog.typeOf(G__28242);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._add_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._remove_method[(function (){var G__28246 = x__16302__auto__;
return goog.typeOf(G__28246);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._remove_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._prefer_method[(function (){var G__28250 = x__16302__auto__;
return goog.typeOf(G__28250);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._get_method[(function (){var G__28254 = x__16302__auto__;
return goog.typeOf(G__28254);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._get_method["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._methods[(function (){var G__28258 = x__16302__auto__;
return goog.typeOf(G__28258);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._methods["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__15646__auto__ = mf;
if(and__15646__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__15646__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__16302__auto__ = (((mf == null))?null:mf);
return (function (){var or__15658__auto__ = (cljs.core._prefers[(function (){var G__28262 = x__16302__auto__;
return goog.typeOf(G__28262);
})()]);
if(or__15658__auto__){
return or__15658__auto__;
} else {
var or__15658__auto____$1 = (cljs.core._prefers["_"]);
if(or__15658__auto____$1){
return or__15658__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__28264 = this$__$1;
return goog.getUid(G__28264);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__28265 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28265) : cljs.core.deref.call(null,G__28265));
})(),(function (){var G__28266 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28266) : cljs.core.deref.call(null,G__28266));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__28267 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28267) : cljs.core.deref.call(null,G__28267));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__28268 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28268) : cljs.core.deref.call(null,G__28268));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28269 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28269) : cljs.core.deref.call(null,G__28269));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__28270 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__28270) : cljs.core.deref.call(null,G__28270));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__29111 = null;
var G__29111__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__29111__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28271 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28271) : self__.dispatch_fn.call(null,G__28271));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28272 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28272) : target_fn.call(null,G__28272));
});
var G__29111__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28273 = a;
var G__28274 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28273,G__28274) : self__.dispatch_fn.call(null,G__28273,G__28274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28275 = a;
var G__28276 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28275,G__28276) : target_fn.call(null,G__28275,G__28276));
});
var G__29111__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28277 = a;
var G__28278 = b;
var G__28279 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28277,G__28278,G__28279) : self__.dispatch_fn.call(null,G__28277,G__28278,G__28279));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28280 = a;
var G__28281 = b;
var G__28282 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28280,G__28281,G__28282) : target_fn.call(null,G__28280,G__28281,G__28282));
});
var G__29111__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28283 = a;
var G__28284 = b;
var G__28285 = c;
var G__28286 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28283,G__28284,G__28285,G__28286) : self__.dispatch_fn.call(null,G__28283,G__28284,G__28285,G__28286));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28287 = a;
var G__28288 = b;
var G__28289 = c;
var G__28290 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28287,G__28288,G__28289,G__28290) : target_fn.call(null,G__28287,G__28288,G__28289,G__28290));
});
var G__29111__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28291 = a;
var G__28292 = b;
var G__28293 = c;
var G__28294 = d;
var G__28295 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28291,G__28292,G__28293,G__28294,G__28295) : self__.dispatch_fn.call(null,G__28291,G__28292,G__28293,G__28294,G__28295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28296 = a;
var G__28297 = b;
var G__28298 = c;
var G__28299 = d;
var G__28300 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28296,G__28297,G__28298,G__28299,G__28300) : target_fn.call(null,G__28296,G__28297,G__28298,G__28299,G__28300));
});
var G__29111__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28301 = a;
var G__28302 = b;
var G__28303 = c;
var G__28304 = d;
var G__28305 = e;
var G__28306 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28301,G__28302,G__28303,G__28304,G__28305,G__28306) : self__.dispatch_fn.call(null,G__28301,G__28302,G__28303,G__28304,G__28305,G__28306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28307 = a;
var G__28308 = b;
var G__28309 = c;
var G__28310 = d;
var G__28311 = e;
var G__28312 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28307,G__28308,G__28309,G__28310,G__28311,G__28312) : target_fn.call(null,G__28307,G__28308,G__28309,G__28310,G__28311,G__28312));
});
var G__29111__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28313 = a;
var G__28314 = b;
var G__28315 = c;
var G__28316 = d;
var G__28317 = e;
var G__28318 = f;
var G__28319 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319) : self__.dispatch_fn.call(null,G__28313,G__28314,G__28315,G__28316,G__28317,G__28318,G__28319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28320 = a;
var G__28321 = b;
var G__28322 = c;
var G__28323 = d;
var G__28324 = e;
var G__28325 = f;
var G__28326 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326) : target_fn.call(null,G__28320,G__28321,G__28322,G__28323,G__28324,G__28325,G__28326));
});
var G__29111__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28327 = a;
var G__28328 = b;
var G__28329 = c;
var G__28330 = d;
var G__28331 = e;
var G__28332 = f;
var G__28333 = g;
var G__28334 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334) : self__.dispatch_fn.call(null,G__28327,G__28328,G__28329,G__28330,G__28331,G__28332,G__28333,G__28334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28335 = a;
var G__28336 = b;
var G__28337 = c;
var G__28338 = d;
var G__28339 = e;
var G__28340 = f;
var G__28341 = g;
var G__28342 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342) : target_fn.call(null,G__28335,G__28336,G__28337,G__28338,G__28339,G__28340,G__28341,G__28342));
});
var G__29111__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28343 = a;
var G__28344 = b;
var G__28345 = c;
var G__28346 = d;
var G__28347 = e;
var G__28348 = f;
var G__28349 = g;
var G__28350 = h;
var G__28351 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351) : self__.dispatch_fn.call(null,G__28343,G__28344,G__28345,G__28346,G__28347,G__28348,G__28349,G__28350,G__28351));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28352 = a;
var G__28353 = b;
var G__28354 = c;
var G__28355 = d;
var G__28356 = e;
var G__28357 = f;
var G__28358 = g;
var G__28359 = h;
var G__28360 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360) : target_fn.call(null,G__28352,G__28353,G__28354,G__28355,G__28356,G__28357,G__28358,G__28359,G__28360));
});
var G__29111__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28361 = a;
var G__28362 = b;
var G__28363 = c;
var G__28364 = d;
var G__28365 = e;
var G__28366 = f;
var G__28367 = g;
var G__28368 = h;
var G__28369 = i;
var G__28370 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370) : self__.dispatch_fn.call(null,G__28361,G__28362,G__28363,G__28364,G__28365,G__28366,G__28367,G__28368,G__28369,G__28370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28371 = a;
var G__28372 = b;
var G__28373 = c;
var G__28374 = d;
var G__28375 = e;
var G__28376 = f;
var G__28377 = g;
var G__28378 = h;
var G__28379 = i;
var G__28380 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380) : target_fn.call(null,G__28371,G__28372,G__28373,G__28374,G__28375,G__28376,G__28377,G__28378,G__28379,G__28380));
});
var G__29111__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28381 = a;
var G__28382 = b;
var G__28383 = c;
var G__28384 = d;
var G__28385 = e;
var G__28386 = f;
var G__28387 = g;
var G__28388 = h;
var G__28389 = i;
var G__28390 = j;
var G__28391 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391) : self__.dispatch_fn.call(null,G__28381,G__28382,G__28383,G__28384,G__28385,G__28386,G__28387,G__28388,G__28389,G__28390,G__28391));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28392 = a;
var G__28393 = b;
var G__28394 = c;
var G__28395 = d;
var G__28396 = e;
var G__28397 = f;
var G__28398 = g;
var G__28399 = h;
var G__28400 = i;
var G__28401 = j;
var G__28402 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402) : target_fn.call(null,G__28392,G__28393,G__28394,G__28395,G__28396,G__28397,G__28398,G__28399,G__28400,G__28401,G__28402));
});
var G__29111__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28403 = a;
var G__28404 = b;
var G__28405 = c;
var G__28406 = d;
var G__28407 = e;
var G__28408 = f;
var G__28409 = g;
var G__28410 = h;
var G__28411 = i;
var G__28412 = j;
var G__28413 = k;
var G__28414 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414) : self__.dispatch_fn.call(null,G__28403,G__28404,G__28405,G__28406,G__28407,G__28408,G__28409,G__28410,G__28411,G__28412,G__28413,G__28414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28415 = a;
var G__28416 = b;
var G__28417 = c;
var G__28418 = d;
var G__28419 = e;
var G__28420 = f;
var G__28421 = g;
var G__28422 = h;
var G__28423 = i;
var G__28424 = j;
var G__28425 = k;
var G__28426 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28415,G__28416,G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426) : target_fn.call(null,G__28415,G__28416,G__28417,G__28418,G__28419,G__28420,G__28421,G__28422,G__28423,G__28424,G__28425,G__28426));
});
var G__29111__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28427 = a;
var G__28428 = b;
var G__28429 = c;
var G__28430 = d;
var G__28431 = e;
var G__28432 = f;
var G__28433 = g;
var G__28434 = h;
var G__28435 = i;
var G__28436 = j;
var G__28437 = k;
var G__28438 = l;
var G__28439 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439) : self__.dispatch_fn.call(null,G__28427,G__28428,G__28429,G__28430,G__28431,G__28432,G__28433,G__28434,G__28435,G__28436,G__28437,G__28438,G__28439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28440 = a;
var G__28441 = b;
var G__28442 = c;
var G__28443 = d;
var G__28444 = e;
var G__28445 = f;
var G__28446 = g;
var G__28447 = h;
var G__28448 = i;
var G__28449 = j;
var G__28450 = k;
var G__28451 = l;
var G__28452 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450,G__28451,G__28452) : target_fn.call(null,G__28440,G__28441,G__28442,G__28443,G__28444,G__28445,G__28446,G__28447,G__28448,G__28449,G__28450,G__28451,G__28452));
});
var G__29111__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28453 = a;
var G__28454 = b;
var G__28455 = c;
var G__28456 = d;
var G__28457 = e;
var G__28458 = f;
var G__28459 = g;
var G__28460 = h;
var G__28461 = i;
var G__28462 = j;
var G__28463 = k;
var G__28464 = l;
var G__28465 = m;
var G__28466 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466) : self__.dispatch_fn.call(null,G__28453,G__28454,G__28455,G__28456,G__28457,G__28458,G__28459,G__28460,G__28461,G__28462,G__28463,G__28464,G__28465,G__28466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28467 = a;
var G__28468 = b;
var G__28469 = c;
var G__28470 = d;
var G__28471 = e;
var G__28472 = f;
var G__28473 = g;
var G__28474 = h;
var G__28475 = i;
var G__28476 = j;
var G__28477 = k;
var G__28478 = l;
var G__28479 = m;
var G__28480 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28467,G__28468,G__28469,G__28470,G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480) : target_fn.call(null,G__28467,G__28468,G__28469,G__28470,G__28471,G__28472,G__28473,G__28474,G__28475,G__28476,G__28477,G__28478,G__28479,G__28480));
});
var G__29111__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28481 = a;
var G__28482 = b;
var G__28483 = c;
var G__28484 = d;
var G__28485 = e;
var G__28486 = f;
var G__28487 = g;
var G__28488 = h;
var G__28489 = i;
var G__28490 = j;
var G__28491 = k;
var G__28492 = l;
var G__28493 = m;
var G__28494 = n;
var G__28495 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495) : self__.dispatch_fn.call(null,G__28481,G__28482,G__28483,G__28484,G__28485,G__28486,G__28487,G__28488,G__28489,G__28490,G__28491,G__28492,G__28493,G__28494,G__28495));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28496 = a;
var G__28497 = b;
var G__28498 = c;
var G__28499 = d;
var G__28500 = e;
var G__28501 = f;
var G__28502 = g;
var G__28503 = h;
var G__28504 = i;
var G__28505 = j;
var G__28506 = k;
var G__28507 = l;
var G__28508 = m;
var G__28509 = n;
var G__28510 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508,G__28509,G__28510) : target_fn.call(null,G__28496,G__28497,G__28498,G__28499,G__28500,G__28501,G__28502,G__28503,G__28504,G__28505,G__28506,G__28507,G__28508,G__28509,G__28510));
});
var G__29111__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28511 = a;
var G__28512 = b;
var G__28513 = c;
var G__28514 = d;
var G__28515 = e;
var G__28516 = f;
var G__28517 = g;
var G__28518 = h;
var G__28519 = i;
var G__28520 = j;
var G__28521 = k;
var G__28522 = l;
var G__28523 = m;
var G__28524 = n;
var G__28525 = o;
var G__28526 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526) : self__.dispatch_fn.call(null,G__28511,G__28512,G__28513,G__28514,G__28515,G__28516,G__28517,G__28518,G__28519,G__28520,G__28521,G__28522,G__28523,G__28524,G__28525,G__28526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28527 = a;
var G__28528 = b;
var G__28529 = c;
var G__28530 = d;
var G__28531 = e;
var G__28532 = f;
var G__28533 = g;
var G__28534 = h;
var G__28535 = i;
var G__28536 = j;
var G__28537 = k;
var G__28538 = l;
var G__28539 = m;
var G__28540 = n;
var G__28541 = o;
var G__28542 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28527,G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542) : target_fn.call(null,G__28527,G__28528,G__28529,G__28530,G__28531,G__28532,G__28533,G__28534,G__28535,G__28536,G__28537,G__28538,G__28539,G__28540,G__28541,G__28542));
});
var G__29111__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28543 = a;
var G__28544 = b;
var G__28545 = c;
var G__28546 = d;
var G__28547 = e;
var G__28548 = f;
var G__28549 = g;
var G__28550 = h;
var G__28551 = i;
var G__28552 = j;
var G__28553 = k;
var G__28554 = l;
var G__28555 = m;
var G__28556 = n;
var G__28557 = o;
var G__28558 = p;
var G__28559 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558,G__28559) : self__.dispatch_fn.call(null,G__28543,G__28544,G__28545,G__28546,G__28547,G__28548,G__28549,G__28550,G__28551,G__28552,G__28553,G__28554,G__28555,G__28556,G__28557,G__28558,G__28559));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28560 = a;
var G__28561 = b;
var G__28562 = c;
var G__28563 = d;
var G__28564 = e;
var G__28565 = f;
var G__28566 = g;
var G__28567 = h;
var G__28568 = i;
var G__28569 = j;
var G__28570 = k;
var G__28571 = l;
var G__28572 = m;
var G__28573 = n;
var G__28574 = o;
var G__28575 = p;
var G__28576 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28560,G__28561,G__28562,G__28563,G__28564,G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576) : target_fn.call(null,G__28560,G__28561,G__28562,G__28563,G__28564,G__28565,G__28566,G__28567,G__28568,G__28569,G__28570,G__28571,G__28572,G__28573,G__28574,G__28575,G__28576));
});
var G__29111__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28577 = a;
var G__28578 = b;
var G__28579 = c;
var G__28580 = d;
var G__28581 = e;
var G__28582 = f;
var G__28583 = g;
var G__28584 = h;
var G__28585 = i;
var G__28586 = j;
var G__28587 = k;
var G__28588 = l;
var G__28589 = m;
var G__28590 = n;
var G__28591 = o;
var G__28592 = p;
var G__28593 = q;
var G__28594 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28577,G__28578,G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594) : self__.dispatch_fn.call(null,G__28577,G__28578,G__28579,G__28580,G__28581,G__28582,G__28583,G__28584,G__28585,G__28586,G__28587,G__28588,G__28589,G__28590,G__28591,G__28592,G__28593,G__28594));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28595 = a;
var G__28596 = b;
var G__28597 = c;
var G__28598 = d;
var G__28599 = e;
var G__28600 = f;
var G__28601 = g;
var G__28602 = h;
var G__28603 = i;
var G__28604 = j;
var G__28605 = k;
var G__28606 = l;
var G__28607 = m;
var G__28608 = n;
var G__28609 = o;
var G__28610 = p;
var G__28611 = q;
var G__28612 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__28595,G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611,G__28612) : target_fn.call(null,G__28595,G__28596,G__28597,G__28598,G__28599,G__28600,G__28601,G__28602,G__28603,G__28604,G__28605,G__28606,G__28607,G__28608,G__28609,G__28610,G__28611,G__28612));
});
var G__29111__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28613 = a;
var G__28614 = b;
var G__28615 = c;
var G__28616 = d;
var G__28617 = e;
var G__28618 = f;
var G__28619 = g;
var G__28620 = h;
var G__28621 = i;
var G__28622 = j;
var G__28623 = k;
var G__28624 = l;
var G__28625 = m;
var G__28626 = n;
var G__28627 = o;
var G__28628 = p;
var G__28629 = q;
var G__28630 = r;
var G__28631 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631) : self__.dispatch_fn.call(null,G__28613,G__28614,G__28615,G__28616,G__28617,G__28618,G__28619,G__28620,G__28621,G__28622,G__28623,G__28624,G__28625,G__28626,G__28627,G__28628,G__28629,G__28630,G__28631));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28632 = a;
var G__28633 = b;
var G__28634 = c;
var G__28635 = d;
var G__28636 = e;
var G__28637 = f;
var G__28638 = g;
var G__28639 = h;
var G__28640 = i;
var G__28641 = j;
var G__28642 = k;
var G__28643 = l;
var G__28644 = m;
var G__28645 = n;
var G__28646 = o;
var G__28647 = p;
var G__28648 = q;
var G__28649 = r;
var G__28650 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650) : target_fn.call(null,G__28632,G__28633,G__28634,G__28635,G__28636,G__28637,G__28638,G__28639,G__28640,G__28641,G__28642,G__28643,G__28644,G__28645,G__28646,G__28647,G__28648,G__28649,G__28650));
});
var G__29111__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__28651 = a;
var G__28652 = b;
var G__28653 = c;
var G__28654 = d;
var G__28655 = e;
var G__28656 = f;
var G__28657 = g;
var G__28658 = h;
var G__28659 = i;
var G__28660 = j;
var G__28661 = k;
var G__28662 = l;
var G__28663 = m;
var G__28664 = n;
var G__28665 = o;
var G__28666 = p;
var G__28667 = q;
var G__28668 = r;
var G__28669 = s;
var G__28670 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670) : self__.dispatch_fn.call(null,G__28651,G__28652,G__28653,G__28654,G__28655,G__28656,G__28657,G__28658,G__28659,G__28660,G__28661,G__28662,G__28663,G__28664,G__28665,G__28666,G__28667,G__28668,G__28669,G__28670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28671 = a;
var G__28672 = b;
var G__28673 = c;
var G__28674 = d;
var G__28675 = e;
var G__28676 = f;
var G__28677 = g;
var G__28678 = h;
var G__28679 = i;
var G__28680 = j;
var G__28681 = k;
var G__28682 = l;
var G__28683 = m;
var G__28684 = n;
var G__28685 = o;
var G__28686 = p;
var G__28687 = q;
var G__28688 = r;
var G__28689 = s;
var G__28690 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690) : target_fn.call(null,G__28671,G__28672,G__28673,G__28674,G__28675,G__28676,G__28677,G__28678,G__28679,G__28680,G__28681,G__28682,G__28683,G__28684,G__28685,G__28686,G__28687,G__28688,G__28689,G__28690));
});
var G__29111__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__29111 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29111__1.call(this,self__);
case 2:
return G__29111__2.call(this,self__,a);
case 3:
return G__29111__3.call(this,self__,a,b);
case 4:
return G__29111__4.call(this,self__,a,b,c);
case 5:
return G__29111__5.call(this,self__,a,b,c,d);
case 6:
return G__29111__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29111__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29111__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29111__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29111__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29111__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29111__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29111__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29111__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29111__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29111__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29111__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29111__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29111__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29111__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29111__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29111__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29111.cljs$core$IFn$_invoke$arity$1 = G__29111__1;
G__29111.cljs$core$IFn$_invoke$arity$2 = G__29111__2;
G__29111.cljs$core$IFn$_invoke$arity$3 = G__29111__3;
G__29111.cljs$core$IFn$_invoke$arity$4 = G__29111__4;
G__29111.cljs$core$IFn$_invoke$arity$5 = G__29111__5;
G__29111.cljs$core$IFn$_invoke$arity$6 = G__29111__6;
G__29111.cljs$core$IFn$_invoke$arity$7 = G__29111__7;
G__29111.cljs$core$IFn$_invoke$arity$8 = G__29111__8;
G__29111.cljs$core$IFn$_invoke$arity$9 = G__29111__9;
G__29111.cljs$core$IFn$_invoke$arity$10 = G__29111__10;
G__29111.cljs$core$IFn$_invoke$arity$11 = G__29111__11;
G__29111.cljs$core$IFn$_invoke$arity$12 = G__29111__12;
G__29111.cljs$core$IFn$_invoke$arity$13 = G__29111__13;
G__29111.cljs$core$IFn$_invoke$arity$14 = G__29111__14;
G__29111.cljs$core$IFn$_invoke$arity$15 = G__29111__15;
G__29111.cljs$core$IFn$_invoke$arity$16 = G__29111__16;
G__29111.cljs$core$IFn$_invoke$arity$17 = G__29111__17;
G__29111.cljs$core$IFn$_invoke$arity$18 = G__29111__18;
G__29111.cljs$core$IFn$_invoke$arity$19 = G__29111__19;
G__29111.cljs$core$IFn$_invoke$arity$20 = G__29111__20;
G__29111.cljs$core$IFn$_invoke$arity$21 = G__29111__21;
G__29111.cljs$core$IFn$_invoke$arity$22 = G__29111__22;
return G__29111;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args28263){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args28263)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28691 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__28691) : self__.dispatch_fn.call(null,G__28691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28692 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__28692) : target_fn.call(null,G__28692));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28693 = a;
var G__28694 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__28693,G__28694) : self__.dispatch_fn.call(null,G__28693,G__28694));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28695 = a;
var G__28696 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__28695,G__28696) : target_fn.call(null,G__28695,G__28696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28697 = a;
var G__28698 = b;
var G__28699 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__28697,G__28698,G__28699) : self__.dispatch_fn.call(null,G__28697,G__28698,G__28699));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28700 = a;
var G__28701 = b;
var G__28702 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__28700,G__28701,G__28702) : target_fn.call(null,G__28700,G__28701,G__28702));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28703 = a;
var G__28704 = b;
var G__28705 = c;
var G__28706 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__28703,G__28704,G__28705,G__28706) : self__.dispatch_fn.call(null,G__28703,G__28704,G__28705,G__28706));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28707 = a;
var G__28708 = b;
var G__28709 = c;
var G__28710 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__28707,G__28708,G__28709,G__28710) : target_fn.call(null,G__28707,G__28708,G__28709,G__28710));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28711 = a;
var G__28712 = b;
var G__28713 = c;
var G__28714 = d;
var G__28715 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__28711,G__28712,G__28713,G__28714,G__28715) : self__.dispatch_fn.call(null,G__28711,G__28712,G__28713,G__28714,G__28715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28716 = a;
var G__28717 = b;
var G__28718 = c;
var G__28719 = d;
var G__28720 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__28716,G__28717,G__28718,G__28719,G__28720) : target_fn.call(null,G__28716,G__28717,G__28718,G__28719,G__28720));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28721 = a;
var G__28722 = b;
var G__28723 = c;
var G__28724 = d;
var G__28725 = e;
var G__28726 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__28721,G__28722,G__28723,G__28724,G__28725,G__28726) : self__.dispatch_fn.call(null,G__28721,G__28722,G__28723,G__28724,G__28725,G__28726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28727 = a;
var G__28728 = b;
var G__28729 = c;
var G__28730 = d;
var G__28731 = e;
var G__28732 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__28727,G__28728,G__28729,G__28730,G__28731,G__28732) : target_fn.call(null,G__28727,G__28728,G__28729,G__28730,G__28731,G__28732));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28733 = a;
var G__28734 = b;
var G__28735 = c;
var G__28736 = d;
var G__28737 = e;
var G__28738 = f;
var G__28739 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739) : self__.dispatch_fn.call(null,G__28733,G__28734,G__28735,G__28736,G__28737,G__28738,G__28739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28740 = a;
var G__28741 = b;
var G__28742 = c;
var G__28743 = d;
var G__28744 = e;
var G__28745 = f;
var G__28746 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746) : target_fn.call(null,G__28740,G__28741,G__28742,G__28743,G__28744,G__28745,G__28746));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28747 = a;
var G__28748 = b;
var G__28749 = c;
var G__28750 = d;
var G__28751 = e;
var G__28752 = f;
var G__28753 = g;
var G__28754 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754) : self__.dispatch_fn.call(null,G__28747,G__28748,G__28749,G__28750,G__28751,G__28752,G__28753,G__28754));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28755 = a;
var G__28756 = b;
var G__28757 = c;
var G__28758 = d;
var G__28759 = e;
var G__28760 = f;
var G__28761 = g;
var G__28762 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762) : target_fn.call(null,G__28755,G__28756,G__28757,G__28758,G__28759,G__28760,G__28761,G__28762));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28763 = a;
var G__28764 = b;
var G__28765 = c;
var G__28766 = d;
var G__28767 = e;
var G__28768 = f;
var G__28769 = g;
var G__28770 = h;
var G__28771 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771) : self__.dispatch_fn.call(null,G__28763,G__28764,G__28765,G__28766,G__28767,G__28768,G__28769,G__28770,G__28771));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28772 = a;
var G__28773 = b;
var G__28774 = c;
var G__28775 = d;
var G__28776 = e;
var G__28777 = f;
var G__28778 = g;
var G__28779 = h;
var G__28780 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780) : target_fn.call(null,G__28772,G__28773,G__28774,G__28775,G__28776,G__28777,G__28778,G__28779,G__28780));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28781 = a;
var G__28782 = b;
var G__28783 = c;
var G__28784 = d;
var G__28785 = e;
var G__28786 = f;
var G__28787 = g;
var G__28788 = h;
var G__28789 = i;
var G__28790 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790) : self__.dispatch_fn.call(null,G__28781,G__28782,G__28783,G__28784,G__28785,G__28786,G__28787,G__28788,G__28789,G__28790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28791 = a;
var G__28792 = b;
var G__28793 = c;
var G__28794 = d;
var G__28795 = e;
var G__28796 = f;
var G__28797 = g;
var G__28798 = h;
var G__28799 = i;
var G__28800 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800) : target_fn.call(null,G__28791,G__28792,G__28793,G__28794,G__28795,G__28796,G__28797,G__28798,G__28799,G__28800));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28801 = a;
var G__28802 = b;
var G__28803 = c;
var G__28804 = d;
var G__28805 = e;
var G__28806 = f;
var G__28807 = g;
var G__28808 = h;
var G__28809 = i;
var G__28810 = j;
var G__28811 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811) : self__.dispatch_fn.call(null,G__28801,G__28802,G__28803,G__28804,G__28805,G__28806,G__28807,G__28808,G__28809,G__28810,G__28811));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28812 = a;
var G__28813 = b;
var G__28814 = c;
var G__28815 = d;
var G__28816 = e;
var G__28817 = f;
var G__28818 = g;
var G__28819 = h;
var G__28820 = i;
var G__28821 = j;
var G__28822 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822) : target_fn.call(null,G__28812,G__28813,G__28814,G__28815,G__28816,G__28817,G__28818,G__28819,G__28820,G__28821,G__28822));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28823 = a;
var G__28824 = b;
var G__28825 = c;
var G__28826 = d;
var G__28827 = e;
var G__28828 = f;
var G__28829 = g;
var G__28830 = h;
var G__28831 = i;
var G__28832 = j;
var G__28833 = k;
var G__28834 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834) : self__.dispatch_fn.call(null,G__28823,G__28824,G__28825,G__28826,G__28827,G__28828,G__28829,G__28830,G__28831,G__28832,G__28833,G__28834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28835 = a;
var G__28836 = b;
var G__28837 = c;
var G__28838 = d;
var G__28839 = e;
var G__28840 = f;
var G__28841 = g;
var G__28842 = h;
var G__28843 = i;
var G__28844 = j;
var G__28845 = k;
var G__28846 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846) : target_fn.call(null,G__28835,G__28836,G__28837,G__28838,G__28839,G__28840,G__28841,G__28842,G__28843,G__28844,G__28845,G__28846));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28847 = a;
var G__28848 = b;
var G__28849 = c;
var G__28850 = d;
var G__28851 = e;
var G__28852 = f;
var G__28853 = g;
var G__28854 = h;
var G__28855 = i;
var G__28856 = j;
var G__28857 = k;
var G__28858 = l;
var G__28859 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859) : self__.dispatch_fn.call(null,G__28847,G__28848,G__28849,G__28850,G__28851,G__28852,G__28853,G__28854,G__28855,G__28856,G__28857,G__28858,G__28859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28860 = a;
var G__28861 = b;
var G__28862 = c;
var G__28863 = d;
var G__28864 = e;
var G__28865 = f;
var G__28866 = g;
var G__28867 = h;
var G__28868 = i;
var G__28869 = j;
var G__28870 = k;
var G__28871 = l;
var G__28872 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872) : target_fn.call(null,G__28860,G__28861,G__28862,G__28863,G__28864,G__28865,G__28866,G__28867,G__28868,G__28869,G__28870,G__28871,G__28872));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28873 = a;
var G__28874 = b;
var G__28875 = c;
var G__28876 = d;
var G__28877 = e;
var G__28878 = f;
var G__28879 = g;
var G__28880 = h;
var G__28881 = i;
var G__28882 = j;
var G__28883 = k;
var G__28884 = l;
var G__28885 = m;
var G__28886 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886) : self__.dispatch_fn.call(null,G__28873,G__28874,G__28875,G__28876,G__28877,G__28878,G__28879,G__28880,G__28881,G__28882,G__28883,G__28884,G__28885,G__28886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28887 = a;
var G__28888 = b;
var G__28889 = c;
var G__28890 = d;
var G__28891 = e;
var G__28892 = f;
var G__28893 = g;
var G__28894 = h;
var G__28895 = i;
var G__28896 = j;
var G__28897 = k;
var G__28898 = l;
var G__28899 = m;
var G__28900 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900) : target_fn.call(null,G__28887,G__28888,G__28889,G__28890,G__28891,G__28892,G__28893,G__28894,G__28895,G__28896,G__28897,G__28898,G__28899,G__28900));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28901 = a;
var G__28902 = b;
var G__28903 = c;
var G__28904 = d;
var G__28905 = e;
var G__28906 = f;
var G__28907 = g;
var G__28908 = h;
var G__28909 = i;
var G__28910 = j;
var G__28911 = k;
var G__28912 = l;
var G__28913 = m;
var G__28914 = n;
var G__28915 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915) : self__.dispatch_fn.call(null,G__28901,G__28902,G__28903,G__28904,G__28905,G__28906,G__28907,G__28908,G__28909,G__28910,G__28911,G__28912,G__28913,G__28914,G__28915));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28916 = a;
var G__28917 = b;
var G__28918 = c;
var G__28919 = d;
var G__28920 = e;
var G__28921 = f;
var G__28922 = g;
var G__28923 = h;
var G__28924 = i;
var G__28925 = j;
var G__28926 = k;
var G__28927 = l;
var G__28928 = m;
var G__28929 = n;
var G__28930 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930) : target_fn.call(null,G__28916,G__28917,G__28918,G__28919,G__28920,G__28921,G__28922,G__28923,G__28924,G__28925,G__28926,G__28927,G__28928,G__28929,G__28930));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28931 = a;
var G__28932 = b;
var G__28933 = c;
var G__28934 = d;
var G__28935 = e;
var G__28936 = f;
var G__28937 = g;
var G__28938 = h;
var G__28939 = i;
var G__28940 = j;
var G__28941 = k;
var G__28942 = l;
var G__28943 = m;
var G__28944 = n;
var G__28945 = o;
var G__28946 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946) : self__.dispatch_fn.call(null,G__28931,G__28932,G__28933,G__28934,G__28935,G__28936,G__28937,G__28938,G__28939,G__28940,G__28941,G__28942,G__28943,G__28944,G__28945,G__28946));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28947 = a;
var G__28948 = b;
var G__28949 = c;
var G__28950 = d;
var G__28951 = e;
var G__28952 = f;
var G__28953 = g;
var G__28954 = h;
var G__28955 = i;
var G__28956 = j;
var G__28957 = k;
var G__28958 = l;
var G__28959 = m;
var G__28960 = n;
var G__28961 = o;
var G__28962 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962) : target_fn.call(null,G__28947,G__28948,G__28949,G__28950,G__28951,G__28952,G__28953,G__28954,G__28955,G__28956,G__28957,G__28958,G__28959,G__28960,G__28961,G__28962));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28963 = a;
var G__28964 = b;
var G__28965 = c;
var G__28966 = d;
var G__28967 = e;
var G__28968 = f;
var G__28969 = g;
var G__28970 = h;
var G__28971 = i;
var G__28972 = j;
var G__28973 = k;
var G__28974 = l;
var G__28975 = m;
var G__28976 = n;
var G__28977 = o;
var G__28978 = p;
var G__28979 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978,G__28979) : self__.dispatch_fn.call(null,G__28963,G__28964,G__28965,G__28966,G__28967,G__28968,G__28969,G__28970,G__28971,G__28972,G__28973,G__28974,G__28975,G__28976,G__28977,G__28978,G__28979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__28980 = a;
var G__28981 = b;
var G__28982 = c;
var G__28983 = d;
var G__28984 = e;
var G__28985 = f;
var G__28986 = g;
var G__28987 = h;
var G__28988 = i;
var G__28989 = j;
var G__28990 = k;
var G__28991 = l;
var G__28992 = m;
var G__28993 = n;
var G__28994 = o;
var G__28995 = p;
var G__28996 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996) : target_fn.call(null,G__28980,G__28981,G__28982,G__28983,G__28984,G__28985,G__28986,G__28987,G__28988,G__28989,G__28990,G__28991,G__28992,G__28993,G__28994,G__28995,G__28996));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__28997 = a;
var G__28998 = b;
var G__28999 = c;
var G__29000 = d;
var G__29001 = e;
var G__29002 = f;
var G__29003 = g;
var G__29004 = h;
var G__29005 = i;
var G__29006 = j;
var G__29007 = k;
var G__29008 = l;
var G__29009 = m;
var G__29010 = n;
var G__29011 = o;
var G__29012 = p;
var G__29013 = q;
var G__29014 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014) : self__.dispatch_fn.call(null,G__28997,G__28998,G__28999,G__29000,G__29001,G__29002,G__29003,G__29004,G__29005,G__29006,G__29007,G__29008,G__29009,G__29010,G__29011,G__29012,G__29013,G__29014));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29015 = a;
var G__29016 = b;
var G__29017 = c;
var G__29018 = d;
var G__29019 = e;
var G__29020 = f;
var G__29021 = g;
var G__29022 = h;
var G__29023 = i;
var G__29024 = j;
var G__29025 = k;
var G__29026 = l;
var G__29027 = m;
var G__29028 = n;
var G__29029 = o;
var G__29030 = p;
var G__29031 = q;
var G__29032 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027,G__29028,G__29029,G__29030,G__29031,G__29032) : target_fn.call(null,G__29015,G__29016,G__29017,G__29018,G__29019,G__29020,G__29021,G__29022,G__29023,G__29024,G__29025,G__29026,G__29027,G__29028,G__29029,G__29030,G__29031,G__29032));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29033 = a;
var G__29034 = b;
var G__29035 = c;
var G__29036 = d;
var G__29037 = e;
var G__29038 = f;
var G__29039 = g;
var G__29040 = h;
var G__29041 = i;
var G__29042 = j;
var G__29043 = k;
var G__29044 = l;
var G__29045 = m;
var G__29046 = n;
var G__29047 = o;
var G__29048 = p;
var G__29049 = q;
var G__29050 = r;
var G__29051 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049,G__29050,G__29051) : self__.dispatch_fn.call(null,G__29033,G__29034,G__29035,G__29036,G__29037,G__29038,G__29039,G__29040,G__29041,G__29042,G__29043,G__29044,G__29045,G__29046,G__29047,G__29048,G__29049,G__29050,G__29051));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29052 = a;
var G__29053 = b;
var G__29054 = c;
var G__29055 = d;
var G__29056 = e;
var G__29057 = f;
var G__29058 = g;
var G__29059 = h;
var G__29060 = i;
var G__29061 = j;
var G__29062 = k;
var G__29063 = l;
var G__29064 = m;
var G__29065 = n;
var G__29066 = o;
var G__29067 = p;
var G__29068 = q;
var G__29069 = r;
var G__29070 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070) : target_fn.call(null,G__29052,G__29053,G__29054,G__29055,G__29056,G__29057,G__29058,G__29059,G__29060,G__29061,G__29062,G__29063,G__29064,G__29065,G__29066,G__29067,G__29068,G__29069,G__29070));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__29071 = a;
var G__29072 = b;
var G__29073 = c;
var G__29074 = d;
var G__29075 = e;
var G__29076 = f;
var G__29077 = g;
var G__29078 = h;
var G__29079 = i;
var G__29080 = j;
var G__29081 = k;
var G__29082 = l;
var G__29083 = m;
var G__29084 = n;
var G__29085 = o;
var G__29086 = p;
var G__29087 = q;
var G__29088 = r;
var G__29089 = s;
var G__29090 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090) : self__.dispatch_fn.call(null,G__29071,G__29072,G__29073,G__29074,G__29075,G__29076,G__29077,G__29078,G__29079,G__29080,G__29081,G__29082,G__29083,G__29084,G__29085,G__29086,G__29087,G__29088,G__29089,G__29090));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__29091 = a;
var G__29092 = b;
var G__29093 = c;
var G__29094 = d;
var G__29095 = e;
var G__29096 = f;
var G__29097 = g;
var G__29098 = h;
var G__29099 = i;
var G__29100 = j;
var G__29101 = k;
var G__29102 = l;
var G__29103 = m;
var G__29104 = n;
var G__29105 = o;
var G__29106 = p;
var G__29107 = q;
var G__29108 = r;
var G__29109 = s;
var G__29110 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110) : target_fn.call(null,G__29091,G__29092,G__29093,G__29094,G__29095,G__29096,G__29097,G__29098,G__29099,G__29100,G__29101,G__29102,G__29103,G__29104,G__29105,G__29106,G__29107,G__29108,G__29109,G__29110));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__29112 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__29112);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__16245__auto__,writer__16246__auto__,opt__16247__auto__){
return cljs.core._write(writer__16246__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__29117 = msg;
return Error(G__29117);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__29122 = x;
var G__29123 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29122,G__29123) : pred.call(null,G__29122,G__29123));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__29124 = y;
var G__29125 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__29124,G__29125) : pred.call(null,G__29124,G__29125));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map